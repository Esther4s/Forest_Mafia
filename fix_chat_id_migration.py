#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö chat_id —Å INTEGER –Ω–∞ BIGINT
"""

import os
import sys
import logging
from database_psycopg2 import DatabaseConnection

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def fix_chat_id_columns():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö chat_id —Å INTEGER –Ω–∞ BIGINT"""
    logger.info("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö chat_id...")
    
    try:
        db_manager = DatabaseConnection()
        with db_manager.get_connection() as conn:
            cursor = conn.cursor()
        
        # –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –∏ –∫–æ–ª–æ–Ω–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
        columns_to_fix = [
            ("games", "chat_id"),
            ("games", "thread_id"),
            ("chat_settings", "chat_id"),
            ("active_effects", "chat_id"),
        ]
        
        for table_name, column_name in columns_to_fix:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
                cursor.execute("""
                    SELECT EXISTS (
                        SELECT FROM information_schema.tables 
                        WHERE table_name = %s
                    );
                """, (table_name,))
                
                table_exists = cursor.fetchone()[0]
                if not table_exists:
                    logger.info(f"‚è≠Ô∏è –¢–∞–±–ª–∏—Ü–∞ {table_name} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∞
                cursor.execute("""
                    SELECT EXISTS (
                        SELECT FROM information_schema.columns 
                        WHERE table_name = %s AND column_name = %s
                    );
                """, (table_name, column_name))
                
                column_exists = cursor.fetchone()[0]
                if not column_exists:
                    logger.info(f"‚è≠Ô∏è –ö–æ–ª–æ–Ω–∫–∞ {table_name}.{column_name} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                    continue
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
                cursor.execute("""
                    SELECT data_type 
                    FROM information_schema.columns 
                    WHERE table_name = %s AND column_name = %s;
                """, (table_name, column_name))
                
                current_type = cursor.fetchone()[0]
                logger.info(f"üìä –¢–µ–∫—É—â–∏–π —Ç–∏–ø {table_name}.{column_name}: {current_type}")
                
                if current_type == 'bigint':
                    logger.info(f"‚úÖ {table_name}.{column_name} —É–∂–µ –∏–º–µ–µ—Ç —Ç–∏–ø BIGINT")
                    continue
                
                # –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
                logger.info(f"üîÑ –ò–∑–º–µ–Ω—è–µ–º —Ç–∏–ø {table_name}.{column_name} –Ω–∞ BIGINT...")
                cursor.execute(f"""
                    ALTER TABLE {table_name} 
                    ALTER COLUMN {column_name} TYPE BIGINT;
                """)
                
                logger.info(f"‚úÖ {table_name}.{column_name} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ BIGINT")
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ {table_name}.{column_name}: {e}")
                continue
        
            # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            conn.commit()
            logger.info("‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
            return True
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def verify_fix():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏–ª–æ—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    
    try:
        db_manager = DatabaseConnection()
        with db_manager.get_connection() as conn:
            cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
        tables_to_check = ["games", "chat_settings", "active_effects"]
        
        for table_name in tables_to_check:
            try:
                cursor.execute("""
                    SELECT column_name, data_type 
                    FROM information_schema.columns 
                    WHERE table_name = %s AND column_name IN ('chat_id', 'thread_id')
                    ORDER BY column_name;
                """, (table_name,))
                
                columns = cursor.fetchall()
                if columns:
                    logger.info(f"üìä –¢–∞–±–ª–∏—Ü–∞ {table_name}:")
                    for column_name, data_type in columns:
                        status = "‚úÖ" if data_type == 'bigint' else "‚ùå"
                        logger.info(f"  {status} {column_name}: {data_type}")
                else:
                    logger.info(f"‚è≠Ô∏è –í —Ç–∞–±–ª–∏—Ü–µ {table_name} –Ω–µ—Ç –∫–æ–ª–æ–Ω–æ–∫ chat_id/thread_id")
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã {table_name}: {e}")
        
            return True
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False

def test_large_chat_id():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –±–æ–ª—å—à–∏–º chat_id"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –±–æ–ª—å—à–∏–º chat_id...")
    
    test_chat_id = -1002785929250  # –¢–æ—Ç –∂–µ ID –∏–∑ –ª–æ–≥–æ–≤
    
    try:
        db_manager = DatabaseConnection()
        with db_manager.get_connection() as conn:
            cursor = conn.cursor()
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ chat_settings
        try:
            cursor.execute("""
                INSERT INTO chat_settings (chat_id, test_mode, min_players) 
                VALUES (%s, %s, %s)
                ON CONFLICT (chat_id) DO UPDATE SET
                    test_mode = EXCLUDED.test_mode,
                    min_players = EXCLUDED.min_players,
                    updated_at = CURRENT_TIMESTAMP;
            """, (test_chat_id, False, 4))
            
            conn.commit()
            logger.info(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å chat_id {test_chat_id} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∞")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
            cursor.execute("DELETE FROM chat_settings WHERE chat_id = %s", (test_chat_id,))
            conn.commit()
            logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ–ª—å—à–æ–≥–æ chat_id: {e}")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö chat_id")
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö chat_id")
    
    # –®–∞–≥ 1: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
    if fix_chat_id_columns():
        logger.info("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        
        # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if verify_fix():
            logger.info("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            # –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –±–æ–ª—å—à–∏–º chat_id
            if test_large_chat_id():
                logger.info("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–±–ª–µ–º–∞ —Å chat_id –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
            else:
                logger.error("‚ùå –¢–µ—Å—Ç —Å –±–æ–ª—å—à–∏–º chat_id –Ω–µ –ø—Ä–æ—à–µ–ª")
        else:
            logger.error("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞")
    else:
        logger.error("‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —É–¥–∞–ª–æ—Å—å")
    
    logger.info("üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
