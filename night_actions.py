import random
from typing import Dict, List, Optional
from game_logic import Game, Player, Role, Team

class NightActions:
    def __init__(self, game: Game):
        self.game = game
        self.wolf_targets = {}  # user_id -> target_user_id
        self.fox_targets = {}   # user_id -> target_user_id
        self.beaver_targets = {} # user_id -> target_user_id
        self.mole_targets = {}  # user_id -> target_user_id
    
    def set_wolf_target(self, wolf_id: int, target_id: int) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –≤–æ–ª–∫–∞"""
        wolf = self.game.players.get(wolf_id)
        target = self.game.players.get(target_id)
        
        if not wolf or not target:
            return False
        
        if wolf.role != Role.WOLF or not wolf.is_alive:
            return False
        
        if not target.is_alive:
            return False
        
        # –í–æ–ª–∫–∏ –Ω–µ –º–æ–≥—É—Ç –µ—Å—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞
        if target.role == Role.WOLF:
            return False
        
        self.wolf_targets[wolf_id] = target_id
        return True
    
    def set_fox_target(self, fox_id: int, target_id: int) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –ª–∏—Å—ã"""
        fox = self.game.players.get(fox_id)
        target = self.game.players.get(target_id)
        
        if not fox or not target:
            return False
        
        if fox.role != Role.FOX or not fox.is_alive:
            return False
        
        if not target.is_alive:
            return False
        
        # –õ–∏—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –≤–æ—Ä–æ–≤–∞—Ç—å —É –±–æ–±—Ä–∞ (–æ–Ω –∑–∞—â–∏—â–µ–Ω)
        if target.role == Role.BEAVER:
            return False
        
        self.fox_targets[fox_id] = target_id
        return True
    
    def set_beaver_target(self, beaver_id: int, target_id: int) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –±–æ–±—Ä–∞"""
        beaver = self.game.players.get(beaver_id)
        target = self.game.players.get(target_id)
        
        if not beaver or not target:
            return False
        
        if beaver.role != Role.BEAVER or not beaver.is_alive:
            return False
        
        if not target.is_alive:
            return False
        
        # –ë–æ–±—ë—Ä –º–æ–∂–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–º, —É –∫–æ–≥–æ —É–∫—Ä–∞–ª–∏ –µ–¥—É
        if target.is_fox_stolen == 0:
            return False
        
        self.beaver_targets[beaver_id] = target_id
        return True
    
    def set_mole_target(self, mole_id: int, target_id: int) -> bool:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –∫—Ä–æ—Ç–∞"""
        mole = self.game.players.get(mole_id)
        target = self.game.players.get(target_id)
        
        if not mole or not target:
            return False
        
        if mole.role != Role.MOLE or not mole.is_alive:
            return False
        
        if not target.is_alive:
            return False
        
        # –ö—Ä–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–µ–±—è
        if mole_id == target_id:
            return False
        
        self.mole_targets[mole_id] = target_id
        return True
    
    def process_all_actions(self) -> Dict[str, List[str]]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"""
        results = {
            "wolves": [],
            "fox": [],
            "beaver": [],
            "mole": [],
            "deaths": []
        }
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É: –í–æ–ª–∫–∏ -> –õ–∏—Å–∞ -> –ë–æ–±—ë—Ä -> –ö—Ä–æ—Ç
        
        # 1. –í–æ–ª–∫–∏ –µ–¥—è—Ç
        if self.game.current_round > 1:  # –í –ø–µ—Ä–≤—É—é –Ω–æ—á—å –≤–æ–ª–∫–∏ –Ω–µ –µ–¥—è—Ç
            results["wolves"] = self._process_wolf_actions()
        
        # 2. –õ–∏—Å–∞ –≤–æ—Ä—É–µ—Ç
        results["fox"] = self._process_fox_actions()
        
        # 3. –ë–æ–±—ë—Ä –ø–æ–º–æ–≥–∞–µ—Ç
        results["beaver"] = self._process_beaver_actions()
        
        # 4. –ö—Ä–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç
        results["mole"] = self._process_mole_actions()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ—Ä—Ç–∏ –æ—Ç –∫—Ä–∞–∂–∏ –ª–∏—Å—ã
        results["deaths"] = self._check_fox_deaths()
        
        return results
    
    def _process_wolf_actions(self) -> List[str]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤–æ–ª–∫–æ–≤"""
        results = []
        
        if not self.wolf_targets:
            return results
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–∞ –∑–∞ –∫–∞–∂–¥—É—é —Ü–µ–ª—å
        target_votes = {}
        for target_id in self.wolf_targets.values():
            target_votes[target_id] = target_votes.get(target_id, 0) + 1
        
        # –ù–∞—Ö–æ–¥–∏–º —Ü–µ–ª—å —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤
        if target_votes:
            max_votes = max(target_votes.values())
            max_vote_targets = [tid for tid, votes in target_votes.items() if votes == max_votes]
            
            # –ï—Å–ª–∏ –Ω–∏—á—å—è, –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ü–µ–ª—å
            if len(max_vote_targets) > 1:
                target_id = random.choice(max_vote_targets)
            else:
                target_id = max_vote_targets[0]
            
            # –£–±–∏–≤–∞–µ–º —Ü–µ–ª—å
            target = self.game.players[target_id]
            target.is_alive = False
            
            results.append(f"üê∫ –í–æ–ª–∫–∏ —Å—ä–µ–ª–∏ {target.username}!")
        
        return results
    
    def _process_fox_actions(self) -> List[str]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Å—ã"""
        results = []
        
        for fox_id, target_id in self.fox_targets.items():
            fox = self.game.players[fox_id]
            target = self.game.players[target_id]
            
            if fox and target and fox.is_alive and target.is_alive:
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫—Ä–∞–∂
                target.is_fox_stolen += 1
                
                if target.is_fox_stolen == 1:
                    results.append(f"ü¶ä –õ–∏—Å–∞ —É–∫—Ä–∞–ª–∞ –∑–∞–ø–∞—Å—ã —É {target.username}!")
                elif target.is_fox_stolen == 2:
                    results.append(f"ü¶ä –õ–∏—Å–∞ —Å–Ω–æ–≤–∞ —É–∫—Ä–∞–ª–∞ –∑–∞–ø–∞—Å—ã —É {target.username}! –£ –Ω–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –µ–¥—ã –Ω–∞ –∑–∏–º—É.")
                else:
                    results.append(f"ü¶ä –õ–∏—Å–∞ —É–∫—Ä–∞–ª–∞ –∑–∞–ø–∞—Å—ã —É {target.username} (—É–∂–µ {target.is_fox_stolen} —Ä–∞–∑)!")
        
        return results
    
    def _process_beaver_actions(self) -> List[str]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –±–æ–±—Ä–∞"""
        results = []
        
        for beaver_id, target_id in self.beaver_targets.items():
            beaver = self.game.players[beaver_id]
            target = self.game.players[target_id]
            
            if beaver and target and beaver.is_alive and target.is_alive:
                if target.is_fox_stolen > 0:
                    # –ë–æ–±—ë—Ä –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç –≤–µ—Å—å —É—â–µ—Ä–±
                    target.is_fox_stolen = 0
                    target.is_beaver_protected = True
                    results.append(f"ü¶¶ –ë–æ–±—ë—Ä –≤–µ—Ä–Ω—É–ª –∑–∞–ø–∞—Å—ã {target.username}!")
        
        return results
    
    def _process_mole_actions(self) -> List[str]:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –∫—Ä–æ—Ç–∞"""
        results = []
        
        for mole_id, target_id in self.mole_targets.items():
            mole = self.game.players[mole_id]
            target = self.game.players[target_id]
            
            if mole and target and mole.is_alive and target.is_alive:
                team_name = "–•–∏—â–Ω–∏–∫–∏" if target.team == Team.PREDATORS else "–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ"
                results.append(f"ü¶´ –ö—Ä–æ—Ç —É–∑–Ω–∞–ª, —á—Ç–æ {target.username} - {team_name}")
        
        return results
    
    def _check_fox_deaths(self) -> List[str]:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–º–µ—Ä—Ç–∏ –æ—Ç –∫—Ä–∞–∂–∏ –ª–∏—Å—ã"""
        deaths = []
        
        for player in self.game.players.values():
            if player.is_alive and player.is_fox_stolen >= 2 and not player.is_beaver_protected:
                player.is_alive = False
                deaths.append(f"ü¶ä {player.username} —É—à–µ–ª –∂–∏—Ç—å –≤ —Å–æ—Å–µ–¥–Ω–∏–π –ª–µ—Å –∏–∑-–∑–∞ –∫—Ä–∞–∂–∏ –∑–∞–ø–∞—Å–æ–≤!")
        
        return deaths
    
    def get_player_actions(self, player_id: int) -> Dict[str, any]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–≥—Ä–æ–∫–∞"""
        player = self.game.players.get(player_id)
        if not player or not player.is_alive:
            return {}
        
        actions = {}
        
        if player.role == Role.WOLF:
            # –í–æ–ª–∫ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å –¥–ª—è –µ–¥—ã
            alive_targets = [p for p in self.game.get_alive_players() if p.role != Role.WOLF]
            actions["type"] = "wolf"
            actions["targets"] = alive_targets
            actions["current_target"] = self.wolf_targets.get(player_id)
        
        elif player.role == Role.FOX:
            # –õ–∏—Å–∞ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å –¥–ª—è –∫—Ä–∞–∂–∏
            alive_targets = [p for p in self.game.get_alive_players() if p.role != Role.BEAVER]
            actions["type"] = "fox"
            actions["targets"] = alive_targets
            actions["current_target"] = self.fox_targets.get(player_id)
        
        elif player.role == Role.BEAVER:
            # –ë–æ–±—ë—Ä –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–º, —É –∫–æ–≥–æ —É–∫—Ä–∞–ª–∏ –µ–¥—É
            stolen_targets = [p for p in self.game.get_alive_players() if p.is_fox_stolen > 0]
            actions["type"] = "beaver"
            actions["targets"] = stolen_targets
            actions["current_target"] = self.beaver_targets.get(player_id)
        
        elif player.role == Role.MOLE:
            # –ö—Ä–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª—é–±–æ–≥–æ –∂–∏–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            alive_targets = [p for p in self.game.get_alive_players() if p.user_id != player_id]
            actions["type"] = "mole"
            actions["targets"] = alive_targets
            actions["current_target"] = self.mole_targets.get(player_id)
        
        return actions
    
    def clear_actions(self):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"""
        self.wolf_targets.clear()
        self.fox_targets.clear()
        self.beaver_targets.clear()
        self.mole_targets.clear()
