#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –õ–µ—Å –∏ –≤–æ–ª–∫–∏ Bot
"""

import logging
from typing import Dict, Optional
from telegram import Update
from telegram.ext import ContextTypes

from game_logic import Game, GamePhase, Role
from night_actions import NightActions
from night_interface import NightInterface

logger = logging.getLogger(__name__)


class NightManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
    
    def __init__(self):
        self.night_actions: Dict[int, NightActions] = {}
        self.night_interfaces: Dict[int, NightInterface] = {}
    
    def get_or_create_night_actions(self, game: Game) -> NightActions:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–≥—Ä—ã"""
        if game.chat_id not in self.night_actions:
            self.night_actions[game.chat_id] = NightActions(game)
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–≥—Ä—ã {game.chat_id}")
        
        return self.night_actions[game.chat_id]
    
    def get_or_create_night_interface(self, game: Game) -> NightInterface:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–≥—Ä—ã"""
        if game.chat_id not in self.night_interfaces:
            night_actions = self.get_or_create_night_actions(game)
            self.night_interfaces[game.chat_id] = NightInterface(game, night_actions)
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–≥—Ä—ã {game.chat_id}")
        
        return self.night_interfaces[game.chat_id]
    
    async def start_night_phase(self, game: Game, context: ContextTypes.DEFAULT_TYPE):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ—á–Ω—É—é —Ñ–∞–∑—É"""
        game.start_night()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        night_interface = self.get_or_create_night_interface(game)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫–∞–º —Å –Ω–æ—á–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏
        await night_interface.send_role_reminders(context)
        
        logger.info(f"üåô –ù–∞—á–∞–ª–∞—Å—å –Ω–æ—á–Ω–∞—è —Ñ–∞–∑–∞ –¥–ª—è –∏–≥—Ä—ã {game.chat_id} (—Ä–∞—É–Ω–¥ {game.current_round})")
    
    async def process_night_actions(self, game: Game, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"""
        night_actions = self.get_or_create_night_actions(game)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
        results = night_actions.process_all_actions()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        night_interface = self.get_or_create_night_interface(game)
        await night_interface.send_night_results(context, results)
        
        # –û—á–∏—â–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è
        night_actions.clear_actions()
        
        logger.info(f"üåô –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–ª—è –∏–≥—Ä—ã {game.chat_id}")
    
    async def handle_night_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback –æ—Ç –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
        query = update.callback_query
        user_id = query.from_user.id
        
        # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä—É –∏–≥—Ä–æ–∫–∞
        game = self._find_player_game(user_id)
        if not game:
            await query.answer("‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ!", show_alert=True)
            return
        
        if game.phase != GamePhase.NIGHT:
            await query.answer("‚ùå –°–µ–π—á–∞—Å –Ω–µ –Ω–æ—á–Ω–∞—è —Ñ–∞–∑–∞!", show_alert=True)
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        night_interface = self.get_or_create_night_interface(game)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
        await night_interface.handle_night_action(update, context)
    
    def _find_player_game(self, user_id: int) -> Optional[Game]:
        """–ù–∞—Ö–æ–¥–∏—Ç –∏–≥—Ä—É –∏–≥—Ä–æ–∫–∞"""
        # –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GameStateManager
        # –ü–æ–∫–∞ —á—Ç–æ –∏—â–µ–º –ø–æ –≤—Å–µ–º –∏–≥—Ä–∞–º
        for game in self.night_actions.values():
            if user_id in game.game.players:
                return game.game
        return None
    
    def cleanup_game(self, chat_id: int):
        """–û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã"""
        if chat_id in self.night_actions:
            del self.night_actions[chat_id]
        if chat_id in self.night_interfaces:
            del self.night_interfaces[chat_id]
        logger.info(f"üßπ –û—á–∏—â–µ–Ω—ã –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–≥—Ä—ã {chat_id}")
    
    def get_night_actions_summary(self, game: Game) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–≤–æ–¥–∫—É –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
        if game.chat_id not in self.night_actions:
            return "üåô –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
        
        night_actions = self.night_actions[game.chat_id]
        return night_actions.get_action_summary()
    
    def are_all_night_actions_completed(self, game: Game) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—Å–µ –ª–∏ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"""
        if game.chat_id not in self.night_actions:
            return False
        
        night_actions = self.night_actions[game.chat_id]
        return night_actions.are_all_actions_completed()
    
    def get_player_night_actions(self, game: Game, player_id: int) -> Dict:
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–∞"""
        if game.chat_id not in self.night_actions:
            return {}
        
        night_actions = self.night_actions[game.chat_id]
        return night_actions.get_player_actions(player_id)
