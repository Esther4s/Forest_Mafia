#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–õ–æ–≥–∏–∫–∞ —Ä–æ–ª–∏ –ë–æ–±—ë—Ä –≤ –∏–≥—Ä–µ "–õ–µ—Å –∏ –í–æ–ª–∫–∏"
"""

from typing import Optional, Tuple
from game_logic import Player, Role


class Beaver:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–∏–∫–∏ —Ä–æ–ª–∏ –ë–æ–±—ë—Ä
    –ë–æ–±—ë—Ä ‚Äî –∑–∞—â–∏—Ç–Ω–∏–∫. –ï–≥–æ –∑–∞–¥–∞—á–∞ –æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–∏–ø–∞—Å—ã (—Å–≤–æ–∏ –∏–ª–∏ —á—É–∂–∏–µ).
    """
    
    @staticmethod
    def defend(target: Optional[Player] = None) -> str:
        """
        –ë–æ–±—ë—Ä –∑–∞—â–∏—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ —Å–µ–±—è
        
        Args:
            target: –¶–µ–ª–µ–≤–æ–π –∏–≥—Ä–æ–∫ –¥–ª—è –∑–∞—â–∏—Ç—ã (None = –∑–∞—â–∏—Ç–∞ —Å–µ–±—è)
            
        Returns:
            str: –°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∑–∞—â–∏—Ç—ã
        """
        if target is None:
            # –ë–æ–±—ë—Ä –∑–∞—â–∏—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å–µ–±—è
            return "ü¶¶ –ë–æ–±—ë—Ä —Å—Ç–æ—Ä–æ–∂–∏—Ç —Å–≤–æ–∏ –ø—Ä–∏–ø–∞—Å—ã, –∏ –Ω–∏–∫—Ç–æ –Ω–µ —Ä–µ—à–∏–ª—Å—è —Å—É–Ω—É—Ç—å—Å—è."
        
        if not target or not target.is_alive:
            return f"ü¶¶ –ë–æ–±—ë—Ä –ø—Ä–∏—à—ë–ª –∫ –Ω–æ—Ä–∫–µ, –Ω–æ –æ–Ω–∞ –±—ã–ª–∞ –ø—É—Å—Ç–∞ –∏ —Ç–∏—Ö–∞, –∫–∞–∫ –Ω–∞ –∫–ª–∞–¥–±–∏—â–µ."
        
        # –ë–æ–±—ë—Ä –¥–µ–∂—É—Ä–∏—Ç —É –Ω–æ—Ä–∫–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        return f"ü¶¶ –ë–æ–±—ë—Ä –≤—Å—é –Ω–æ—á—å —Å–∏–¥–µ–ª —É –Ω–æ—Ä–∫–∏ {target.username}, –Ω–æ –Ω–∏–∫—Ç–æ —Ç–∞–∫ –∏ –Ω–µ –ø—Ä–∏—à—ë–ª."
    
    @staticmethod
    def protect_from_fox(target: Player, fox: Player) -> Tuple[str, bool]:
        """
        –ë–æ–±—ë—Ä –∑–∞—â–∏—â–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ –æ—Ç –ª–∏—Å—ã
        
        Args:
            target: –ó–∞—â–∏—â–∞–µ–º—ã–π –∏–≥—Ä–æ–∫
            fox: –õ–∏—Å–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—ã—Ç–∞–µ—Ç—Å—è —É–∫—Ä–∞—Å—Ç—å
            
        Returns:
            Tuple[str, bool]: (—Å–æ–æ–±—â–µ–Ω–∏–µ, —É—Å–ø–µ—Ö –∑–∞—â–∏—Ç—ã)
        """
        if not target or not target.is_alive:
            return f"ü¶¶ –ë–æ–±—ë—Ä –ø—Ä–∏—à—ë–ª –∫ –Ω–æ—Ä–∫–µ, –Ω–æ –æ–Ω–∞ –±—ã–ª–∞ –ø—É—Å—Ç–∞ –∏ —Ç–∏—Ö–∞, –∫–∞–∫ –Ω–∞ –∫–ª–∞–¥–±–∏—â–µ.", False
        
        if not fox or not fox.is_alive:
            return f"ü¶¶ –ë–æ–±—ë—Ä –¥–µ–∂—É—Ä–∏–ª —É –Ω–æ—Ä–∫–∏ {target.username}, –Ω–æ –ª–∏—Å–∞ —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å.", True
        
        # –ë–æ–±—ë—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –ª–∏—Å—ã
        return f"ü¶¶ –ë–æ–±—ë—Ä –¥–µ–∂—É—Ä–∏–ª —É –Ω–æ—Ä–∫–∏ {target.username}, –∏ –õ–∏—Å–∞ –Ω–µ —Å–º–æ–≥–ª–∞ –Ω–∏—á–µ–≥–æ —É–∫—Ä–∞—Å—Ç—å.", True
    
    @staticmethod
    def protect_from_wolf(target: Player, wolf: Player) -> Tuple[str, bool]:
        """
        –ë–æ–±—ë—Ä –∑–∞—â–∏—â–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ –æ—Ç –≤–æ–ª–∫–∞
        
        Args:
            target: –ó–∞—â–∏—â–∞–µ–º—ã–π –∏–≥—Ä–æ–∫
            wolf: –í–æ–ª–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è —É–±–∏—Ç—å
            
        Returns:
            Tuple[str, bool]: (—Å–æ–æ–±—â–µ–Ω–∏–µ, —É—Å–ø–µ—Ö –∑–∞—â–∏—Ç—ã)
        """
        if not target or not target.is_alive:
            return f"ü¶¶ –ë–æ–±—ë—Ä –ø—Ä–∏—à—ë–ª –∫ –Ω–æ—Ä–∫–µ, –Ω–æ –æ–Ω–∞ –±—ã–ª–∞ –ø—É—Å—Ç–∞ –∏ —Ç–∏—Ö–∞, –∫–∞–∫ –Ω–∞ –∫–ª–∞–¥–±–∏—â–µ.", False
        
        if not wolf or not wolf.is_alive:
            return f"ü¶¶ –ë–æ–±—ë—Ä –¥–µ–∂—É—Ä–∏–ª —É –Ω–æ—Ä–∫–∏ {target.username}, –Ω–æ –≤–æ–ª–∫ —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è.", True
        
        # –ë–æ–±—ë—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –≤–æ–ª–∫–∞
        return f"ü¶¶ –í–æ–ª–∫ –ø–æ–¥–∫—Ä–∞–ª—Å—è –∫ {target.username}, –Ω–æ –ë–æ–±—ë—Ä –≤—Å—Ç–∞–ª –Ω–∞ –∑–∞—â–∏—Ç—É. –í–æ–ª–∫—É –ø—Ä–∏—à–ª–æ—Å—å —Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è.", True
    
    @staticmethod
    def is_protected_from_fox(target: Player) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫ –æ—Ç –ª–∏—Å—ã
        
        Args:
            target: –ò–≥—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            bool: –ó–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫
        """
        if not target or not target.is_alive:
            return False
        
        # –ë–æ–±—ë—Ä –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—â—ë–Ω –æ—Ç –ª–∏—Å—ã
        if target.role == Role.BEAVER:
            return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫ –±–æ–±—Ä–æ–º
        return getattr(target, 'is_beaver_protected', False)
    
    @staticmethod
    def is_protected_from_wolf(target: Player) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫ –æ—Ç –≤–æ–ª–∫–∞
        
        Args:
            target: –ò–≥—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            bool: –ó–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫
        """
        if not target or not target.is_alive:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫ –±–æ–±—Ä–æ–º
        return getattr(target, 'is_beaver_protected', False)
    
    @staticmethod
    def set_protection(target: Player, protected: bool = True):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞—â–∏—Ç—É –±–æ–±—Ä–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞
        
        Args:
            target: –ò–≥—Ä–æ–∫
            protected: –ó–∞—â–∏—â—ë–Ω –ª–∏ –∏–≥—Ä–æ–∫
        """
        if target:
            target.is_beaver_protected = protected
    
    @staticmethod
    def restore_supplies(target: Player) -> Tuple[str, bool]:
        """
        –ë–æ–±—ë—Ä –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏–ø–∞—Å—ã –∏–≥—Ä–æ–∫–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∏—Ö —É–∫—Ä–∞–ª–∏
        
        Args:
            target: –ò–≥—Ä–æ–∫ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ø–∞—Å–æ–≤
            
        Returns:
            Tuple[str, bool]: (—Å–æ–æ–±—â–µ–Ω–∏–µ, —É—Å–ø–µ—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è)
        """
        if not target or not target.is_alive:
            return f"ü¶¶ –ë–æ–±—ë—Ä –ø—Ä–∏—à—ë–ª –∫ –Ω–æ—Ä–∫–µ, –Ω–æ –æ–Ω–∞ –±—ã–ª–∞ –ø—É—Å—Ç–∞ –∏ —Ç–∏—Ö–∞, –∫–∞–∫ –Ω–∞ –∫–ª–∞–¥–±–∏—â–µ.", False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –ø—Ä–∏–ø–∞—Å—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        if getattr(target, 'stolen_supplies', 0) <= 0:
            return f"ü¶¶ –ë–æ–±—ë—Ä –∑–∞–≥–ª—è–Ω—É–ª –∫ –Ω–æ—Ä–∫–µ {target.username}, –Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –±—ã–ª–æ –Ω–µ—á–µ–≥–æ.", False
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ø–∞—Å—ã (–Ω–æ –Ω–µ –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞)
        stolen_count = target.stolen_supplies
        restored_count = min(stolen_count, target.max_supplies - target.supplies)
        
        if restored_count > 0:
            target.supplies += restored_count
            target.stolen_supplies -= restored_count
            
            if restored_count == stolen_count:
                return f"ü¶¶ –ë–æ–±—ë—Ä –≤–µ—Ä–Ω—É–ª –≤—Å–µ —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –ø—Ä–∏–ø–∞—Å—ã {target.username}! –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ {target.supplies} –ø—Ä–∏–ø–∞—Å–æ–≤.", True
            else:
                return f"ü¶¶ –ë–æ–±—ë—Ä –≤–µ—Ä–Ω—É–ª {restored_count} –ø—Ä–∏–ø–∞—Å–æ–≤ {target.username}! –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ {target.supplies} –ø—Ä–∏–ø–∞—Å–æ–≤.", True
        else:
            return f"ü¶¶ –ë–æ–±—ë—Ä –∑–∞–≥–ª—è–Ω—É–ª –∫ –Ω–æ—Ä–∫–µ {target.username}, –Ω–æ —É –Ω–µ–≥–æ —É–∂–µ –ø–æ–ª–Ω—ã–µ –∑–∞–ø–∞—Å—ã.", False
    
    @staticmethod
    def can_restore_supplies(target: Player) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –±–æ–±—ë—Ä –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ø–∞—Å—ã –∏–≥—Ä–æ–∫–∞
        
        Args:
            target: –ò–≥—Ä–æ–∫
            
        Returns:
            bool: –ú–æ–∂–µ—Ç –ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ø–∞—Å—ã
        """
        if not target or not target.is_alive:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –ø—Ä–∏–ø–∞—Å—ã –∏ –º–µ—Å—Ç–æ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        stolen_supplies = getattr(target, 'stolen_supplies', 0)
        return stolen_supplies > 0 and target.supplies < target.max_supplies
    
    @staticmethod
    def get_restoration_info(target: Player) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ø–∞—Å–æ–≤
        
        Args:
            target: –ò–≥—Ä–æ–∫
            
        Returns:
            str: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
        """
        if not target or not target.is_alive:
            return "–ú—ë—Ä—Ç–≤"
        
        stolen_supplies = getattr(target, 'stolen_supplies', 0)
        if stolen_supplies <= 0:
            return "–ù–µ—Ç —É–∫—Ä–∞–¥–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ø–∞—Å–æ–≤"
        
        if target.supplies >= target.max_supplies:
            return f"{stolen_supplies} —É–∫—Ä–∞–¥–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ø–∞—Å–æ–≤ (–ø–æ–ª–Ω—ã–µ –∑–∞–ø–∞—Å—ã)"
        
        can_restore = min(stolen_supplies, target.max_supplies - target.supplies)
        return f"{stolen_supplies} —É–∫—Ä–∞–¥–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ø–∞—Å–æ–≤ (–º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {can_restore})"
    
    @staticmethod
    def get_protection_status(target: Player) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞—â–∏—Ç—ã –∏–≥—Ä–æ–∫–∞
        
        Args:
            target: –ò–≥—Ä–æ–∫
            
        Returns:
            str: –°—Ç–∞—Ç—É—Å –∑–∞—â–∏—Ç—ã
        """
        if not target or not target.is_alive:
            return "–ú—ë—Ä—Ç–≤"
        
        if target.role == Role.BEAVER:
            return "–ë–æ–±—ë—Ä (—Å–∞–º–æ–∑–∞—â–∏—Ç–∞)"
        
        if getattr(target, 'is_beaver_protected', False):
            return "–ó–∞—â–∏—â—ë–Ω –±–æ–±—Ä–æ–º"
        
        return "–ù–µ –∑–∞—â–∏—â—ë–Ω"
