#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç —á–∏—Å—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –º–∞—Ñ–∏–∏ –±–µ–∑ –ª–µ—Å–æ–≤
"""

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['BOT_TOKEN'] = 'test_token_123456789'
os.environ['DATABASE_URL'] = 'postgresql://postgres:JOoSxKXEcnXImgvwCWsfcQQDlnWSDNyD@hopper.proxy.rlwy.net:23049/railway'

print('üöÄ –¢–ï–°–¢ –ß–ò–°–¢–û–ô –í–ï–†–°–ò–ò –ú–ê–§–ò–ò')
print('=' * 50)

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã"""
    print('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...')
    try:
        from bot import ForestMafiaBot
        from game_logic import Game, GamePhase, Role, Team, Player
        from night_actions import NightActions
        from night_interface import NightInterface
        print('‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
        return True
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
        return False

def test_game_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã"""
    print('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã...')
    try:
        from game_logic import Game
        
        game = Game(chat_id=12345)
        print('‚úÖ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
        players_data = [
            (111, '–í–æ–ª–∫1'), (222, '–õ–∏—Å–∞1'), (333, '–ó–∞—è—Ü1'),
            (444, '–ö—Ä–æ—Ç1'), (555, '–ë–æ–±—ë—Ä1'), (666, '–ó–∞—è—Ü2')
        ]
        
        for user_id, username in players_data:
            game.add_player(user_id, username)
        
        print(f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(game.players)} –∏–≥—Ä–æ–∫–æ–≤')
        
        # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
        if game.start_game():
            print('‚úÖ –ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ')
            print(f'üìä –§–∞–∑–∞: {game.phase.value}')
            print(f'üîÑ –†–∞—É–Ω–¥: {game.current_round}')
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–æ–ª–∏
            print('\nüé≠ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π:')
            for player in game.players.values():
                print(f'‚Ä¢ {player.username}: {player.role.value} ({player.team.value})')
            
            return True
        else:
            print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É')
            return False
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –∏–≥—Ä—ã: {e}')
        return False

def test_night_actions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"""
    print('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π...')
    try:
        from game_logic import Game, Role
        from night_actions import NightActions
        from night_interface import NightInterface
        
        game = Game(chat_id=54321)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
        players_data = [
            (111, '–í–æ–ª–∫1'), (222, '–õ–∏—Å–∞1'), (333, '–ó–∞—è—Ü1'),
            (444, '–ö—Ä–æ—Ç1'), (555, '–ë–æ–±—ë—Ä1')
        ]
        
        for user_id, username in players_data:
            game.add_player(user_id, username)
        
        game.start_game()
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        night_actions = NightActions(game)
        night_interface = NightInterface(game, night_actions)
        
        print('‚úÖ –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ–ª–µ–π
        wolves = game.get_players_by_role(Role.WOLF)
        foxes = game.get_players_by_role(Role.FOX)
        moles = game.get_players_by_role(Role.MOLE)
        beavers = game.get_players_by_role(Role.BEAVER)
        
        print(f'üê∫ –í–æ–ª–∫–æ–≤: {len(wolves)}')
        print(f'ü¶ä –õ–∏—Å: {len(foxes)}')
        print(f'ü¶´ –ö—Ä–æ—Ç–æ–≤: {len(moles)}')
        print(f'ü¶¶ –ë–æ–±—Ä–æ–≤: {len(beavers)}')
        
        return True
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {e}')
        return False

def test_bot_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞"""
    print('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞...')
    try:
        from bot import ForestMafiaBot
        
        bot = ForestMafiaBot()
        print('‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')
        print(f'üéÆ –ò–≥—Ä: {len(bot.games)}')
        print(f'üë• –ò–≥—Ä–æ–∫–æ–≤: {len(bot.player_games)}')
        
        return True
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}')
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    tests_passed = 0
    total_tests = 4
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç—ã
    if test_imports():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã
    if test_game_creation():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 3: –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    if test_night_actions():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
    if test_bot_creation():
        tests_passed += 1
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f'\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    print(f'üìä –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {tests_passed}/{total_tests}')
    
    if tests_passed == total_tests:
        print('üéâ –ß–ò–°–¢–ê–Ø –í–ï–†–°–ò–Ø –ú–ê–§–ò–ò –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!')
        print('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç')
        print('‚úÖ –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç')
        print('‚úÖ –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç')
        print('‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ')
        return True
    else:
        print('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏')
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
