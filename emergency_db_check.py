#!/usr/bin/env python3
"""
–≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•
"""

import os
import sys
import psycopg2
from urllib.parse import urlparse

def emergency_database_check():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    database_url = "postgresql://postgres:JOoSxKXEcnXImgvwCWsfcQQDlnWSDNyD@hopper.proxy.rlwy.net:23049/railway"
    
    print(f"üîó URL: {database_url[:30]}...")
    
    try:
        # 1. –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        print("\n1Ô∏è‚É£ –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL...")
        conn = psycopg2.connect(database_url)
        cursor = conn.cursor()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        
        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
        print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü...")
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name
        """)
        tables = cursor.fetchall()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for table in tables:
            print(f"  - {table[0]}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã inventory
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã inventory...")
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name = 'inventory'
            )
        """)
        inventory_exists = cursor.fetchone()[0]
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ inventory —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {inventory_exists}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã shop
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã shop...")
        cursor.execute("SELECT COUNT(*) FROM shop")
        shop_count = cursor.fetchone()[0]
        print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: {shop_count}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users
        print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã users...")
        cursor.execute("SELECT COUNT(*) FROM users")
        users_count = cursor.fetchone()[0]
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        
        cursor.close()
        conn.close()
        
        print("\nüéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!")
        return True
        
    except psycopg2.OperationalError as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        print(f"‚ùå Traceback: {traceback.format_exc()}")
        return False

def test_database_psycopg2():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è database_psycopg2"""
    print("\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï MODULE DATABASE_PSYCOPG2")
    print("=" * 50)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['DATABASE_URL'] = "postgresql://postgres:JOoSxKXEcnXImgvwCWsfcQQDlnWSDNyD@hopper.proxy.rlwy.net:23049/railway"
    
    try:
        from database_psycopg2 import init_db, close_db, get_shop_items
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è —É—Å–ø–µ—à–µ–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db = init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if db.test_connection():
            print("‚úÖ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—Å–ø–µ—à–µ–Ω")
        else:
            print("‚ùå –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω")
            return False
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        print("üõçÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤...")
        items = get_shop_items()
        print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: {len(items)}")
        
        close_db()
        print("‚úÖ –ú–æ–¥—É–ª—å database_psycopg2 —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –í MODULE: {e}")
        import traceback
        print(f"‚ùå Traceback: {traceback.format_exc()}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    direct_ok = emergency_database_check()
    
    # –¢–µ—Å—Ç 2: –ú–æ–¥—É–ª—å database_psycopg2
    module_ok = test_database_psycopg2()
    
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    print(f"–ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if direct_ok else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    print(f"–ú–æ–¥—É–ª—å database_psycopg2: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if module_ok else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    
    if direct_ok and module_ok:
        print("\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        print("üí° –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–æ–¥–µ –±–æ—Ç–∞ –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    elif direct_ok and not module_ok:
        print("\n‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê –í –ú–û–î–£–õ–ï DATABASE_PSYCOPG2")
        print("üí° –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –º–æ–¥—É–ª—è")
    elif not direct_ok:
        print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•")
        print("üí° –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway")
    else:
        print("\n‚ùå –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê")
        print("üí° –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    
    return direct_ok and module_ok

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
