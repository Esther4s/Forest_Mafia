#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import logging
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

logger = logging.getLogger(__name__)

def fix_database_types():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    logger.info("=== –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ===")
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        os.environ['DATABASE_URL'] = 'postgresql://postgres:JOoSxKXEcnXImgvwCWsfcQQDlnWSDNyD@hopper.proxy.rlwy.net:23049/railway'
        
        logger.info("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
        from database_psycopg2 import init_db, close_db, execute_query, fetch_one
        
        logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        init_db()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
        users_columns_query = """
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns
            WHERE table_name = 'users' AND column_name = 'user_id'
        """
        users_column = fetch_one(users_columns_query)
        if users_column:
            logger.info(f"üìä users.user_id: {users_column['data_type']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É players
        players_columns_query = """
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns
            WHERE table_name = 'players' AND column_name = 'user_id'
        """
        players_column = fetch_one(players_columns_query)
        if players_column:
            logger.info(f"üìä players.user_id: {players_column['data_type']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É games
        games_columns_query = """
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns
            WHERE table_name = 'games' AND column_name = 'chat_id'
        """
        games_column = fetch_one(games_columns_query)
        if games_column:
            logger.info(f"üìä games.chat_id: {games_column['data_type']}")
        
        # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("2Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º players.user_id
        if players_column and players_column['data_type'] == 'integer':
            logger.info("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º players.user_id: INTEGER -> BIGINT")
            try:
                execute_query("ALTER TABLE players ALTER COLUMN user_id TYPE BIGINT")
                logger.info("‚úÖ players.user_id –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è players.user_id: {e}")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º games.chat_id
        if games_column and games_column['data_type'] == 'integer':
            logger.info("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º games.chat_id: INTEGER -> BIGINT")
            try:
                execute_query("ALTER TABLE games ALTER COLUMN chat_id TYPE BIGINT")
                logger.info("‚úÖ games.chat_id –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è games.chat_id: {e}")
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º games.thread_id
        logger.info("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º games.thread_id: INTEGER -> BIGINT")
        try:
            execute_query("ALTER TABLE games ALTER COLUMN thread_id TYPE BIGINT")
            logger.info("‚úÖ games.thread_id –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è games.thread_id: {e}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã
        logger.info("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º players.user_id
        players_column_after = fetch_one(players_columns_query)
        if players_column_after:
            logger.info(f"üìä players.user_id –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {players_column_after['data_type']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º games.chat_id
        games_column_after = fetch_one(games_columns_query)
        if games_column_after:
            logger.info(f"üìä games.chat_id –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {games_column_after['data_type']}")
        
        # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ–ª—å—à–∏–º ID
        logger.info("4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ–ª—å—à–∏–º ID...")
        test_user_id = 8455370841  # ID –∏–∑ –ª–æ–≥–æ–≤
        test_username = "TestLargeID"
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        execute_query("DELETE FROM users WHERE user_id = %s", (test_user_id,))
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        create_user_query = """
            INSERT INTO users (user_id, username, balance) 
            VALUES (%s, %s, 100)
        """
        result = execute_query(create_user_query, (test_user_id, test_username))
        
        if result > 0:
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –±–æ–ª—å—à–∏–º ID {test_user_id} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±–æ–ª—å—à–∏–º ID {test_user_id}")
            return False
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        execute_query("DELETE FROM users WHERE user_id = %s", (test_user_id,))
        logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω")
        
        logger.info("üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        logger.error(f"‚ùå Traceback: {traceback.format_exc()}")
        return False
    finally:
        try:
            close_db()
            logger.info("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")
        except:
            pass

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß ForestMafia Bot - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö üîß")
    print("=" * 60)
    
    try:
        success = fix_database_types()
        if success:
            print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ò–ü–û–í –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
            print("‚úÖ players.user_id: INTEGER -> BIGINT")
            print("‚úÖ games.chat_id: INTEGER -> BIGINT")
            print("‚úÖ games.thread_id: INTEGER -> BIGINT")
            print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ ID –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ")
            print("‚úÖ –û—à–∏–±–∫–∞ 'integer out of range' –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        else:
            print("‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ò–ü–û–í –î–ê–ù–ù–´–• –ü–†–û–í–ê–õ–ï–ù–û")
        return 0 if success else 1
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
