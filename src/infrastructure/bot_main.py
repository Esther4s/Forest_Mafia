#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞ - —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∏—Å—Ç—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –Ω–∞ —Å–ª–æ–∏
"""

import asyncio
import logging
from typing import Dict, Optional

from telegram import Update, BotCommand
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes
)

from ..application.bot_service import BotService
from ..application.command_handlers import CommandHandlers, AdminCommandHandlers, VotingHandlers
from ..application.callback_handlers import CallbackHandlers
from ..infrastructure.repositories import (
    GameRepositoryImpl, PlayerRepositoryImpl, UserRepositoryImpl,
    GameEventRepositoryImpl, ChatSettingsRepositoryImpl, StatisticsRepositoryImpl
)
from ..infrastructure.config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


class ForestWolvesBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ - —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    
    def __init__(self):
        self.config = Config()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        self.game_repo = GameRepositoryImpl()
        self.player_repo = PlayerRepositoryImpl()
        self.user_repo = UserRepositoryImpl()
        self.event_repo = GameEventRepositoryImpl()
        self.chat_settings_repo = ChatSettingsRepositoryImpl()
        self.stats_repo = StatisticsRepositoryImpl()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
        self.bot_service = BotService(
            game_repo=self.game_repo,
            player_repo=self.player_repo,
            user_repo=self.user_repo,
            event_repo=self.event_repo,
            chat_settings_repo=self.chat_settings_repo
        )
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.command_handlers = CommandHandlers(self.bot_service)
        self.admin_handlers = AdminCommandHandlers(self.bot_service)
        self.voting_handlers = VotingHandlers(self.bot_service)
        self.callback_handlers = CallbackHandlers(self.bot_service)
        
        # Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = None
        
        # –°–∏—Å—Ç–µ–º–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.no_exile_messages = [
            "üå≥ –í–µ—á–µ—Ä –æ–ø—É—Å—Ç–∏–ª—Å—è –Ω–∞ –ª–µ—Å. –ñ–∏–≤–æ—Ç–Ω—ã–µ —Å–ø–æ—Ä–∏–ª–∏ –∏ —à–µ–ø—Ç–∞–ª–∏—Å—å, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ —Ä–µ—à–∏–ª–∏—Å—å –∏–∑–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ. –ü–æ–¥–æ–∑—Ä–µ–Ω–∏—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–∏—Å–µ—Ç—å –≤ –≤–æ–∑–¥—É—Ö–µ, –∫–∞–∫ —Ç—É–º–∞–Ω –Ω–∞–¥ –ø–æ–ª—è–Ω–æ–π.",
            "üçÇ –ì–æ–ª–æ—Å–∞ —Ä–∞–∑–¥–µ–ª–∏–ª–∏—Å—å, –∏ –Ω–∏ –æ–¥–∏–Ω –∑–≤–µ—Ä—å –Ω–µ –æ–∫–∞–∑–∞–ª—Å—è –∏–∑–≥–Ω–∞–Ω. –õ–µ—Å –∑–∞—Ç–∞–∏–ª –¥—ã—Ö–∞–Ω–∏–µ ‚Äî –∑–Ω–∞—á–∏—Ç, –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç –µ—â—ë —Ç—Ä–µ–≤–æ–∂–Ω–µ–µ.",
            "üå≤ –ñ–∏–≤–æ—Ç–Ω—ã–µ –ø–µ—Ä–µ–≥–ª—è–¥—ã–≤–∞–ª–∏—Å—å —Å –Ω–µ–¥–æ–≤–µ—Ä–∏–µ–º, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–∏–Ω–æ–≤–Ω–æ–≥–æ. –õ–µ—Å –ø—Ä–æ–≤–æ–¥–∏–ª –¥–µ–Ω—å –≤ —Ç–∏—à–∏–Ω–µ, —Å–ª–æ–≤–Ω–æ –ø—Ä—è—á–∞ —á—å—é-—Ç–æ —Ç–∞–π–Ω—É.",
            "üåô –ù–∏–∫–æ–≥–æ –Ω–µ –∏–∑–≥–Ω–∞–ª–∏. –õ–µ—Å —É—Å–Ω—É–ª —Å –Ω–µ—Ä–∞—Å–∫—Ä—ã—Ç–æ–π –∑–∞–≥–∞–¥–∫–æ–π, –∞ —Ç—Ä–µ–≤–æ–≥–∞ –≤ —Å–µ—Ä–¥—Ü–∞—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –ª–∏—à—å —É—Å–∏–ª–∏–ª–∞—Å—å."
        ]
        
        self.no_kill_messages = [
            "üåå –í–æ–ª–∫–∏ –≤—ã–ª–∏ –Ω–∞ –ª—É–Ω—É, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –¥–æ–±—ã—á–∏. –£—Ç—Ä–æ–º –≤—Å–µ –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å —Ü–µ–ª—ã–º–∏ –∏ –Ω–µ–≤—Ä–µ–¥–∏–º—ã–º–∏. –ù–æ —Å–∫–æ–ª—å–∫–æ –µ—â—ë –ø—Ä–æ–¥–ª–∏—Ç—Å—è —ç—Ç–∞ —É–¥–∞—á–∞?",
            "üå≤ –ù–æ—á—å –ø—Ä–æ—à–ª–∞ —Ç–∏—Ö–æ. –í–æ–ª—á—å–∏ –ª–∞–ø—ã –±—Ä–æ–¥–∏–ª–∏ –ø–æ –ª–µ—Å—É, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ –±—ã–ª —Ç—Ä–æ–Ω—É—Ç. –ñ–∏–≤–æ—Ç–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∞–ª–∏ —Ä–∞—Å—Å–≤–µ—Ç —Å –æ–±–ª–µ–≥—á–µ–Ω–∏–µ–º ‚Äî –ø–æ–∫–∞.",
            "üçÉ –í–æ–ª–∫–∏ –∫—Ä—É–∂–∏–ª–∏ –ø–æ –ø–æ–ª—è–Ω–µ, –Ω–æ –∏—Ö –ø–∞—Å—Ç–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≥–æ–ª–æ–¥–Ω—ã–º–∏. –£—Ç—Ä–æ –Ω–∞—Å—Ç–∞–ª–æ –±–µ–∑ –ø–æ—Ç–µ—Ä—å, –∏ –ª–µ—Å –∑–∞—à–µ–ø—Ç–∞–ª: ¬´–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç?..¬ª",
            "üåô –ó–≤—ë–∑–¥—ã –Ω–∞–±–ª—é–¥–∞–ª–∏, –∫–∞–∫ –≤–æ–ª–∫–∏ –∏—Å–∫–∞–ª–∏ –∂–µ—Ä—Ç–≤—É, –Ω–æ —ç—Ç–æ–π –Ω–æ—á—å—é –∑—É–±—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—É—Å—Ç—ã–º–∏. –ñ–∏–≤–æ—Ç–Ω—ã–µ –æ–±–Ω—è–ª–∏ —Ä–∞—Å—Å–≤–µ—Ç —Å —Ä–∞–¥–æ—Å—Ç—å—é –∏ —Å—Ç—Ä–∞—Ö–æ–º."
        ]
    
    async def initialize(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            await self.bot_service.initialize()
            
            # –°–æ–∑–¥–∞–µ–º Telegram –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            self.application = Application.builder().token(self.config.bot_token).build()
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            await self._register_handlers()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
            await self._set_bot_commands()
            
            logger.info("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
            raise
    
    async def _register_handlers(self) -> None:
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥"""
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start", self.command_handlers.handle_start))
        self.application.add_handler(CommandHandler("rules", self.command_handlers.handle_rules))
        self.application.add_handler(CommandHandler("join", self.command_handlers.handle_join))
        self.application.add_handler(CommandHandler("leave", self.command_handlers.handle_leave))
        self.application.add_handler(CommandHandler("status", self.command_handlers.handle_status))
        self.application.add_handler(CommandHandler("stats", self.command_handlers.handle_stats))
        
        # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("start_game", self.admin_handlers.handle_start_game))
        self.application.add_handler(CommandHandler("end_game", self.admin_handlers.handle_end_game))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤
        self.application.add_handler(CallbackQueryHandler(self.callback_handlers.handle_callback))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self._handle_text_message))
    
    async def _set_bot_commands(self) -> None:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
        commands = [
            BotCommand("start", "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
            BotCommand("rules", "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"),
            BotCommand("join", "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ"),
            BotCommand("leave", "–ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É"),
            BotCommand("status", "–°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"),
            BotCommand("stats", "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
            BotCommand("start_game", "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É (–∞–¥–º–∏–Ω)"),
            BotCommand("end_game", "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (–∞–¥–º–∏–Ω)")
        ]
        
        await self.application.bot.set_my_commands(commands)
    
    async def _handle_text_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —á–∞—Ç–æ–≤ —Å –∏–≥—Ä–∞–º–∏
        pass
    
    async def start_polling(self) -> None:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling"""
        if not self.application:
            raise RuntimeError("–ë–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ initialize() —Å–Ω–∞—á–∞–ª–∞.")
        
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await self.application.run_polling()
    
    async def stop(self) -> None:
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞"""
        if self.application:
            await self.application.stop()
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def get_random_no_exile_message(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ –∏–∑–≥–Ω–∞–Ω"""
        import random
        return random.choice(self.no_exile_messages)
    
    def get_random_no_kill_message(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ —É–±–∏—Ç"""
        import random
        return random.choice(self.no_kill_messages)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot = ForestWolvesBot()
    
    try:
        await bot.initialize()
        await bot.start_polling()
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        await bot.stop()


if __name__ == "__main__":
    asyncio.run(main())
