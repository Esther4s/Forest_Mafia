#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
ForestMafia Bot - –†–µ—Ñ–∞–∫—Ç–æ—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
Telegram –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã "–õ–µ—Å –∏ –í–æ–ª–∫–∏"
"""

import asyncio
import logging
from typing import Dict, Optional

from telegram import BotCommand
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes
)

from config import config
from bot_handlers import CommandHandlers, AdminHandlers
from bot_database import DatabaseManager, GameStateManager
from bot_night_manager import NightManager
from game_logic import Game, GamePhase

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


class ForestMafiaBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ ForestMafia"""
    
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        self.database_manager = DatabaseManager()
        self.game_state_manager = GameStateManager(self.database_manager)
        self.night_manager = NightManager()
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.command_handlers = CommandHandlers(self)
        self.admin_handlers = AdminHandlers(self)
        
        # –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Ç—ã
        self.authorized_chats: set = set()
        
        # –°–∏—Å—Ç–µ–º–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self._init_message_templates()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã
        self.game_state_manager.load_active_games()
    
    def _init_message_templates(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π"""
        self.no_exile_messages = [
            "üå≥ –í–µ—á–µ—Ä –æ–ø—É—Å—Ç–∏–ª—Å—è –Ω–∞ –ª–µ—Å. –ñ–∏–≤–æ—Ç–Ω—ã–µ —Å–ø–æ—Ä–∏–ª–∏ –∏ —à–µ–ø—Ç–∞–ª–∏—Å—å, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ —Ä–µ—à–∏–ª–∏—Å—å –∏–∑–≥–Ω–∞—Ç—å –∫–æ–≥–æ-—Ç–æ. –ü–æ–¥–æ–∑—Ä–µ–Ω–∏—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–∏—Å–µ—Ç—å –≤ –≤–æ–∑–¥—É—Ö–µ, –∫–∞–∫ —Ç—É–º–∞–Ω –Ω–∞–¥ –ø–æ–ª—è–Ω–æ–π.",
            "üçÇ –ì–æ–ª–æ—Å–∞ —Ä–∞–∑–¥–µ–ª–∏–ª–∏—Å—å, –∏ –Ω–∏ –æ–¥–∏–Ω –∑–≤–µ—Ä—å –Ω–µ –æ–∫–∞–∑–∞–ª—Å—è –∏–∑–≥–Ω–∞–Ω. –õ–µ—Å –∑–∞—Ç–∞–∏–ª –¥—ã—Ö–∞–Ω–∏–µ ‚Äî –∑–Ω–∞—á–∏—Ç, –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç –µ—â—ë —Ç—Ä–µ–≤–æ–∂–Ω–µ–µ.",
            "üå≤ –ñ–∏–≤–æ—Ç–Ω—ã–µ –ø–µ—Ä–µ–≥–ª—è–¥—ã–≤–∞–ª–∏—Å—å —Å –Ω–µ–¥–æ–≤–µ—Ä–∏–µ–º, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–∏–Ω–æ–≤–Ω–æ–≥–æ. –õ–µ—Å –ø—Ä–æ–≤–æ–¥–∏–ª –¥–µ–Ω—å –≤ —Ç–∏—à–∏–Ω–µ, —Å–ª–æ–≤–Ω–æ –ø—Ä—è—á–∞ —á—å—é-—Ç–æ —Ç–∞–π–Ω—É.",
            "üåô –ù–∏–∫–æ–≥–æ –Ω–µ –∏–∑–≥–Ω–∞–ª–∏. –õ–µ—Å —É—Å–Ω—É–ª —Å –Ω–µ—Ä–∞—Å–∫—Ä—ã—Ç–æ–π –∑–∞–≥–∞–¥–∫–æ–π, –∞ —Ç—Ä–µ–≤–æ–≥–∞ –≤ —Å–µ—Ä–¥—Ü–∞—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –ª–∏—à—å —É—Å–∏–ª–∏–ª–∞—Å—å."
        ]
        
        self.no_kill_messages = [
            "üåå –í–æ–ª–∫–∏ –≤—ã–ª–∏ –Ω–∞ –ª—É–Ω—É, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –¥–æ–±—ã—á–∏. –£—Ç—Ä–æ–º –≤—Å–µ –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å —Ü–µ–ª—ã–º–∏ –∏ –Ω–µ–≤—Ä–µ–¥–∏–º—ã–º–∏. –ù–æ —Å–∫–æ–ª—å–∫–æ –µ—â—ë –ø—Ä–æ–¥–ª–∏—Ç—Å—è —ç—Ç–∞ —É–¥–∞—á–∞?",
            "üå≤ –ù–æ—á—å –ø—Ä–æ—à–ª–∞ —Ç–∏—Ö–æ. –í–æ–ª—á—å–∏ –ª–∞–ø—ã –±—Ä–æ–¥–∏–ª–∏ –ø–æ –ª–µ—Å—É, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ –±—ã–ª —Ç—Ä–æ–Ω—É—Ç. –ñ–∏–≤–æ—Ç–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∞–ª–∏ —Ä–∞—Å—Å–≤–µ—Ç —Å –æ–±–ª–µ–≥—á–µ–Ω–∏–µ–º ‚Äî –ø–æ–∫–∞.",
            "üçÉ –í–æ–ª–∫–∏ –∫—Ä—É–∂–∏–ª–∏ –ø–æ –ø–æ–ª—è–Ω–µ, –Ω–æ –∏—Ö –ø–∞—Å—Ç–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≥–æ–ª–æ–¥–Ω—ã–º–∏. –£—Ç—Ä–æ –Ω–∞—Å—Ç–∞–ª–æ –±–µ–∑ –ø–æ—Ç–µ—Ä—å, –∏ –ª–µ—Å –∑–∞—à–µ–ø—Ç–∞–ª: ¬´–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç?..¬ª",
            "üåô –ó–≤—ë–∑–¥—ã –Ω–∞–±–ª—é–¥–∞–ª–∏, –∫–∞–∫ –≤–æ–ª–∫–∏ –∏—Å–∫–∞–ª–∏ –∂–µ—Ä—Ç–≤—É, –Ω–æ —ç—Ç–æ–π –Ω–æ—á—å—é –∑—É–±—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—É—Å—Ç—ã–º–∏. –ñ–∏–≤–æ—Ç–Ω—ã–µ –æ–±–Ω—è–ª–∏ —Ä–∞—Å—Å–≤–µ—Ç —Å —Ä–∞–¥–æ—Å—Ç—å—é –∏ —Å—Ç—Ä–∞—Ö–æ–º."
        ]
    
    # –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–≥—Ä–∞–º
    @property
    def games(self) -> Dict[int, Game]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∏–≥—Ä"""
        return self.game_state_manager.games
    
    def get_or_create_game(self, chat_id: int, thread_id: Optional[int] = None) -> Game:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –∏–≥—Ä—É"""
        return self.game_state_manager.get_or_create_game(chat_id, thread_id, config.is_test_mode)
    
    def is_chat_authorized(self, chat_id: int, thread_id: Optional[int] = None) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ —á–∞—Ç"""
        chat_key = (chat_id, thread_id)
        return chat_key in self.authorized_chats
    
    def authorize_chat(self, chat_id: int, thread_id: Optional[int] = None):
        """–ê–≤—Ç–æ—Ä–∏–∑—É–µ—Ç —á–∞—Ç"""
        chat_key = (chat_id, thread_id)
        self.authorized_chats.add(chat_key)
        logger.info(f"‚úÖ –ß–∞—Ç {chat_id} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    
    def deauthorize_chat(self, chat_id: int, thread_id: Optional[int] = None):
        """–î–µ–∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç —á–∞—Ç"""
        chat_key = (chat_id, thread_id)
        self.authorized_chats.discard(chat_key)
        logger.info(f"‚ùå –ß–∞—Ç {chat_id} –¥–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
    
    async def setup_handlers(self, application: Application):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥"""
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        application.add_handler(CommandHandler("start", self.command_handlers.handle_start))
        application.add_handler(CommandHandler("rules", self.command_handlers.handle_rules))
        application.add_handler(CommandHandler("join", self.command_handlers.handle_join))
        application.add_handler(CommandHandler("leave", self.command_handlers.handle_leave))
        application.add_handler(CommandHandler("status", self.command_handlers.handle_status))
        
        # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        application.add_handler(CommandHandler("start_game", self.admin_handlers.handle_start_game))
        application.add_handler(CommandHandler("end_game", self.admin_handlers.handle_end_game))
        
        # Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CallbackQueryHandler(self.night_manager.handle_night_callback, pattern="^night_"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        application.add_handler(MessageHandler(filters.ALL, self._handle_message))
        
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    async def _handle_message(self, update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–æ–≤)"""
        chat_id = update.effective_chat.id
        thread_id = update.effective_message.message_thread_id if update.effective_chat.is_forum else None
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º —á–∞—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        if not self.is_chat_authorized(chat_id, thread_id):
            self.authorize_chat(chat_id, thread_id)
    
    async def setup_bot_commands(self, application: Application):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
        commands = [
            BotCommand("start", "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
            BotCommand("rules", "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"),
            BotCommand("join", "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ"),
            BotCommand("leave", "–ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É"),
            BotCommand("status", "–°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã"),
            BotCommand("start_game", "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É (–∞–¥–º–∏–Ω)"),
            BotCommand("end_game", "–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (–∞–¥–º–∏–Ω)"),
        ]
        
        await application.bot.set_my_commands(commands)
        logger.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    async def run_game_loop(self, application: Application):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª"""
        while True:
            try:
                await self._process_games(application)
                await asyncio.sleep(5)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∏–≥—Ä–æ–≤–æ–º —Ü–∏–∫–ª–µ: {e}")
                await asyncio.sleep(10)
    
    async def _process_games(self, application: Application):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã"""
        for chat_id, game in list(self.games.items()):
            try:
                await self._process_single_game(game, application)
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–≥—Ä—ã {chat_id}: {e}")
    
    async def _process_single_game(self, game: Game, application: Application):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω—É –∏–≥—Ä—É"""
        if game.phase == GamePhase.GAME_OVER:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ñ–∞–∑—ã
        if game.is_phase_finished():
            await self._handle_phase_end(game, application)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã
        winner = game.check_game_end()
        if winner:
            await self._handle_game_end(game, winner, application)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ
        auto_winner = game.check_auto_game_end()
        if auto_winner:
            reason = game.get_auto_end_reason()
            await self._handle_game_end(game, auto_winner, application, reason)
            return
    
    async def _handle_phase_end(self, game: Game, application: Application):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ñ–∞–∑—ã"""
        if game.phase == GamePhase.NIGHT:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
            await self.night_manager.process_night_actions(game, application.bot)
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑–µ
            game.start_day()
            await self._announce_day_start(game, application.bot)
            
        elif game.phase == GamePhase.DAY:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—é
            game.start_voting()
            await self._announce_voting_start(game, application.bot)
            
        elif game.phase == GamePhase.VOTING:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
            exiled_player = game.process_voting()
            await self._announce_voting_results(game, exiled_player, application.bot)
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ—á–∏
            game.start_night()
            await self.night_manager.start_night_phase(game, application.bot)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.database_manager.update_game_phase(game)
    
    async def _handle_game_end(self, game: Game, winner: Game.Team, application: Application, reason: str = None):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã"""
        game.phase = GamePhase.GAME_OVER
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏
        await self._announce_game_end(game, winner, application.bot, reason)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        self.database_manager.finish_game(game, winner)
        
        # –û—á–∏—â–∞–µ–º –∏–≥—Ä—É
        self.game_state_manager.remove_game(game.chat_id)
        self.night_manager.cleanup_game(game.chat_id)
    
    async def _announce_day_start(self, game: Game, bot):
        """–û–±—ä—è–≤–ª—è–µ—Ç –æ –Ω–∞—á–∞–ª–µ –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑—ã"""
        message = (
            f"‚òÄÔ∏è **–î–ï–ù–¨ {game.current_round}** ‚òÄÔ∏è\n\n"
            f"üåÖ –õ–µ—Å –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –Ω–æ—á–∏...\n"
            f"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(game.get_alive_players())}\n\n"
            f"üí¨ –£ –≤–∞—Å –µ—Å—Ç—å 5 –º–∏–Ω—É—Ç –Ω–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –Ω–æ—á–∏!"
        )
        
        await bot.send_message(
            chat_id=game.chat_id,
            text=message,
            message_thread_id=game.thread_id
        )
    
    async def _announce_voting_start(self, game: Game, bot):
        """–û–±—ä—è–≤–ª—è–µ—Ç –æ –Ω–∞—á–∞–ª–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
        alive_players = game.get_alive_players()
        
        message = (
            f"üó≥Ô∏è **–ì–û–õ–û–°–û–í–ê–ù–ò–ï** üó≥Ô∏è\n\n"
            f"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(alive_players)}\n"
            f"‚è∞ –£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ!\n\n"
            f"**–ü—Ä–∞–≤–∏–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:**\n"
            f"‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –∏–∑–≥–Ω–∞–Ω–∏—è\n"
            f"‚Ä¢ –ú–æ–∂–Ω–æ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ –ø—Ä–æ–ø—É—Å–∫\n"
            f"‚Ä¢ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ —Å–µ–±—è –∑–∞–ø—Ä–µ—â–µ–Ω–æ"
        )
        
        await bot.send_message(
            chat_id=game.chat_id,
            text=message,
            message_thread_id=game.thread_id
        )
    
    async def _announce_voting_results(self, game: Game, exiled_player, bot):
        """–û–±—ä—è–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
        if exiled_player:
            message = f"üó≥Ô∏è **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è** üó≥Ô∏è\n\n‚ùå {exiled_player.username} –∏–∑–≥–Ω–∞–Ω –∏–∑ –ª–µ—Å–∞!"
        else:
            import random
            message = f"üó≥Ô∏è **–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è** üó≥Ô∏è\n\n{random.choice(self.no_exile_messages)}"
        
        await bot.send_message(
            chat_id=game.chat_id,
            text=message,
            message_thread_id=game.thread_id
        )
    
    async def _announce_game_end(self, game: Game, winner: Game.Team, bot, reason: str = None):
        """–û–±—ä—è–≤–ª—è–µ—Ç –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∏–≥—Ä—ã"""
        winner_name = "ü¶Å –•–∏—â–Ω–∏–∫–∏" if winner == Game.Team.PREDATORS else "üåø –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ"
        
        message = (
            f"üå≤ **–ò–ì–†–ê –ó–ê–í–ï–†–®–ï–ù–ê** üå≤\n\n"
            f"üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏: {winner_name}\n"
            f"üéÆ –†–∞—É–Ω–¥–æ–≤: {game.current_round}\n"
            f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(game.players)}\n"
        )
        
        if reason:
            message += f"üìã –ü—Ä–∏—á–∏–Ω–∞: {reason}\n"
        
        message += "\nüå≤ –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! üå≤"
        
        await bot.send_message(
            chat_id=game.chat_id,
            text=message,
            message_thread_id=game.thread_id
        )
    
    async def cleanup(self):
        """–û—á–∏—â–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã"""
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–≥—Ä—ã
        self.game_state_manager.save_all_games()
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î
        self.database_manager.close()
        
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = ForestMafiaBot()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(config.bot_token).build()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    await bot.setup_handlers(application)
    await bot.setup_bot_commands(application)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("üå≤ ForestMafia Bot –∑–∞–ø—É—â–µ–Ω! üå≤")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª –≤ —Ñ–æ–Ω–µ
        asyncio.create_task(bot.run_game_loop(application))
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await application.run_polling()
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    finally:
        await bot.cleanup()


if __name__ == '__main__':
    asyncio.run(main())
