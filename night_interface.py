from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from typing import Dict, List
from game_logic import Game, Role
from night_actions import NightActions

class NightInterface:
    def __init__(self, game: Game, night_actions: NightActions, get_display_name_func=None):
        self.game = game
        self.night_actions = night_actions
        self.get_display_name = get_display_name_func

    async def send_night_actions_menu(self, context: ContextTypes.DEFAULT_TYPE, player_id: int):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–≥—Ä–æ–∫–∞"""
        print(f"üåô send_night_actions_menu –≤—ã–∑–≤–∞–Ω –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player_id}")
        actions = self.night_actions.get_player_actions(player_id)
        print(f"üåô –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player_id}: {actions}")

        if not actions:
            print(f"‚ùå –ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–≥—Ä–æ–∫–∞ {player_id}")
            return

        player = self.game.players.get(player_id)
        if not player:
            print(f"‚ùå –ò–≥—Ä–æ–∫ {player_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–≥—Ä–µ")
            return

        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        role_headers = {
            "wolf": "üê∫ –ü—Ä–∏–¥—ë—Ç —Å–µ—Ä–µ–Ω—å–∫–∏–π –≤–æ–ª—á–æ–∫ –∏ —É–∫—É—Å–∏—Ç –∑–∞ –±–æ—á–æ–∫! üê∫ –ö—Ö–º... –ö–æ–º—É –∂–µ —ç—Ç–æ—Ç –∫—É—Å—å –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è —ç—Ç–æ–π –Ω–æ—á—å—é?",
            "fox": "ü¶ä –ù—É —á—Ç–æ, —Ö–∏—Ç—Ä–∞—è –õ–∏—Å–∞? ü¶ä –ö–æ–≥–æ –æ–±–≤–æ—Ä—É–µ–º —ç—Ç–æ–π –Ω–æ—á—å—é?",
            "beaver": "ü¶¶ –ù—É —á—Ç–æ, –¥—Ä—É–∂–æ–∫ –ë–æ–±—ë—Ä? –£—Å—Ç—Ä–æ–∏–º –∫–æ–º—É-–Ω–∏–±—É–¥—å —É—Ç—Ä–æ–º –ø—Ä–∏—è—Ç–Ω—ã–π –∏ –≤–∫—É—Å–Ω—ã–π —Å—é—Ä–ø—Ä–∏–∑?",
            "mole": "ü¶´ –ù—É —á—Ç–æ, –ö—Ä–æ—Ç? –ö –∫–æ–º—É –≤ –Ω–æ—Ä–∫—É —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–≥–ª—è–Ω—É—Ç—å?"
        }

        header = role_headers.get(actions["type"], "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ü–µ–ª—è–º–∏
        keyboard = []
        for target in actions["targets"]:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫—É, –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∞—è —Ü–µ–ª—å
            current_mark = "‚úÖ " if actions.get("current_target") == target.user_id else ""
            if self.get_display_name:
                display_name = self.get_display_name(target.user_id, target.username, target.first_name)
            else:
                display_name = target.username or target.first_name or f"ID:{target.user_id}"
            button_text = f"{current_mark}{display_name}"

            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
            if actions['type'] == 'wolf':
                callback_data = f"wolf_kill_{target.user_id}"
            elif actions['type'] == 'fox':
                callback_data = f"fox_steal_{target.user_id}"
            elif actions['type'] == 'beaver':
                callback_data = f"beaver_help_{target.user_id}"
            elif actions['type'] == 'mole':
                callback_data = f"mole_check_{target.user_id}"
            else:
                callback_data = f"night_{actions['type']}_{target.user_id}"

            keyboard.append([InlineKeyboardButton(
                button_text,
                callback_data=callback_data
            )])

        # –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥"
        if actions['type'] == 'wolf':
            skip_callback = "wolf_skip"
        elif actions['type'] == 'fox':
            skip_callback = "fox_skip"
        elif actions['type'] == 'beaver':
            skip_callback = "beaver_skip"
        elif actions['type'] == 'mole':
            skip_callback = "mole_skip"
        else:
            skip_callback = f"night_{actions['type']}_skip"

        keyboard.append([InlineKeyboardButton(
            "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥",
            callback_data=skip_callback
        )])


        reply_markup = InlineKeyboardMarkup(keyboard)

        try:
            print(f"üåô –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é –∏–≥—Ä–æ–∫—É {player_id}: {header}")
            print(f"üåô –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {len(keyboard)} –∫–Ω–æ–ø–æ–∫")
            await context.bot.send_message(
                chat_id=player_id,
                text=header,
                reply_markup=reply_markup
            )
            print(f"‚úÖ –ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫—É {player_id}")
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫—É {player_id}: {e}")

    async def handle_night_action(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
        query = update.callback_query
        await query.answer()

        user_id = query.from_user.id
        data = query.data.split('_')
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print(f"DEBUG: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
        print(f"DEBUG: Callback data: {query.data}")
        print(f"DEBUG: –†–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ –∏–≥—Ä–µ
        if user_id not in self.game.players:
            await query.answer("‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ!", show_alert=True)
            return

        player = self.game.players[user_id]
        if not player.is_alive:
            await query.answer("‚ùå –í—ã –º–µ—Ä—Ç–≤—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è!", show_alert=True)
            return


        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–≤—Ä–∞—Ç –∫ –¥–µ–π—Å—Ç–≤–∏—è–º
        if len(data) >= 4 and data[1] == "back" and data[2] == "to" and data[3] == "actions":
            await self.send_night_actions_menu(context, user_id)
            return

        if len(data) < 2 or len(data) > 3:
            return

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã callback_data
        if len(data) == 2 and data[1] == 'skip':
            # –§–æ—Ä–º–∞—Ç –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞: wolf_skip, fox_skip, etc.
            action_type = data[0]  # wolf, fox, beaver, mole
            target_id = "skip"
        elif len(data) == 3 and data[1] in ['kill', 'steal', 'help', 'check']:
            # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: wolf_kill_123, fox_steal_123, etc.
            action_type = data[0]  # wolf, fox, beaver, mole
            target_id = data[2]
        else:
            # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç: wolf_123, fox_123, etc.
            action_type = data[1]
            target_id = data[2]

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        success = False
        message = ""
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print(f"DEBUG: action_type = {action_type}, player.role = {player.role}")
        print(f"DEBUG: target_id = {target_id}")
        print(f"DEBUG: night_actions = {self.night_actions}")
        print(f"DEBUG: game = {self.game}")

        if action_type == "wolf" and player.role == Role.WOLF:
            if target_id == "skip":
                if self.night_actions:
                    success = self.night_actions.skip_action(user_id)
                    message = "‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥"
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
            else:
                if self.night_actions:
                    success = self.night_actions.set_wolf_target(user_id, int(target_id))
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
                if success:
                    target = self.game.players[int(target_id)]
                    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —á–µ—Ä–µ–∑ get_display_name
                    if self.get_display_name:
                        display_name = self.get_display_name(target.user_id, target.username, None)
                    else:
                        display_name = target.username or f"ID:{target.user_id}"
                    message = f"üê∫ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–µ–ª—å: {display_name}"
                else:
                    message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å"

        elif action_type == "fox" and player.role == Role.FOX:
            if target_id == "skip":
                if self.night_actions:
                    success = self.night_actions.skip_action(user_id)
                    message = "‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥"
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
            else:
                if self.night_actions:
                    success = self.night_actions.set_fox_target(user_id, int(target_id))
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
                if success:
                    target = self.game.players[int(target_id)]
                    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —á–µ—Ä–µ–∑ get_display_name
                    if self.get_display_name:
                        display_name = self.get_display_name(target.user_id, target.username, None)
                    else:
                        display_name = target.username or f"ID:{target.user_id}"
                    message = f"ü¶ä –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–µ–ª—å –¥–ª—è –∫—Ä–∞–∂–∏: {display_name}"
                else:
                    message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å"

        elif action_type == "beaver" and player.role == Role.BEAVER:
            if target_id == "skip":
                if self.night_actions:
                    success = self.night_actions.skip_action(user_id)
                    message = "‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥"
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
            else:
                if self.night_actions:
                    success = self.night_actions.set_beaver_target(user_id, int(target_id))
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
                if success:
                    target = self.game.players[int(target_id)]
                    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —á–µ—Ä–µ–∑ get_display_name
                    if self.get_display_name:
                        display_name = self.get_display_name(target.user_id, target.username, None)
                    else:
                        display_name = target.username or f"ID:{target.user_id}"
                    message = f"ü¶¶ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–≤–µ—Ä—è –¥–ª—è –ø–æ–º–æ—â–∏: {display_name}"
                else:
                    message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å"

        elif action_type == "mole" and player.role == Role.MOLE:
            if target_id == "skip":
                if self.night_actions:
                    success = self.night_actions.skip_action(user_id)
                    message = "‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥"
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
            else:
                if self.night_actions:
                    success = self.night_actions.set_mole_target(user_id, int(target_id))
                else:
                    success = False
                    message = "‚ùå –û—à–∏–±–∫–∞: –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
                if success:
                    target = self.game.players[int(target_id)]
                    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è —á–µ—Ä–µ–∑ get_display_name
                    if self.get_display_name:
                        display_name = self.get_display_name(target.user_id, target.username, None)
                    else:
                        display_name = target.username or f"ID:{target.user_id}"
                    message = f"ü¶´ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–≤–µ—Ä—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {display_name}"
                else:
                    message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å"

        else:
            print(f"DEBUG: –ü–æ–ø–∞–¥–∞–Ω–∏–µ –≤ else - action_type: {action_type}, player.role: {player.role}")
            print(f"DEBUG: –£—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:")
            print(f"  - wolf: {action_type == 'wolf' and player.role == Role.WOLF}")
            print(f"  - fox: {action_type == 'fox' and player.role == Role.FOX}")
            print(f"  - beaver: {action_type == 'beaver' and player.role == Role.BEAVER}")
            print(f"  - mole: {action_type == 'mole' and player.role == Role.MOLE}")
            message = "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!"

        if success:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
            await query.edit_message_text(
                f"{message}\n\n"
                "üåô –ñ–¥–∏—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–æ—á–Ω–æ–π —Ñ–∞–∑—ã..."
            )
        else:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            await query.edit_message_text(
                f"{message}\n\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Ü–µ–ª—å."
            )

    async def send_night_results(self, context: ContextTypes.DEFAULT_TYPE, results: Dict[str, List[str]]):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º"""
        if not results:
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        message = "üåô –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏:\n\n"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        if results["wolves"]:
            message += "üê∫ –õ–µ—Å –ø—Ä–æ–Ω–∑–∏–ª –¥–∞–ª—ë–∫–∏–π —Å—Ç–∏—Ö–∞—é—â–∏–π –≤–æ–π.\n"
            for action in results["wolves"]:
                message += f"‚Ä¢ {action}\n"
            message += "\n"

        if results["fox"]:
            message += "ü¶ä –ê —Å—Ä–µ–¥–∏ –¥–µ—Ä–µ–≤—å–µ–≤ –ø—Ä–æ–º–µ–ª—å–∫–Ω—É–ª–æ —á—Ç–æ-—Ç–æ —Ä—ã–∂–µ–µ –∏ –ø—Ä–æ–≤–æ—Ä–Ω–æ–µ.\n"
            for action in results["fox"]:
                message += f"‚Ä¢ {action}\n"
            message += "–≠—Ç–æ –±—ã–ª–∞ —Ö–∏—Ç—Ä–∞—è –õ–∏—Å–∞! –ß—Ç–æ –∂–µ –µ–π –±—ã–ª–æ –Ω—É–∂–Ω–æ –≤ —ç—Ç–æ–º –¥–æ–º–∏–∫–µ?\n\n"

        if results["beaver"]:
            message += "ü¶¶ –ê –≤–æ—Ç –ë–æ–±—Ä—É —Ç–æ–∂–µ –Ω–µ —Å–ø–∏—Ç—Å—è –∏ –æ–Ω —à–∞—Å—Ç–∞–µ—Ç –ø–æ –æ–∫—Ä—É–≥–µ —Å –∫—É–∑–æ–≤–∫–æ–º.\n"
            for action in results["beaver"]:
                message += f"‚Ä¢ {action}\n"
            message += "–ù–∞–≤–µ—Ä–Ω–æ–µ, –ë–æ–±—ë—Ä –æ–±—Ä–∞–¥–æ–≤–∞–ª –∫–æ–≥–æ-—Ç–æ —Å–≤–æ–∏–º–∏ –ø–∏—Ä–æ–∂–∫–∞–º–∏ –∏ —É—à—ë–ª —Å–ø–∞—Ç—å.\n\n"

        if results["mole"]:
            message += "ü¶´ –ê –Ω–∞ —Ä–∞–±–æ—Ç—É –≤—ã—à–µ–ª –Ω–æ—á–Ω–æ–π –ö—Ä–æ—Ç. –í—Å—é –Ω–æ—á—å –æ–Ω –∫–æ–ø–∞–ª —Ç–æ–Ω–Ω–µ–ª—å –∫ –¥–æ–º–∏–∫—É –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–≤–æ–∏—Ö —Å–æ—Å–µ–¥–µ–π‚Ä¶\n"
            for action in results["mole"]:
                message += f"‚Ä¢ {action}\n"
            message += "\n"

        if results["deaths"]:
            message += "üíÄ –°–º–µ—Ä—Ç–∏:\n"
            for death in results["deaths"]:
                message += f"‚Ä¢ {death}\n"
            message += "\n"
        else:
            # –ï—Å–ª–∏ –Ω–∏–∫—Ç–æ –Ω–µ —É–º–µ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            import random
            no_kill_messages = [
                "üåå –í–æ–ª–∫–∏ –≤—ã–ª–∏ –Ω–∞ –ª—É–Ω—É, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –¥–æ–±—ã—á–∏. –£—Ç—Ä–æ–º –≤—Å–µ –ø—Ä–æ—Å–Ω—É–ª–∏—Å—å —Ü–µ–ª—ã–º–∏ –∏ –Ω–µ–≤—Ä–µ–¥–∏–º—ã–º–∏. –ù–æ —Å–∫–æ–ª—å–∫–æ –µ—â—ë –ø—Ä–æ–¥–ª–∏—Ç—Å—è —ç—Ç–∞ —É–¥–∞—á–∞?",
                "üå≤ –ù–æ—á—å –ø—Ä–æ—à–ª–∞ —Ç–∏—Ö–æ. –í–æ–ª—á—å–∏ –ª–∞–ø—ã –±—Ä–æ–¥–∏–ª–∏ –ø–æ –ª–µ—Å—É, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ –±—ã–ª —Ç—Ä–æ–Ω—É—Ç. –ñ–∏–≤–æ—Ç–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∞–ª–∏ —Ä–∞—Å—Å–≤–µ—Ç —Å –æ–±–ª–µ–≥—á–µ–Ω–∏–µ–º ‚Äî –ø–æ–∫–∞.",
                "üçÉ –í–æ–ª–∫–∏ –∫—Ä—É–∂–∏–ª–∏ –ø–æ –ø–æ–ª—è–Ω–µ, –Ω–æ –∏—Ö –ø–∞—Å—Ç–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≥–æ–ª–æ–¥–Ω—ã–º–∏. –£—Ç—Ä–æ –Ω–∞—Å—Ç–∞–ª–æ –±–µ–∑ –ø–æ—Ç–µ—Ä—å, –∏ –ª–µ—Å –∑–∞—à–µ–ø—Ç–∞–ª: ¬´–ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç?..¬ª",
                "üåô –ó–≤—ë–∑–¥—ã –Ω–∞–±–ª—é–¥–∞–ª–∏, –∫–∞–∫ –≤–æ–ª–∫–∏ –∏—Å–∫–∞–ª–∏ –∂–µ—Ä—Ç–≤—É, –Ω–æ —ç—Ç–æ–π –Ω–æ—á—å—é –∑—É–±—ã –æ—Å—Ç–∞–ª–∏—Å—å –ø—É—Å—Ç—ã–º–∏. –ñ–∏–≤–æ—Ç–Ω—ã–µ –æ–±–Ω—è–ª–∏ —Ä–∞—Å—Å–≤–µ—Ç —Å —Ä–∞–¥–æ—Å—Ç—å—é –∏ —Å—Ç—Ä–∞—Ö–æ–º."
            ]
            random_message = random.choice(no_kill_messages)
            message += f"üåô {random_message}\n\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —á–∞—Ç
        try:
            await context.bot.send_message(
                chat_id=self.game.chat_id,
                text=message,
                message_thread_id=self.game.thread_id
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏: {e}")
        
        # –°–æ–æ–±—â–µ–Ω–∏—è –±–µ–ª–æ—á–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–≥–Ω–∞–Ω–∏–∏ (–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏)
        # –ü—Ä–∏ —Å–º–µ—Ä—Ç–∏ –æ—Ç –≤–æ–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ send_wolf_victim_pm

    async def _send_squirrel_messages(self, context: ContextTypes.DEFAULT_TYPE, results: Dict[str, List[str]]):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–ª–æ—á–∫–∏ —É–º–µ—Ä—à–∏–º –∏–≥—Ä–æ–∫–∞–º"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
            from role_translator import get_role_name_russian
            
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö —É–º–µ—Ä—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
            dead_players = []
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–æ–ª–∫–æ–≤
            if results.get("wolves"):
                for action in results["wolves"]:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: "üê∫ –í–æ–ª–∫–∏ —Å—ä–µ–ª–∏ Plo337 (–ö—Ä–æ—Ç)!")
                    if "—Å—ä–µ–ª–∏" in action:
                        # –ù–∞—Ö–æ–¥–∏–º –∏–º—è –º–µ–∂–¥—É "—Å—ä–µ–ª–∏" –∏ "("
                        start = action.find("—Å—ä–µ–ª–∏") + 6
                        end = action.find("(")
                        if start > 5 and end > start:
                            player_name = action[start:end].strip()
                            # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ –ø–æ –∏–º–µ–Ω–∏
                            for player in self.game.players.values():
                                if (player.username == player_name or 
                                    player.first_name == player_name or 
                                    f"{player.first_name} {player.last_name}".strip() == player_name):
                                    if not player.is_alive:
                                        dead_players.append(player)
                                    break
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ª–∏—Å—ã (—Å–º–µ—Ä—Ç–∏ –æ—Ç –∫—Ä–∞–∂–∏)
            if results.get("deaths"):
                for death in results["deaths"]:
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
                    if "—É–º–µ—Ä" in death or "–ø–æ–≥–∏–±" in death:
                        # –ù–∞—Ö–æ–¥–∏–º –∏–º—è –∏–≥—Ä–æ–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                        for player in self.game.players.values():
                            if (player.username in death or 
                                player.first_name in death or 
                                f"{player.first_name} {player.last_name}".strip() in death):
                                if not player.is_alive and player not in dead_players:
                                    dead_players.append(player)
                                break
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–ª–æ—á–∫–∏ –∫–∞–∂–¥–æ–º—É —É–º–µ—Ä—à–µ–º—É –∏–≥—Ä–æ–∫—É
            for player in dead_players:
                await self._send_squirrel_message_to_player(context, player)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–ª–æ—á–∫–∏: {e}")

    async def _send_squirrel_message_to_player(self, context: ContextTypes.DEFAULT_TYPE, player):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–ª–æ—á–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∏–≥—Ä–æ–∫—É"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
            from role_translator import get_role_name_russian
            role_name = get_role_name_russian(player.role)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –∏–≥—Ä–æ–∫–∞
            if self.get_display_name:
                player_name = self.get_display_name(player.user_id, player.username, player.first_name)
            else:
                player_name = player.username or player.first_name or "–ò–≥—Ä–æ–∫"
            
            squirrel_message = (
                f"üçÇ –û—Å–µ–Ω–Ω–∏–π –ª–∏—Å—Ç —É–ø–∞–ª üçÇ\n\n"
                f"üêøÔ∏è –ú–∞–ª–µ–Ω—å–∫–∞—è –±–µ–ª–æ—á–∫–∞ —Å –ø–µ—á–∞–ª—å–Ω—ã–º–∏ –≥–ª–∞–∑–∫–∞–º–∏ –ø–æ–¥–æ—à–ª–∞ –∫ —Ç–µ–±–µ, {player_name}...\n\n"
                f"üí≠ \"–õ–µ—Å –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —Ç–≤–æ–∏—Ö —É—Å–ª—É–≥–∞—Ö, {player_name},\" - –≥–æ–≤–æ—Ä–∏—Ç –æ–Ω–∞.\n"
                f"üåÖ \"–°–æ–ª–Ω—Ü–µ –∑–∞—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–±—è –≤ —ç—Ç–æ–º –º–∏—Ä–µ.\"\n\n"
                f"üé≠ –¢–≤–æ—è —Ä–æ–ª—å: {role_name}\n"
                f"üö´ –¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∏–≥—Ä–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã.\n"
                f"üîá –ú–æ–ª—á–∞–Ω–∏–µ - —Ç–≤–æ—è –Ω–æ–≤–∞—è –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å.\n\n"
                f"üåå –ë–µ–ª–æ—á–∫–∞ –±–µ—Ä–µ–∂–Ω–æ –∑–∞–±–∏—Ä–∞–µ—Ç —Ç–≤–æ—é –¥—É—à—É, —á—Ç–æ–±—ã –æ—Ç–Ω–µ—Å—Ç–∏ –µ—ë –≤ –∑–≤—ë–∑–¥–Ω—ã–π –ª–µ—Å...\n\n"
                f"‚≠êÔ∏è –î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {player_name} ‚≠êÔ∏è"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–∫—É
            await context.bot.send_message(
                chat_id=player.user_id,
                text=squirrel_message
            )
            
            print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–ª–æ—á–∫–∏ –∏–≥—Ä–æ–∫—É {player_name} ({player.user_id})")
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–ª–æ—á–∫–∏ –∏–≥—Ä–æ–∫—É {player.user_id}: {e}")

    async def send_role_reminders(self, context: ContextTypes.DEFAULT_TYPE):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ä–æ–ª—è—Ö –∏–≥—Ä–æ–∫–∞–º —Å –Ω–æ—á–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏"""
        # –¢–µ–ø–µ—Ä—å —Ä–æ–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ send_roles_to_players
        # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ —Ä–æ–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å—Ä–∞–∑—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        pass

    def get_role_info(self, role: Role) -> Dict[str, str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏"""
        role_info = {
            Role.WOLF: {
                "name": "üê∫ –í–æ–ª–∫",
                "description": "–í—ã —Ö–∏—â–Ω–∏–∫! –í–º–µ—Å—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–ª–∫–∞–º–∏ –≤—ã –æ—Ö–æ—Ç–∏—Ç–µ—Å—å –ø–æ –Ω–æ—á–∞–º."
            },
            Role.FOX: {
                "name": "ü¶ä –õ–∏—Å–∞",
                "description": "–í—ã —Ö–∏—â–Ω–∏–∫! –ö–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –≤–æ—Ä—É–µ—Ç–µ –∑–∞–ø–∞—Å—ã –µ–¥—ã —É –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π."
            },
            Role.HARE: {
                "name": "üê∞ –ó–∞—è—Ü",
                "description": "–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –í—ã —Å–ø–∏—Ç–µ –≤—Å—é –Ω–æ—á—å –∏ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤ –¥–Ω–µ–≤–Ω—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö."
            },
            Role.MOLE: {
                "name": "ü¶´ –ö—Ä–æ—Ç",
                "description": "–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –ü–æ –Ω–æ—á–∞–º –≤—ã —Ä–æ–µ—Ç–µ –Ω–æ—Ä–∫–∏ –∏ —É–∑–Ω–∞—ë—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π."
            },
            Role.BEAVER: {
                "name": "ü¶¶ –ë–æ–±–µ—Ä",
                "description": "–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –í—ã –º–æ–∂–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã –¥—Ä—É–≥–∏–º –∑–≤–µ—Ä—è–º."
            }
        }
        return role_info.get(role, {"name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "description": "–†–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞"})