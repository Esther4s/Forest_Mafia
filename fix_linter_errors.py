#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞ –≤ bot.py
"""

import re

def fix_linter_errors():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–∞ –≤ bot.py"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ª–∏–Ω—Ç–µ—Ä–∞ –≤ bot.py...")
    
    # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
    with open('bot.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    fixes = [
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º f-string –±–µ–∑ placeholders
        (r'f"([^"]*)"', lambda m: f'"{m.group(1)}"' if '{' not in m.group(1) else m.group(0)),
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        (r'except Exception as e:\s*\n\s*logger\.error\(f"[^"]*{e}[^"]*"\)', 
         lambda m: m.group(0).replace(' as e:', ':')),
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–∏–ø–∞–º–∏ –≤ callback query
        (r'query\.answer\(\)', 'await query.answer()'),
        (r'query\.edit_message_text\(', 'await query.edit_message_text('),
        (r'query\.data', 'query.data if query else None'),
    ]
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    for pattern, replacement in fixes:
        if callable(replacement):
            content = re.sub(pattern, replacement, content)
        else:
            content = re.sub(pattern, replacement, content)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('bot.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")

if __name__ == "__main__":
    fix_linter_errors()
