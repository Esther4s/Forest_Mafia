{"file_contents":{"INSTALL.md":{"content":"# üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ \"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\"\r\n\r\n## üìã –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è\r\n\r\n- Python 3.7 –∏–ª–∏ –≤—ã—à–µ\r\n- Telegram –∞–∫–∫–∞—É–Ω—Ç\r\n- –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —á–∞—Ç–µ/–∫–∞–Ω–∞–ª–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã\r\n\r\n## üîß –ü–æ—à–∞–≥–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞\r\n\r\n### 1. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ/—Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞\r\n```bash\r\n# –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å git\r\ngit clone <repository_url>\r\ncd forest_mafia_bot\r\n\r\n# –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–∫–∞—á–∞–π—Ç–µ –∏ —Ä–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤\r\n```\r\n\r\n### 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n### 3. –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –≤ Telegram\r\n1. –û—Ç–∫—Ä–æ–π—Ç–µ [@BotFather](https://t.me/BotFather) –≤ Telegram\r\n2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/newbot`\r\n3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º:\r\n   - –í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\")\r\n   - –í–≤–µ–¥–∏—Ç–µ username –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: \"forest_mafia_bot\")\r\n4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω\r\n\r\n### 4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\r\n1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª `env_example.txt` –≤ `.env`\r\n2. –û—Ç–∫—Ä–æ–π—Ç–µ `.env` –∏ –∑–∞–º–µ–Ω–∏—Ç–µ `your_bot_token_here` –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω:\r\n```env\r\nBOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz\r\n```\r\n\r\n### 5. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\r\n```bash\r\npython bot.py\r\n```\r\n\r\n## üéÆ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞\r\n\r\n### –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫\r\n1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≤–∞—à —á–∞—Ç/–∫–∞–Ω–∞–ª\r\n2. –î–∞–π—Ç–µ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–æ—Å–æ–±–µ–Ω–Ω–æ \"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏\")\r\n3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É `/start`\r\n\r\n### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä—ã\r\n1. –ò–≥—Ä–æ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç `/join` –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\r\n2. –ö–æ–≥–¥–∞ –Ω–∞–±–µ—Ä–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 6 –∏–≥—Ä–æ–∫–æ–≤, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç `/start_game`\r\n3. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç —Ä–æ–ª–∏ –∏ –Ω–∞—á–Ω–µ—Ç –∏–≥—Ä—É\r\n\r\n### –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\r\n- `/start` - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\r\n- `/rules` - –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\r\n- `/join` - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ\r\n- `/leave` - –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã)\r\n- `/start_game` - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/end_game` - –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/force_end` - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/settings` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/status` - —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã\r\n\r\n## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\r\n\r\n–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –±–µ–∑ Telegram:\r\n```bash\r\npython test_bot.py\r\n```\r\n\r\n## ‚ö†Ô∏è –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\r\n\r\n### –û—à–∏–±–∫–∞ \"ModuleNotFoundError\"\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n### –û—à–∏–±–∫–∞ \"Bot was blocked by the user\"\r\n- –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞\r\n- –ò–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∑–∞–Ω–æ–≤–æ\r\n\r\n### –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–µ\r\n- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É\r\n- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)\r\n- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\r\n\r\n### –û—à–∏–±–∫–∏ —Å –ø—Ä–∞–≤–∞–º–∏\r\n- –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\r\n- –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –ø—Ä–∞–≤–æ \"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏\"\r\n\r\n## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\r\n\r\n- –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞\r\n- –î–æ–±–∞–≤—å—Ç–µ `.env` –≤ `.gitignore`\r\n- –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\r\n\r\n## üì± –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã\r\n\r\n- Windows 10/11\r\n- macOS 10.14+\r\n- Linux (Ubuntu 18.04+, CentOS 7+)\r\n\r\n## ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–∞\r\n\r\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:\r\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞\r\n2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\r\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\r\n4. –°–æ–∑–¥–∞–π—Ç–µ issue –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞\r\n\r\n## üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\r\n\r\n–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ª–æ–≥–∏—Ä—É–µ—Ç:\r\n- –ó–∞–ø—É—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫—É\r\n- –û—à–∏–±–∫–∏ –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è\r\n- –ò–≥—Ä–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è\r\n- –î–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\r\n\r\n–õ–æ–≥–∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.\r\n","size_bytes":4806},"NEW_FEATURES.md":{"content":"# üÜï –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ \"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\"\r\n\r\n## üìã –û–±–∑–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π\r\n\r\n–í –±–æ—Ç–∞ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞:\r\n\r\n## üö™ –ú–µ—Ö–∞–Ω–∏–∑–º –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\r\n\r\n### –ö–æ–º–∞–Ω–¥–∞ `/leave`\r\n- **–û–ø–∏—Å–∞–Ω–∏–µ**: –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–≥—Ä–æ–∫–∞–º –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É –¥–æ –µ—ë –Ω–∞—á–∞–ª–∞\r\n- **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**: –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ñ–∞–∑–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤\r\n- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª**:\r\n  - –ò–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –¥–æ —Å—Ç–∞—Ä—Ç–∞\r\n  - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤\r\n  - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞\r\n\r\n### –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\r\n```\r\n/leave\r\nüëã Player1 –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É.\r\n–ò–≥—Ä–æ–∫–æ–≤: 5/12\r\n‚ö†Ô∏è –ò–≥—Ä–æ–∫–æ–≤ —Å—Ç–∞–ª–æ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º—É–º–∞. –ò–≥—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—á–∞—Ç–∞.\r\n```\r\n\r\n## üèÅ –ö–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã\r\n\r\n### –ö–æ–º–∞–Ω–¥–∞ `/end_game`\r\n- **–û–ø–∏—Å–∞–Ω–∏–µ**: –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ\r\n- **–ü—Ä–∞–≤–∞**: –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\r\n- **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**: –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã\r\n- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª**:\r\n  - –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏–≥—Ä–æ–≤—É—é —Å–µ—Å—Å–∏—é\r\n  - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä—ã\r\n  - –û—á–∏—â–∞–µ—Ç –≤—Å–µ –∏–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\r\n\r\n### –ö–æ–º–∞–Ω–¥–∞ `/force_end`\r\n- **–û–ø–∏—Å–∞–Ω–∏–µ**: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É –≤ –ª—é–±–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏\r\n- **–ü—Ä–∞–≤–∞**: –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\r\n- **–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è**: –ù–µ—Ç (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞)\r\n- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª**:\r\n  - –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–µ–∫—É—â–µ–π —Ñ–∞–∑—ã\r\n  - –ü–æ–ª–µ–∑–Ω–æ –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö\r\n  - –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è\r\n\r\n### –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\r\n```\r\n/end_game\r\nüèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\r\n\r\nüìã –ü—Ä–∏—á–∏–Ω–∞: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª –∏–≥—Ä—É\r\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã:\r\n–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: 8\r\n–†–∞—É–Ω–¥–æ–≤ —Å—ã–≥—Ä–∞–Ω–æ: 3\r\n–§–∞–∑–∞: game_over\r\n```\r\n\r\n## ‚öôÔ∏è –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫\r\n\r\n### –ö–æ–º–∞–Ω–¥–∞ `/settings`\r\n- **–û–ø–∏—Å–∞–Ω–∏–µ**: –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã\r\n- **–ü—Ä–∞–≤–∞**: –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\r\n- **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª**:\r\n  - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –∏–≥—Ä–æ–≤—ã—Ö —Ñ–∞–∑\r\n  - –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π\r\n  - –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä—ã\r\n\r\n### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤\r\n- **üåô –ù–æ—á—å**: 30—Å, 45—Å, 60—Å, 90—Å, 120—Å\r\n- **‚òÄÔ∏è –î–µ–Ω—å**: 3–º–∏–Ω, 5–º–∏–Ω, 7–º–∏–Ω, 10–º–∏–Ω\r\n- **üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ**: 1–º–∏–Ω, 1.5–º–∏–Ω, 2–º–∏–Ω, 3–º–∏–Ω\r\n\r\n### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π\r\n- **üê∫ –í–æ–ª–∫–∏**: 20%, 25%, 30%, 35%\r\n- **ü¶ä –õ–∏—Å–∞**: 10%, 15%, 20%, 25%\r\n- **ü¶´ –ö—Ä–æ—Ç**: 10%, 15%, 20%, 25%\r\n- **ü¶¶ –ë–æ–±—ë—Ä**: 5%, 10%, 15%, 20%\r\n- **üê∞ –ó–∞–π—Ü—ã**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–æ—Å—Ç–∞–≤—à–∏–π—Å—è –ø—Ä–æ—Ü–µ–Ω—Ç)\r\n\r\n### –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\r\n- –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ —Ä–∞—É–Ω–¥–æ–≤\r\n- –û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã\r\n- –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–∞–π–º–µ—Ä—ã —Ñ–∞–∑\r\n\r\n## üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏\r\n\r\n### –ù–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏\r\n- `handle_settings()` - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫\r\n- `handle_settings_back()` - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º\r\n- `handle_set_values()` - –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π\r\n- `handle_timer_setting()` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤\r\n- `handle_role_setting()` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π\r\n\r\n### –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\r\n- –í—Å–µ –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\r\n- –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\r\n- –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞\r\n\r\n### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\r\n- –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É\r\n- –ù–µ –Ω–∞—Ä—É—à–∞—é—Ç —Ä–∞–±–æ—Ç—É –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö –º–µ—Ö–∞–Ω–∏–∫\r\n- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏\r\n\r\n## üì± –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å\r\n\r\n### –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –º–µ–Ω—é\r\n- –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º\r\n- –í–∏–∑—É–∞–ª—å–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π\r\n- –ö–Ω–æ–ø–∫–∞ \"–ù–∞–∑–∞–¥\" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é\r\n\r\n### –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å\r\n- –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π\r\n- –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö\r\n- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö –¥–µ–π—Å—Ç–≤–∏–π\r\n\r\n## üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è\r\n\r\n### –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è\r\n- [ ] –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–µ–∂–¥—É –∏–≥—Ä–∞–º–∏\r\n- [ ] –≠–∫—Å–ø–æ—Ä—Ç/–∏–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π\r\n- [ ] –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–º–µ–Ω–µ–Ω–∏–π\r\n\r\n### –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è\r\n- [ ] –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫\r\n- [ ] –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫\r\n- [ ] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤\r\n\r\n## ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ\r\n\r\n–í—Å–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã:\r\n- –ú–µ—Ö–∞–Ω–∏–∑–º –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã ‚úÖ\r\n- –ö–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã ‚úÖ\r\n- –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ‚úÖ\r\n- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º ‚úÖ\r\n\r\n## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\r\n\r\n–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤:\r\n- `README.md` - –æ–±–Ω–æ–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\r\n- `INSTALL.md` - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\r\n- `PROJECT_SUMMARY.md` - –æ–±–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞\r\n- `NEW_FEATURES.md` - –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π\r\n\r\n## üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\r\n\r\n–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∞—é—Ç —É–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å –±–æ—Ç–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –∏–≥—Ä–æ–≤—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º. –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Å —É—á–µ—Ç–æ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.\r\n","size_bytes":7027},"PROJECT_SUMMARY.md":{"content":"# üìã –†–µ–∑—é–º–µ –ø—Ä–æ–µ–∫—Ç–∞ \"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\"\r\n\r\n## üéØ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞\r\n\r\n–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –¥–ª—è —Ä–æ–ª–µ–≤–æ–π –∏–≥—Ä—ã \"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\" - —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã \"–ú–∞—Ñ–∏—è\" —Å –ª–µ—Å–Ω—ã–º–∏ –∑–≤–µ—Ä—É—à–∫–∞–º–∏. –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑—É–µ—Ç –º–µ—Ö–∞–Ω–∏–∫—É –∏–≥—Ä—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é.\r\n\r\n## üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\r\n\r\n### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\r\n\r\n1. **`bot.py`** - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –±–æ—Ç–∞\r\n   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ Telegram\r\n   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã–º–∏ —Å–µ—Å—Å–∏—è–º–∏\r\n   - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏\r\n\r\n2. **`game_logic.py`** - –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞\r\n   - –ö–ª–∞—Å—Å—ã Game, Player, Role, Team\r\n   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã–º–∏ —Ñ–∞–∑–∞–º–∏\r\n   - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\r\n   - –°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\r\n\r\n3. **`night_actions.py`** - –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\r\n   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤–æ–ª–∫–æ–≤, –ª–∏—Å—ã, –±–æ–±—Ä–∞, –∫—Ä–æ—Ç–∞\r\n   - –°–∏—Å—Ç–µ–º–∞ –∫—Ä–∞–∂–∏ –∑–∞–ø–∞—Å–æ–≤ –ª–∏—Å–æ–π\r\n   - –ú–µ—Ö–∞–Ω–∏–∫–∞ –∑–∞—â–∏—Ç—ã –±–æ–±—Ä–∞\r\n   - –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥ –∫—Ä–æ—Ç–æ–º\r\n\r\n4. **`night_interface.py`** - –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\r\n   - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –º–µ–Ω—é –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤\r\n   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–µ–π\r\n   - –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–æ—á–∏\r\n\r\n5. **`config.py`** - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è\r\n   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\r\n   - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥—Ä—ã\r\n   - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\r\n\r\n## üéÆ –ò–≥—Ä–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞\r\n\r\n### –†–æ–ª–∏ –∏ –∫–æ–º–∞–Ω–¥—ã\r\n\r\n**üê∫ –•–∏—â–Ω–∏–∫–∏:**\r\n- **–í–æ–ª–∫–∏** - —Å—Ç–∞—è, –ø–æ –Ω–æ—á–∞–º —Å—ä–µ–¥–∞–µ—Ç –ø–æ –∑–≤–µ—Ä—é\r\n- **–õ–∏—Å–∞** - –≤–æ—Ä—É–µ—Ç –∑–∞–ø–∞—Å—ã –µ–¥—ã, –¥–≤–∞–∂–¥—ã –æ–±–≤–æ—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–≤–µ—Ä—å —É—Ö–æ–¥–∏—Ç\r\n\r\n**üê∞ –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ:**\r\n- **–ó–∞–π—Ü—ã** - –º–∏—Ä–Ω—ã–µ –∑–≤–µ—Ä—É—à–∫–∏, —Ç–æ–ª—å–∫–æ –¥–Ω–µ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\r\n- **–ö—Ä–æ—Ç** - —Ä–æ–µ—Ç –Ω–æ—Ä–∫–∏, —É–∑–Ω–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π\r\n- **–ë–æ–±—ë—Ä** - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã\r\n\r\n### –ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å\r\n\r\n1. **–ù–æ—á—å** - –∏–≥—Ä–æ–∫–∏ —Å –Ω–æ—á–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ —Å–æ–≤–µ—Ä—à–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—è\r\n2. **–î–µ–Ω—å** - –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π (5 –º–∏–Ω—É—Ç)\r\n3. **–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ** - –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ (2 –º–∏–Ω—É—Ç—ã)\r\n4. –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ü–∏–∫–ª–æ–≤ –¥–æ –ø–æ–±–µ–¥—ã –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥\r\n\r\n### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ—Ö–∞–Ω–∏–∫–∏\r\n\r\n- **–ü–æ—Ä—è–¥–æ–∫ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π**: –í–æ–ª–∫–∏ ‚Üí –õ–∏—Å–∞ ‚Üí –ë–æ–±—ë—Ä ‚Üí –ö—Ä–æ—Ç\r\n- **–ü–µ—Ä–≤–∞—è –Ω–æ—á—å**: –≤–æ–ª–∫–∏ –Ω–µ –µ–¥—è—Ç, –ª–∏—Å–∞ –Ω–µ –≤–æ—Ä—É–µ—Ç, –±–æ–±—ë—Ä –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç\r\n- **–ö—Ä–∞–∂–∞ –ª–∏—Å—ã**: –¥–≤–∞–∂–¥—ã –æ–±–≤–æ—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–≤–µ—Ä—å —É—Ö–æ–¥–∏—Ç –∏–∑ –∏–≥—Ä—ã\r\n- **–ó–∞—â–∏—Ç–∞ –±–æ–±—Ä–∞**: –±–æ–±—ë—Ä –Ω–µ–≤–æ—Å–ø—Ä–∏–∏–º—á–∏–≤ –∫ –∫—Ä–∞–∂–∞–º –ª–∏—Å—ã\r\n\r\n## üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏\r\n\r\n### –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å\r\n- –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\r\n- –¢–∞–π–º–µ—Ä—ã –¥–ª—è –∏–≥—Ä–æ–≤—ã—Ö —Ñ–∞–∑\r\n- –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥\r\n\r\n### –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\r\n- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã\r\n- –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –∏–≥—Ä–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\r\n- –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —É—á–∞—Å—Ç–∏—è –≤ –∏–≥—Ä–∞—Ö\r\n- –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã–º–∏ —Å–µ—Å—Å–∏—è–º–∏\r\n\r\n### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–π\r\n- –ú–µ—Ö–∞–Ω–∏–∑–º –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã\r\n- –ö–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã\r\n- –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\r\n- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä—ã\r\n\r\n### –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å\r\n- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–≥—Ä –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Ç–∞—Ö\r\n- –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\r\n- –õ–µ–≥–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ä–æ–ª–µ–π –∏ –º–µ—Ö–∞–Ω–∏–∫\r\n\r\n## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞\r\n\r\n- **–°—Ç—Ä–æ–∫ –∫–æ–¥–∞**: ~1000+\r\n- **–§–∞–π–ª–æ–≤**: 9\r\n- **–ö–ª–∞—Å—Å–æ–≤**: 6\r\n- **–ú–µ—Ç–æ–¥–æ–≤**: 40+\r\n- **–¢–µ—Å—Ç–æ–≤**: 1 (test_bot.py)\r\n\r\n## üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è\r\n\r\n### –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è\r\n- [x] –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã\r\n- [x] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤\r\n- [x] –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤—ã–º–∏ —Å–µ—Å—Å–∏—è–º–∏\r\n- [ ] –°–∏—Å—Ç–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã\r\n- [ ] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤\r\n- [ ] –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏\r\n\r\n### –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è\r\n- [ ] –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\r\n- [ ] –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π\r\n- [ ] –¢—É—Ä–Ω–∏—Ä–Ω—ã–π —Ä–µ–∂–∏–º\r\n- [ ] –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö\r\n\r\n## ‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¢–ó\r\n\r\n- [x] –í—Å–µ —Ä–æ–ª–∏ –∏ –∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏\r\n- [x] –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥ (—Ö–∏—â–Ω–∏–∫–∏/—Ç—Ä–∞–≤–æ—è–¥–Ω—ã–µ)\r\n- [x] –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É\r\n- [x] –î–Ω–µ–≤–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\r\n- [x] –ú–µ—Ö–∞–Ω–∏–∫–∞ –∫—Ä–∞–∂–∏ –∑–∞–ø–∞—Å–æ–≤ –ª–∏—Å–æ–π\r\n- [x] –ó–∞—â–∏—Ç–∞ –±–æ–±—Ä–∞ –æ—Ç –∫—Ä–∞–∂–∏\r\n- [x] –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥ –∫—Ä–æ—Ç–æ–º\r\n- [x] –°–∏—Å—Ç–µ–º–∞ –∏–∑–≥–Ω–∞–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤\r\n- [x] –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\r\n- [x] –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\r\n- [x] –ú–µ—Ö–∞–Ω–∏–∑–º –≤—ã—Ö–æ–¥–∞ –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä—ã\r\n- [x] –ö–æ–º–∞–Ω–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã\r\n- [x] –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–≥—Ä—ã\r\n\r\n## üéâ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\r\n\r\n–ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è. –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞ Telegram. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏ –∏–≥—Ä—ã.\r\n\r\n**–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É**: 95%\r\n**–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: –ü—Ä–æ–π–¥–µ–Ω–æ –±–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏\r\n**–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\r\n","size_bytes":6876},"README.md":{"content":"# üå≤ –õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è - Telegram Bot\r\n\r\n–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –¥–ª—è —Ä–æ–ª–µ–≤–æ–π –∏–≥—Ä—ã \"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\" - —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã \"–ú–∞—Ñ–∏—è\" —Å –ª–µ—Å–Ω—ã–º–∏ –∑–≤–µ—Ä—É—à–∫–∞–º–∏.\r\n\r\n## üéÆ –û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã\r\n\r\n\"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\" - —ç—Ç–æ –∫–æ–º–∞–Ω–¥–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Ä–æ–ª–µ–≤–∞—è –∏–≥—Ä–∞, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–µ –∫–æ–º–∞–Ω–¥—ã:\r\n\r\n### üê∫ –•–∏—â–Ω–∏–∫–∏\r\n- **–í–æ–ª–∫–∏** - —Å—Ç–∞—è, –ø–æ –Ω–æ—á–∞–º —Å—ä–µ–¥–∞—é—â–∞—è –ø–æ –∑–≤–µ—Ä—é\r\n- **–õ–∏—Å–∞** - –≤–æ—Ä—É–µ—Ç –∑–∞–ø–∞—Å—ã –µ–¥—ã, –¥–≤–∞–∂–¥—ã –æ–±–≤–æ—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–≤–µ—Ä—å —É—Ö–æ–¥–∏—Ç –∏–∑ –∏–≥—Ä—ã\r\n\r\n### üê∞ –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ\r\n- **–ó–∞–π—Ü—ã** - –º–∏—Ä–Ω—ã–µ –∑–≤–µ—Ä—É—à–∫–∏, —Ç–æ–ª—å–∫–æ –¥–Ω–µ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\r\n- **–ö—Ä–æ—Ç** - —Ä–æ–µ—Ç –Ω–æ—Ä–∫–∏, —É–∑–Ω–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π\r\n- **–ë–æ–±—ë—Ä** - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã\r\n\r\n## üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫\r\n\r\n### 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n### 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞\r\n1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ [@BotFather](https://t.me/BotFather) –≤ Telegram\r\n2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞\r\n3. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env` –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞:\r\n```env\r\nBOT_TOKEN=your_bot_token_here\r\n```\r\n\r\n### 3. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\r\n```bash\r\npython bot.py\r\n```\r\n\r\n## üìã –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\r\n\r\n- `/start` - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\r\n- `/rules` - –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\r\n- `/join` - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ\r\n- `/leave` - –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã)\r\n- `/start_game` - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/end_game` - –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/force_end` - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/settings` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\r\n- `/status` - —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã\r\n\r\n## üéØ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å\r\n\r\n### –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã\r\n1. –ò–≥—Ä–æ–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–æ–º–∞–Ω–¥—É `/join` –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\r\n2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç `/start_game` –∫–æ–≥–¥–∞ –Ω–∞–±—Ä–∞–ª–æ—Å—å –º–∏–Ω–∏–º—É–º 6 –∏–≥—Ä–æ–∫–æ–≤\r\n3. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–æ–ª–∏ –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏\r\n\r\n### –ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ü–µ—Å—Å\r\n1. **–ù–æ—á—å** - –∏–≥—Ä–æ–∫–∏ —Å –Ω–æ—á–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ —Å–æ–≤–µ—Ä—à–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—è\r\n2. **–î–µ–Ω—å** - –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç —Å–æ–±—ã—Ç–∏—è (5 –º–∏–Ω—É—Ç)\r\n3. **–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ** - –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ (2 –º–∏–Ω—É—Ç—ã)\r\n4. –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Ü–∏–∫–ª–æ–≤ –¥–æ –ø–æ–±–µ–¥—ã –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥\r\n\r\n### –ü–æ–±–µ–¥–∞\r\n- **–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ** –ø–æ–±–µ–∂–¥–∞—é—Ç, –∫–æ–≥–¥–∞ –≤—Å–µ —Ö–∏—â–Ω–∏–∫–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω—ã\r\n- **–•–∏—â–Ω–∏–∫–∏** –ø–æ–±–µ–∂–¥–∞—é—Ç, –∫–æ–≥–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ö–∏—â–Ω–∏–∫–æ–≤\r\n\r\n## üîß –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è\r\n\r\n- Python 3.7+\r\n- python-telegram-bot 20.7+\r\n- python-dotenv 1.0.0+\r\n\r\n## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\r\n\r\n```\r\nforest_mafia_bot/\r\n‚îú‚îÄ‚îÄ bot.py              # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞\r\n‚îú‚îÄ‚îÄ game_logic.py       # –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞\r\n‚îú‚îÄ‚îÄ night_actions.py    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\r\n‚îú‚îÄ‚îÄ config.py           # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è\r\n‚îú‚îÄ‚îÄ requirements.txt    # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\r\n‚îî‚îÄ‚îÄ README.md          # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\r\n```\r\n\r\n## ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è\r\n\r\n1. **–ü—Ä–∞–≤–∞ –±–æ—Ç–∞**: –ë–æ—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∞–≤–æ \"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏\" –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã\r\n2. **–ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤**: 6 –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã\r\n3. **–ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤**: 12 –∏–≥—Ä–æ–∫–æ–≤ –≤ –æ–¥–Ω–æ–π –∏–≥—Ä–µ\r\n4. **–¢–∞–π–º–µ—Ä—ã**: –ò–≥—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –º–µ–∂–¥—É —Ñ–∞–∑–∞–º–∏ –ø–æ —Ç–∞–π–º–µ—Ä—É\r\n\r\n## üêõ –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è\r\n\r\n- –í —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\r\n- –ò–≥—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–¥–Ω–æ–º —á–∞—Ç–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\r\n- –ù–µ—Ç —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã\r\n\r\n## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç\r\n\r\n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞ –∏–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫–∏, —Å–æ–∑–¥–∞–≤–∞–π—Ç–µ issues –∏–ª–∏ pull requests!\r\n\r\n## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è\r\n\r\n–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT.\r\n","size_bytes":5002},"bot.py":{"content":"#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport asyncio\nimport logging\nfrom typing import Dict, Optional\n\nfrom telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, BotCommand\nfrom telegram.ext import (\n    Application,\n    CommandHandler,\n    CallbackQueryHandler,\n    ContextTypes\n)\n\nfrom game_logic import Game, GamePhase, Role, Team, Player  # –≤–∞—à–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏\nfrom config import BOT_TOKEN, MIN_PLAYERS, TEST_MODE, TEST_MIN_PLAYERS  # –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\nfrom night_actions import NightActions\nfrom night_interface import NightInterface\nfrom global_settings import GlobalSettings # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º GlobalSettings\n\nlogging.basicConfig(\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n    level=logging.INFO\n)\nlogger = logging.getLogger(__name__)\n\n\nclass ForestMafiaBot:\n    def __init__(self):\n        # chat_id -> Game\n        self.games: Dict[int, Game] = {}\n        # user_id -> chat_id\n        self.player_games: Dict[int, int] = {}\n        # chat_id -> NightActions\n        self.night_actions: Dict[int, NightActions] = {}\n        # chat_id -> NightInterface\n        self.night_interfaces: Dict[int, NightInterface] = {}\n        # Global settings instance\n        self.global_settings = GlobalSettings()\n        # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ (–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ /setup_channel)\n        self.authorized_chats: set = set()\n\n    # ---------------- helper functions ----------------\n    async def can_bot_write_in_chat(self, context: ContextTypes.DEFAULT_TYPE, chat_id: int) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –ø–∏—Å–∞—Ç—å –≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ\"\"\"\n        try:\n            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –≤ —á–∞—Ç–µ\n            bot_member = await context.bot.get_chat_member(chat_id, context.bot.id)\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n            if bot_member.status in ['administrator', 'creator']:\n                return True\n            elif bot_member.status == 'member':\n                # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –≥—Ä—É–ø–ø –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π\n                chat = await context.bot.get_chat(chat_id)\n                if chat.type == 'private':\n                    return True\n                # –í –≥—Ä—É–ø–ø–∞—Ö –æ–±—ã—á–Ω–æ —á–ª–µ–Ω—ã –º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ\n                return True\n            else:\n                # kicked, left, restricted\n                return False\n        except Exception as e:\n            logger.warning(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {chat_id}: {e}\")\n            return False\n\n    async def check_bot_permissions_decorator(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–∞—Ç–∞ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã\"\"\"\n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n        \n        # –í–°–ï–ì–î–ê —Ä–∞–∑—Ä–µ—à–∞–µ–º –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∏–≥—Ä—ã!)\n        if chat_id == user_id:\n            return True\n        \n        # –†–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã /setup_channel –∏ /remove_channel –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤\n        if hasattr(update, 'message') and update.message and update.message.text:\n            if update.message.text.startswith('/setup_channel') or update.message.text.startswith('/remove_channel'):\n                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è —ç—Ç–∏—Ö –∫–æ–º–∞–Ω–¥\n                if not await self.can_bot_write_in_chat(context, chat_id):\n                    logger.info(f\"–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç–µ {chat_id}, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É\")\n                    return False\n                return True\n        \n        # –î–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω\n        if chat_id not in self.authorized_chats:\n            logger.info(f\"–ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç {chat_id} –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –¥–ª—è –∏–≥—Ä—ã, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É\")\n            return False\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –Ω–∞ –∑–∞–ø–∏—Å—å\n        if not await self.can_bot_write_in_chat(context, chat_id):\n            logger.info(f\"–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç–µ {chat_id}, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É\")\n            return False\n        \n        return True\n\n    # ---------------- helper functions for game logic ----------------\n    def format_player_tag(self, username: str, user_id: int) -> str:\n        \"\"\"–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–≥ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è\"\"\"\n        if username and not username.isdigit():\n            # –ï—Å–ª–∏ username –µ—Å—Ç—å –∏ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ ID\n            return f\"@{username}\" if not username.startswith('@') else username\n        else:\n            # –ï—Å–ª–∏ username –Ω–µ—Ç –∏–ª–∏ —ç—Ç–æ ID, –∏—Å–ø–æ–ª—å–∑—É–µ–º ID\n            return f\"ID:{user_id}\"\n\n    async def _join_game_common(self, chat_id: int, user_id: int, username: str, context: ContextTypes.DEFAULT_TYPE, \n                               is_callback: bool = False) -> tuple[bool, str, any]:\n        \"\"\"\n        –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ\n        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: (success, message, reply_markup)\n        \"\"\"\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            return False, \"‚ùå –ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö! –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Ç–∞–º.\", None\n\n        # already in another game?\n        if user_id in self.player_games:\n            other_chat = self.player_games[user_id]\n            if other_chat != chat_id:\n                try:\n                    other_chat_info = await context.bot.get_chat(other_chat)\n                    chat_name = other_chat_info.title or f\"–ß–∞—Ç {other_chat}\"\n                except:\n                    chat_name = f\"–ß–∞—Ç {other_chat}\"\n                return False, f\"‚ùå –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ –≤ –¥—Ä—É–≥–æ–º —á–∞—Ç–µ!\\n–ß–∞—Ç: {chat_name}\", None\n            else:\n                # –ò–≥—Ä–æ–∫ —É–∂–µ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å\n                game = self.games[chat_id]\n                max_players = getattr(game, \"MAX_PLAYERS\", 12)\n                \n                keyboard = [[InlineKeyboardButton(\"üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è\", callback_data=\"welcome_start_game\")]]\n                reply_markup = InlineKeyboardMarkup(keyboard)\n                \n                message = f\"‚ÑπÔ∏è –í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ!\\n–ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}/{max_players}\"\n                return False, message, reply_markup\n\n        # create game if needed\n        if chat_id not in self.games:\n            self.games[chat_id] = Game(chat_id)\n            self.games[chat_id].is_test_mode = self.global_settings.is_test_mode()\n            self.night_actions[chat_id] = NightActions(self.games[chat_id])\n            self.night_interfaces[chat_id] = NightInterface(self.games[chat_id], self.night_actions[chat_id])\n\n        game = self.games[chat_id]\n\n        if game.phase != GamePhase.WAITING:\n            return False, \"‚ùå –ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç! –î–æ–∂–¥–∏—Ç–µ—Å—å –µ—ë –æ–∫–æ–Ω—á–∞–Ω–∏—è.\", None\n\n        if game.add_player(user_id, username):\n            self.player_games[user_id] = chat_id\n            max_players = getattr(game, \"MAX_PLAYERS\", 12)\n            \n            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤\n            keyboard = [[InlineKeyboardButton(\"üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è\", callback_data=\"welcome_start_game\")]]\n            reply_markup = InlineKeyboardMarkup(keyboard)\n            \n            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å —Ç–µ–≥–∞–º–∏\n            players_list = \"\"\n            for player in game.players.values():\n                player_tag = self.format_player_tag(player.username, player.user_id)\n                players_list += f\"‚Ä¢ {player_tag}\\n\"\n            \n            message = (\n                f\"‚úÖ {self.format_player_tag(username, user_id)} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!\\n\\n\"\n                f\"üë• –ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}/{max_players}\\n\"\n                f\"üìã –ú–∏–Ω–∏–º—É–º –¥–ª—è —Å—Ç–∞—Ä—Ç–∞: {self.global_settings.get_min_players()}\\n\\n\"\n                f\"üìù –£—á–∞—Å—Ç–Ω–∏–∫–∏:\\n{players_list}\"\n            )\n            \n            if game.can_start_game():\n                message += \"\\n‚úÖ –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –∏–≥—Ä—É! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start_game\"\n            else:\n                message += f\"\\n‚è≥ –ù—É–∂–Ω–æ –µ—â—ë {max(0, self.global_settings.get_min_players() - len(game.players))} –∏–≥—Ä–æ–∫–æ–≤\"\n            \n            return True, message, reply_markup\n        else:\n            return False, \"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ!\", None\n\n    # ---------------- basic commands ----------------\n    async def welcome_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        keyboard = [\n            [InlineKeyboardButton(\"üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\", callback_data=\"welcome_start_game\")],\n            [InlineKeyboardButton(\"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\", callback_data=\"welcome_rules\")],\n            [InlineKeyboardButton(\"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã\", callback_data=\"welcome_status\")]\n        ]\n        reply_markup = InlineKeyboardMarkup(keyboard)\n\n        welcome_text = (\n            \"üå≤ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –õ–µ—Å–Ω—É—é –í–æ–∑–Ω—é!* üå≤\\n\\n\"\n            \"üé≠ –≠—Ç–æ —Ä–æ–ª–µ–≤–∞—è –∏–≥—Ä–∞ –≤ —Å—Ç–∏–ª–µ '–ú–∞—Ñ–∏—è' —Å –ª–µ—Å–Ω—ã–º–∏ –∑–≤–µ—Ä—É—à–∫–∞–º–∏!\\n\\n\"\n            \"üê∫ *–•–∏—â–Ω–∏–∫–∏:* –í–æ–ª–∫–∏ –∏ –õ–∏—Å–∞\\n\"\n            \"üê∞ *–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ:* –ó–∞–π—Ü—ã, –ö—Ä–æ—Ç –∏ –ë–æ–±—ë—Ä\\n\\n\"\n            \"üéØ *–¶–µ–ª—å:* –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!\\n\\n\"\n            f\"üë• –î–ª—è –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {self.global_settings.get_min_players()} –∏–≥—Ä–æ–∫–æ–≤\\n\"\n            f\"{'üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ï–ù' if self.global_settings.is_test_mode() else ''}\\n\"\n            \"‚è∞ –ò–≥—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–æ—á–Ω—ã—Ö –∏ –¥–Ω–µ–≤–Ω—ã—Ö —Ñ–∞–∑\\n\\n\"\n            \"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!\"\n        )\n\n        await update.message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode='Markdown')\n\n    async def rules(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        rules_text = (\n            \"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã '–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è':\\n\\n\"\n            \"üé≠ –†–æ–ª–∏:\\n\"\n            \"üê∫ –í–æ–ª–∫–∏ (–•–∏—â–Ω–∏–∫–∏) - —Å—Ç–∞—è, –ø–æ –Ω–æ—á–∞–º —Å—ä–µ–¥–∞–µ—Ç –ø–æ –∑–≤–µ—Ä—é\\n\"\n            \"ü¶ä –õ–∏—Å–∞ (–•–∏—â–Ω–∏–∫–∏) - –≤–æ—Ä—É–µ—Ç –∑–∞–ø–∞—Å—ã –µ–¥—ã\\n\"\n            \"üê∞ –ó–∞–π—Ü—ã (–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ) - –º–∏—Ä–Ω—ã–µ –∑–≤–µ—Ä—É—à–∫–∏\\n\"\n            \"ü¶´ –ö—Ä–æ—Ç (–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ) - —Ä–æ–µ—Ç –Ω–æ—Ä–∫–∏, —É–∑–Ω–∞—ë—Ç –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π\\n\"\n            \"ü¶¶ –ë–æ–±—ë—Ä (–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã\\n\\n\"\n            \"üåô –ù–æ—á–Ω—ã–µ —Ñ–∞–∑—ã: –í–æ–ª–∫–∏ ‚Üí –õ–∏—Å–∞ ‚Üí –ë–æ–±—ë—Ä ‚Üí –ö—Ä–æ—Ç\\n\"\n            \"‚òÄÔ∏è –î–Ω–µ–≤–Ω—ã–µ —Ñ–∞–∑—ã: –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\\n\"\n            \"üèÜ –¶–µ–ª—å: —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞\"\n        )\n        await update.message.reply_text(rules_text)\n\n    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        help_text = (\n            \"üÜò –ö–∞–∫ –∏–≥—Ä–∞—Ç—å –≤ '–õ–µ—Å–Ω—É—é –í–æ–∑–Ω—é' üÜò\\n\\n\"\n            \"üìù –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\\n\\n\"\n            \"1Ô∏è‚É£ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∏–≥—Ä–µ:\\n\"\n            \"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è\\n\"\n            \"   ‚Ä¢ –ú–∏–Ω–∏–º—É–º 6 –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞ (3 –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)\\n\"\n            \"   ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 12 –∏–≥—Ä–æ–∫–æ–≤\\n\\n\"\n            \"2Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã:\\n\"\n            \"   ‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç /start_game\\n\"\n            \"   ‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç —Ä–æ–ª–∏\\n\"\n            \"   ‚Ä¢ –ö–∞–∂–¥—ã–π –ø–æ–ª—É—á–∏—Ç —Ä–æ–ª—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\\n\\n\"\n            \"3Ô∏è‚É£ –ù–æ—á–Ω–∞—è —Ñ–∞–∑–∞ (60 —Å–µ–∫):\\n\"\n            \"   üê∫ –í–æ–ª–∫–∏ –≤—ã–±–∏—Ä–∞—é—Ç –∂–µ—Ä—Ç–≤—É (—Å 2-–π –Ω–æ—á–∏)\\n\"\n            \"   ü¶ä –õ–∏—Å–∞ –≤–æ—Ä—É–µ—Ç –∑–∞–ø–∞—Å—ã (—Å 2-–π –Ω–æ—á–∏)\\n\"\n            \"   ü¶¶ –ë–æ–±—ë—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∞—Å—ã\\n\"\n            \"   ü¶´ –ö—Ä–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã\\n\"\n            \"   üê∞ –ó–∞–π—Ü—ã —Å–ø—è—Ç\\n\\n\"\n            \"4Ô∏è‚É£ –î–Ω–µ–≤–Ω–∞—è —Ñ–∞–∑–∞ (5 –º–∏–Ω):\\n\"\n            \"   ‚Ä¢ –û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–æ—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π\\n\"\n            \"   ‚Ä¢ –ü–æ–∏—Å–∫ —Ö–∏—â–Ω–∏–∫–æ–≤\\n\"\n            \"   ‚Ä¢ –ö–Ω–æ–ø–∫–∞ '–ö—Ç–æ –≤–æ–ª–∫?' –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\\n\\n\"\n            \"5Ô∏è‚É£ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ (2 –º–∏–Ω):\\n\"\n            \"   ‚Ä¢ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö\\n\"\n            \"   ‚Ä¢ –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ - –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –¥–æ—Å—Ä–æ—á–Ω–æ\\n\"\n            \"   ‚Ä¢ –ò–≥—Ä–æ–∫ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤ –∏–∑–≥–æ–Ω—è–µ—Ç—Å—è\\n\\n\"\n            \"üèÜ –£—Å–ª–æ–≤–∏—è –ø–æ–±–µ–¥—ã:\\n\"\n            \"   ‚Ä¢ –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ: —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å –≤—Å–µ—Ö —Ö–∏—â–Ω–∏–∫–æ–≤\\n\"\n            \"   ‚Ä¢ –•–∏—â–Ω–∏–∫–∏: —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å –≤—Å–µ—Ö —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö\\n\\n\"\n            \"üé≠ –†–æ–ª–∏:\\n\"\n            \"üê∫ –í–æ–ª–∫–∏ - –µ–¥—è—Ç –ø–æ –Ω–æ—á–∞–º, –∑–Ω–∞—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞\\n\"\n            \"ü¶ä –õ–∏—Å–∞ - –≤–æ—Ä—É–µ—Ç –µ–¥—É, –ø–æ—Å–ª–µ 2 –∫—Ä–∞–∂ –∂–µ—Ä—Ç–≤–∞ —É—Ö–æ–¥–∏—Ç\\n\"\n            \"üê∞ –ó–∞–π—Ü—ã - –º–∏—Ä–Ω—ã–µ –∂–∏—Ç–µ–ª–∏\\n\"\n            \"ü¶´ –ö—Ä–æ—Ç - —É–∑–Ω–∞—ë—Ç –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤\\n\"\n            \"ü¶¶ –ë–æ–±—ë—Ä - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫—Ä–∞–¥–µ–Ω–Ω—É—é –µ–¥—É, –∑–∞—â–∏—â—ë–Ω –æ—Ç –ª–∏—Å—ã\\n\\n\"\n            \"üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\\n\"\n            \"/rules - –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\\n\"\n            \"/status - —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã\\n\"\n            \"/leave - –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É (–¥–æ –Ω–∞—á–∞–ª–∞)\\n\"\n            \"/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∞–¥–º–∏–Ω—ã)\\n\\n\"\n            \"üéÆ –£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã!\"\n        )\n        await update.message.reply_text(help_text)\n\n    # ---------------- callback helpers ----------------\n    async def join_from_callback(self, query, context: ContextTypes.DEFAULT_TYPE):\n        chat_id = query.message.chat.id\n        user_id = query.from_user.id\n        username = query.from_user.username or query.from_user.full_name or str(user_id)\n\n        success, message, reply_markup = await self._join_game_common(chat_id, user_id, username, context, is_callback=True)\n        \n        if success:\n            try:\n                game = self.games[chat_id]\n                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –≤ —á–∞—Ç\n                join_message = await query.message.reply_text(message, reply_markup=reply_markup)\n                \n                # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–∫—Ä–µ–ø–ª—è–µ–º –µ–≥–æ\n                if hasattr(game, 'pinned_message_id') and game.pinned_message_id:\n                    try:\n                        await context.bot.unpin_chat_message(chat_id, game.pinned_message_id)\n                    except:\n                        pass\n                \n                # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n                await context.bot.pin_chat_message(chat_id, join_message.message_id)\n                game.pinned_message_id = join_message.message_id\n                \n                # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º callback-—Å–æ–æ–±—â–µ–Ω–∏–µ\n                await query.edit_message_text(f\"‚úÖ –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!\\n–ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}/12\")\n                \n            except Exception as e:\n                logger.error(f\"Error in join_from_callback: {e}\")\n                await query.edit_message_text(\"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∫ –∏–≥—Ä–µ!\")\n        else:\n            await query.edit_message_text(message, reply_markup=reply_markup)\n\n    async def status_from_callback(self, query, context: ContextTypes.DEFAULT_TYPE):\n        chat_id = query.message.chat.id\n\n        if chat_id not in self.games:\n            await query.edit_message_text(\"‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã!\\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\")\n            return\n\n        game = self.games[chat_id]\n\n        if game.phase == GamePhase.WAITING:\n            min_players = self.global_settings.get_min_players()\n            status_text = (\n                \"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...\\n\\n\"\n                f\"üë• –ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}/{getattr(game, 'MAX_PLAYERS', 12)}\\n\"\n                f\"üìã –ú–∏–Ω–∏–º—É–º –¥–ª—è –Ω–∞—á–∞–ª–∞: {min_players}\\n\\n\"\n                \"–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:\\n\"\n            )\n            for player in game.players.values():\n                player_tag = self.format_player_tag(player.username, player.user_id)\n                status_text += f\"‚Ä¢ {player_tag}\\n\"\n            if game.can_start_game():\n                status_text += \"\\n‚úÖ –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –∏–≥—Ä—É!\"\n            else:\n                status_text += f\"\\n‚è≥ –ù—É–∂–Ω–æ –µ—â—ë {max(0, min_players - len(game.players))} –∏–≥—Ä–æ–∫–æ–≤\"\n        else:\n            phase_names = {\n                GamePhase.NIGHT: \"üåô –ù–æ—á—å\",\n                GamePhase.DAY: \"‚òÄÔ∏è –î–µ–Ω—å\",\n                GamePhase.VOTING: \"üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\",\n                GamePhase.GAME_OVER: \"üèÅ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\"\n            }\n            status_text = (\n                f\"üéÆ –ò–≥—Ä–∞ –∏–¥—ë—Ç\\n\\n\"\n                f\"üìä –§–∞–∑–∞: {phase_names.get(game.phase, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\\n\"\n                f\"üîÑ –†–∞—É–Ω–¥: {game.current_round}\\n\"\n                f\"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(game.get_alive_players())}\\n\\n\"\n                \"–ñ–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏:\\n\"\n            )\n            for p in game.get_alive_players():\n                player_tag = self.format_player_tag(p.username, p.user_id)\n                status_text += f\"‚Ä¢ {player_tag}\\n\"\n\n        await query.edit_message_text(status_text)\n\n    # ---------------- join / leave / status ----------------\n    async def join(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n        username = update.effective_user.username or update.effective_user.full_name or str(user_id)\n\n        success, message, reply_markup = await self._join_game_common(chat_id, user_id, username, context, is_callback=False)\n        \n        if success:\n            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n            try:\n                game = self.games[chat_id]\n                join_message = await update.message.reply_text(message, reply_markup=reply_markup)\n                \n                # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ\n                if hasattr(game, 'pinned_message_id') and game.pinned_message_id:\n                    try:\n                        await context.bot.unpin_chat_message(chat_id, game.pinned_message_id)\n                    except:\n                        pass\n                \n                await context.bot.pin_chat_message(chat_id, join_message.message_id)\n                game.pinned_message_id = join_message.message_id\n                \n            except Exception as e:\n                logger.error(f\"Error in join: {e}\")\n                await update.message.reply_text(\"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∫ –∏–≥—Ä–µ!\")\n        else:\n            await update.message.reply_text(message, reply_markup=reply_markup)\n\n    async def leave(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n        username = update.effective_user.username or update.effective_user.full_name or str(user_id)\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!\")\n            return\n\n        if chat_id not in self.games:\n            await update.message.reply_text(\"‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã!\")\n            return\n\n        game = self.games[chat_id]\n\n        if game.phase != GamePhase.WAITING:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç! –ù–µ–ª—å–∑—è –ø–æ–∫–∏–Ω—É—Ç—å —Å–µ–π—á–∞—Å.\")\n            return\n\n        if user_id not in game.players:\n            await update.message.reply_text(\"‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ!\")\n            return\n\n        if game.leave_game(user_id):\n            if user_id in self.player_games:\n                del self.player_games[user_id]\n            await update.message.reply_text(f\"üëã {username} –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É.\\n–ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}/{getattr(game, 'MAX_PLAYERS', 12)}\")\n            if not game.can_start_game():\n                await update.message.reply_text(\"‚ö†Ô∏è –ò–≥—Ä–æ–∫–æ–≤ —Å—Ç–∞–ª–æ –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º—É–º–∞. –ò–≥—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—á–∞—Ç–∞.\")\n        else:\n            await update.message.reply_text(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É.\")\n\n    async def status(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == update.effective_user.id:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!\")\n            return\n\n        if chat_id not in self.games:\n            await update.message.reply_text(\"‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã!\\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è.\")\n            return\n\n        game = self.games[chat_id]\n\n        if game.phase == GamePhase.WAITING:\n            min_players = self.global_settings.get_min_players()\n            status_text = (\n                \"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...\\n\\n\"\n                f\"üë• –ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}/{getattr(game, 'MAX_PLAYERS', 12)}\\n\"\n                f\"üìã –ú–∏–Ω–∏–º—É–º –¥–ª—è –Ω–∞—á–∞–ª–∞: {min_players}\\n\\n\"\n                \"–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:\\n\"\n            )\n            for player in game.players.values():\n                player_tag = self.format_player_tag(player.username, player.user_id)\n                status_text += f\"‚Ä¢ {player_tag}\\n\"\n            if game.can_start_game():\n                status_text += \"\\n‚úÖ –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –∏–≥—Ä—É!\"\n            else:\n                status_text += f\"\\n‚è≥ –ù—É–∂–Ω–æ –µ—â—ë {max(0, min_players - len(game.players))} –∏–≥—Ä–æ–∫–æ–≤\"\n        else:\n            phase_names = {\n                GamePhase.NIGHT: \"üåô –ù–æ—á—å\",\n                GamePhase.DAY: \"‚òÄÔ∏è –î–µ–Ω—å\",\n                GamePhase.VOTING: \"üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\",\n                GamePhase.GAME_OVER: \"üèÅ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\"\n            }\n            status_text = (\n                f\"üéÆ –ò–≥—Ä–∞ –∏–¥—ë—Ç\\n\\n\"\n                f\"üìä –§–∞–∑–∞: {phase_names.get(game.phase, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\\n\"\n                f\"üîÑ –†–∞—É–Ω–¥: {game.current_round}\\n\"\n                f\"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(game.get_alive_players())}\\n\\n\"\n                \"–ñ–∏–≤—ã–µ –∏–≥—Ä–æ–∫–∏:\\n\"\n            )\n            for p in game.get_alive_players():\n                player_tag = self.format_player_tag(p.username, p.user_id)\n                status_text += f\"‚Ä¢ {player_tag}\\n\"\n\n        await update.message.reply_text(status_text)\n\n    # ---------------- starting / ending game ----------------\n    async def start_game(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!\")\n            return\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await update.message.reply_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å –∏–≥—Ä—É!\")\n            return\n\n        if chat_id not in self.games:\n            await update.message.reply_text(\"‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ!\")\n            return\n\n        game = self.games[chat_id]\n\n        min_players = self.global_settings.get_min_players()\n        if not game.can_start_game():\n            await update.message.reply_text(f\"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤! –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {min_players} –∏–≥—Ä–æ–∫–æ–≤.\")\n            return\n\n        if game.phase != GamePhase.WAITING:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç!\")\n            return\n\n        if game.start_game():\n            await self.start_night_phase(update, context, game)\n        else:\n            await update.message.reply_text(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!\")\n\n    async def end_game(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await update.message.reply_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∑–∞–≤–µ—Ä—à–∞—Ç—å –∏–≥—Ä—É!\")\n            return\n\n        if chat_id not in self.games:\n            await update.message.reply_text(\"‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ!\")\n            return\n\n        game = self.games[chat_id]\n\n        if game.phase == GamePhase.WAITING:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start_game —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É.\")\n            return\n\n        await self._end_game_internal(update, context, game, \"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª –∏–≥—Ä—É\")\n\n    async def force_end(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\"‚ùå –ò–≥—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!\")\n            return\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await update.message.reply_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å –∏–≥—Ä—É!\")\n            return\n\n        if chat_id not in self.games:\n            await update.message.reply_text(\"‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –≤ —ç—Ç–æ–º —á–∞—Ç–µ!\")\n            return\n\n        game = self.games[chat_id]\n        await self._end_game_internal(update, context, game, \"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª –∏–≥—Ä—É\")\n\n    async def clear_all_games(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        user_id = update.effective_user.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è –±–æ—Ç–∞ (–º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ)\n        if user_id != 123456789:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à user_id\n            await update.message.reply_text(\"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã!\")\n            return\n\n        games_count = len(self.games)\n        players_count = len(self.player_games)\n\n        # –û—á–∏—â–∞–µ–º –≤—Å–µ –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏\n        self.games.clear()\n        self.player_games.clear()\n        self.night_actions.clear()\n        self.night_interfaces.clear()\n\n        await update.message.reply_text(\n            f\"üßπ –í—Å–µ –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏ –æ—á–∏—â–µ–Ω—ã!\\n\\n\"\n            f\"üìä –ë—ã–ª–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∏–≥—Ä: {games_count}\\n\"\n            f\"üë• –ë—ã–ª–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: {players_count}\"\n        )\n\n    async def setup_channel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –∏–≥—Ä—ã\"\"\"\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞ –∏–ª–∏ –∫–∞–Ω–∞–ª, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\n                \"‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö –∏ –∫–∞–Ω–∞–ª–∞—Ö!\\n\"\n                \"–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ç–∞–º.\"\n            )\n            return\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n        try:\n            chat_member = await context.bot.get_chat_member(chat_id, user_id)\n            if chat_member.status not in ['creator', 'administrator']:\n                await update.message.reply_text(\n                    \"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∏–≥—Ä—ã!\"\n                )\n                return\n        except Exception as e:\n            await update.message.reply_text(\n                \"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. \"\n                \"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\"\n            )\n            return\n        \n        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ\n        try:\n            chat_info = await context.bot.get_chat(chat_id)\n            chat_name = chat_info.title or f\"–ß–∞—Ç {chat_id}\"\n            chat_type = chat_info.type\n        except Exception:\n            chat_name = f\"–ß–∞—Ç {chat_id}\"\n            chat_type = \"unknown\"\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞\n        if chat_id in self.games:\n            game = self.games[chat_id]\n            if game.phase != GamePhase.WAITING:\n                await update.message.reply_text(\n                    f\"‚ö†Ô∏è –í –∫–∞–Ω–∞–ª–µ '{chat_name}' —É–∂–µ –∏–¥—ë—Ç –∏–≥—Ä–∞!\\n\"\n                    f\"–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: {game.phase.value}\\n\"\n                    f\"–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(game.players)}\\n\\n\"\n                    \"–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /force_end –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.\"\n                )\n                return\n            else:\n                # –ï—Å—Ç—å –∏–≥—Ä–∞ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ - –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Ç—ã –µ—Å–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω\n                self.authorized_chats.add(chat_id)\n                # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å\n                await update.message.reply_text(\n                    f\"‚úÖ –ö–∞–Ω–∞–ª '{chat_name}' —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∏–≥—Ä—ã!\\n\\n\"\n                    f\"üìä –°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤\\n\"\n                    f\"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(game.players)}/{getattr(game, 'MAX_PLAYERS', 12)}\\n\"\n                    f\"üìã –ú–∏–Ω–∏–º—É–º –¥–ª—è —Å—Ç–∞—Ä—Ç–∞: {self.global_settings.get_min_players()}\\n\\n\"\n                    \"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /join –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ.\"\n                )\n                return\n        \n        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∏–≥—Ä—ã\n        try:\n            # –î–æ–±–∞–≤–ª—è–µ–º —á–∞—Ç –≤ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–µ\n            self.authorized_chats.add(chat_id)\n            \n            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É\n            self.games[chat_id] = Game(chat_id)\n            self.games[chat_id].is_test_mode = self.global_settings.is_test_mode()\n            self.night_actions[chat_id] = NightActions(self.games[chat_id])\n            self.night_interfaces[chat_id] = NightInterface(self.games[chat_id], self.night_actions[chat_id])\n            \n            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –±—ã—Å—Ç—Ä—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏\n            keyboard = [\n                [InlineKeyboardButton(\"üë• –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ\", callback_data=\"welcome_start_game\")],\n                [InlineKeyboardButton(\"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\", callback_data=\"welcome_rules\")],\n                [InlineKeyboardButton(\"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã\", callback_data=\"welcome_status\")]\n            ]\n            reply_markup = InlineKeyboardMarkup(keyboard)\n            \n            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ\n            setup_message = (\n                f\"‚úÖ –ö–∞–Ω–∞–ª '{chat_name}' —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∏–≥—Ä—ã '–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è'!\\n\\n\"\n                f\"üéÆ –¢–∏–ø —á–∞—Ç–∞: {chat_type}\\n\"\n                f\"üìã –ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {self.global_settings.get_min_players()}\\n\"\n                f\"üë• –ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {getattr(self.games[chat_id], 'MAX_PLAYERS', 12)}\\n\"\n                f\"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {'–í–∫–ª—é—á–µ–Ω' if self.global_settings.is_test_mode() else '–û—Ç–∫–ª—é—á–µ–Ω'}\\n\\n\"\n                \"üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏–≥—Ä–µ! –£—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\\n\"\n                \"‚Ä¢ /join - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ\\n\"\n                \"‚Ä¢ /status - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å\\n\"\n                \"‚Ä¢ /rules - –∏–∑—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞\\n\\n\"\n                \"üéØ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\\n\"\n                \"‚Ä¢ /start_game - –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\\n\"\n                \"‚Ä¢ /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã\\n\"\n                \"‚Ä¢ /end_game - –∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É\\n\\n\"\n                \"–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã! üå≤\"\n            )\n            \n            await update.message.reply_text(setup_message, reply_markup=reply_markup)\n            \n            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É\n            logger.info(f\"Channel {chat_id} ({chat_name}) successfully set up for Forest Mafia by user {user_id}\")\n            \n        except Exception as e:\n            logger.error(f\"Error setting up channel {chat_id}: {e}\")\n            await update.message.reply_text(\n                \"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–∞!\\n\"\n                \"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞.\"\n            )\n\n    async def remove_channel(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã\"\"\"\n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n        \n        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ check_bot_permissions_decorator —á–µ—Ä–µ–∑ startswith('/remove_channel')\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞ –∏–ª–∏ –∫–∞–Ω–∞–ª, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\n                \"‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö –∏ –∫–∞–Ω–∞–ª–∞—Ö!\"\n            )\n            return\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n        try:\n            chat_member = await context.bot.get_chat_member(chat_id, user_id)\n            if chat_member.status not in ['creator', 'administrator']:\n                await update.message.reply_text(\n                    \"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å –∫–∞–Ω–∞–ª –∏–∑ –∏–≥—Ä—ã!\"\n                )\n                return\n        except Exception as e:\n            await update.message.reply_text(\n                \"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\"\n            )\n            return\n        \n        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ\n        try:\n            chat_info = await context.bot.get_chat(chat_id)\n            chat_name = chat_info.title or f\"–ß–∞—Ç {chat_id}\"\n        except Exception:\n            chat_name = f\"–ß–∞—Ç {chat_id}\"\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞\n        if chat_id in self.games:\n            game = self.games[chat_id]\n            if game.phase != GamePhase.WAITING:\n                await update.message.reply_text(\n                    f\"‚ùå –í –∫–∞–Ω–∞–ª–µ '{chat_name}' –∏–¥—ë—Ç –∏–≥—Ä–∞!\\n\"\n                    \"–ó–∞–≤–µ—Ä—à–∏—Ç–µ –∏–≥—Ä—É –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–∞–Ω–∞–ª–∞ –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö.\"\n                )\n                return\n            else:\n                # –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –∏ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n                for pid in list(game.players.keys()):\n                    if pid in self.player_games:\n                        del self.player_games[pid]\n                del self.games[chat_id]\n                if chat_id in self.night_actions:\n                    del self.night_actions[chat_id]\n                if chat_id in self.night_interfaces:\n                    del self.night_interfaces[chat_id]\n        \n        # –£–¥–∞–ª—è–µ–º —á–∞—Ç –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö\n        if chat_id in self.authorized_chats:\n            self.authorized_chats.remove(chat_id)\n            await update.message.reply_text(\n                f\"‚úÖ –ö–∞–Ω–∞–ª '{chat_name}' —É–¥–∞–ª–µ–Ω –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã!\\n\\n\"\n                \"üö´ –ë–æ—Ç –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.\\n\"\n                \"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setup_channel –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\"\n            )\n            logger.info(f\"Channel {chat_id} ({chat_name}) removed from authorized chats by user {user_id}\")\n        else:\n            await update.message.reply_text(\n                f\"‚ùå –ö–∞–Ω–∞–ª '{chat_name}' –Ω–µ –±—ã–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∏–≥—Ä—ã.\\n\"\n                \"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setup_channel –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\"\n            )\n\n    async def _end_game_internal(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game, reason: str):\n        game.phase = GamePhase.GAME_OVER\n\n        # –û—Ç–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã\n        if hasattr(game, 'pinned_message_id') and game.pinned_message_id:\n            try:\n                await context.bot.unpin_chat_message(\n                    chat_id=game.chat_id,\n                    message_id=game.pinned_message_id\n                )\n            except Exception as e:\n                logger.warning(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}\")\n\n        await update.message.reply_text(\n            f\"üèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\\n\\nüìã –ü—Ä–∏—á–∏–Ω–∞: {reason}\\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã:\\n\"\n            f\"–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\\n–†–∞—É–Ω–¥–æ–≤ —Å—ã–≥—Ä–∞–Ω–æ: {game.current_round}\\n–§–∞–∑–∞: {game.phase.value}\"\n        )\n\n        # –æ—á–∏—â–∞–µ–º –º–∞–ø–ø–∏–Ω–≥–∏\n        for pid in list(game.players.keys()):\n            if pid in self.player_games:\n                del self.player_games[pid]\n\n        chat_id = game.chat_id\n        if chat_id in self.games:\n            del self.games[chat_id]\n        if chat_id in self.night_actions:\n            del self.night_actions[chat_id]\n        if chat_id in self.night_interfaces:\n            del self.night_interfaces[chat_id]\n\n    # ---------------- night/day/vote flow ----------------\n    async def start_night_phase(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        game.start_night()\n        \n        # –û—Ç–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏, —Ç–∞–∫ –∫–∞–∫ –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å\n        if hasattr(game, 'pinned_message_id') and game.pinned_message_id:\n            try:\n                await context.bot.unpin_chat_message(\n                    chat_id=game.chat_id,\n                    message_id=game.pinned_message_id\n                )\n                game.pinned_message_id = None\n            except Exception as e:\n                logger.warning(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}\")\n        \n        await update.message.reply_text(\"üåô –ù–∞—Å—Ç—É–ø–∞–µ—Ç –Ω–æ—á—å –≤ –ª–µ—Å—É...\\n–í—Å–µ –∑–≤–µ—Ä–∏ –∑–∞—Å—ã–ø–∞—é—Ç, –∫—Ä–æ–º–µ –Ω–æ—á–Ω—ã—Ö –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π.\\n\\nüé≠ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\")\n\n        # –õ–° —Å —Ä–æ–ª—è–º–∏\n        for player in game.players.values():\n            role_info = self.get_role_info(player.role)\n            try:\n                await context.bot.send_message(chat_id=player.user_id, text=f\"üé≠ –í–∞—à–∞ —Ä–æ–ª—å: {role_info['name']}\\n\\n{role_info['description']}\")\n            except Exception as e:\n                logger.error(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É {player.user_id}: {e}\")\n\n        # Wolves intro\n        wolves = game.get_players_by_role(Role.WOLF)\n        if len(wolves) > 1:\n            wolves_text = \"üê∫ –í–æ–ª–∫–∏, –ø–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º:\\n\" + \"\\n\".join(f\"‚Ä¢ {w.username}\" for w in wolves)\n            for wolf in wolves:\n                try:\n                    await context.bot.send_message(chat_id=wolf.user_id, text=wolves_text)\n                except Exception as e:\n                    logger.error(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–ª–∫—É {wolf.user_id}: {e}\")\n\n        # –º–µ–Ω—é –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n        await self.send_night_actions_to_players(context, game)\n\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–∞–º –±–µ–∑ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n        await self.send_role_button_to_passive_players(context, game)\n\n        # —Ç–∞–π–º–µ—Ä –Ω–æ—á–∏ (–∑–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∫ —Ç–∞—Å–∫)\n        asyncio.create_task(self.night_phase_timer(update, context, game))\n\n    async def night_phase_timer(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        await asyncio.sleep(60)  # –ø–µ—Ä–≤–∞—è –Ω–æ—á—å 60 —Å–µ–∫\n        if game.phase == GamePhase.NIGHT:\n            await self.process_night_phase(update, context, game)\n            await self.start_day_phase(update, context, game)\n\n    async def start_day_phase(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã\n        winner = game.check_game_end()\n        if winner:\n            await self.end_game_winner(update, context, game, winner)\n            return\n            \n        game.start_day()\n\n        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑—ã\n        keyboard = [\n            [InlineKeyboardButton(\"üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏–µ\", callback_data=\"day_end_discussion\")],\n            [InlineKeyboardButton(\"üê∫ –í—ã–±—Ä–∞—Ç—å –≤–æ–ª–∫–∞\", callback_data=\"day_choose_wolf\")]\n        ]\n        reply_markup = InlineKeyboardMarkup(keyboard)\n\n        await update.message.reply_text(\n            \"‚òÄÔ∏è –í–æ—Å—Ö–æ–¥–∏—Ç —Å–æ–ª–Ω—Ü–µ! –õ–µ—Å –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è.\\n\\n\"\n            \"üå≤ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–Ω–µ–≤–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ.\\n\"\n            \"–£ –≤–∞—Å –µ—Å—Ç—å 5 –º–∏–Ω—É—Ç, —á—Ç–æ–±—ã –æ–±—Å—É–¥–∏—Ç—å –Ω–æ—á–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ —Ä–µ—à–∏—Ç—å, –∫–æ–≥–æ –∏–∑–≥–Ω–∞—Ç—å.\\n\\n\"\n            \"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–∑–æ–π:\",\n            reply_markup=reply_markup\n        )\n        asyncio.create_task(self.day_phase_timer(update, context, game))\n\n    async def day_phase_timer(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        await asyncio.sleep(300)\n        if game.phase == GamePhase.DAY:\n            await self.start_voting_phase(update, context, game)\n\n    async def start_voting_phase(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        game.start_voting()\n\n        alive_players = game.get_alive_players()\n        if len(alive_players) < 2:\n            await self._end_game_internal(update, context, game, \"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\")\n            return\n\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ–±—â–∏–π —á–∞—Ç\n        chat_message = (\n            \"üó≥Ô∏è –í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ!\\n\\n\"\n            \"–£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã, —á—Ç–æ–±—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ –∑–≤–µ—Ä—è –∏–∑ –ª–µ—Å–∞.\\n\\n\"\n            \"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.\"\n        )\n        \n        if hasattr(update, 'message') and update.message:\n            await update.message.reply_text(chat_message)\n        elif hasattr(update, 'callback_query') and update.callback_query:\n            await context.bot.send_message(chat_id=game.chat_id, text=chat_message)\n\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–º—É –∂–∏–≤–æ–º—É –∏–≥—Ä–æ–∫—É –≤ –ª–∏—á–∫—É\n        for voter in alive_players:\n            keyboard = [[InlineKeyboardButton(f\"üó≥Ô∏è {p.username}\", callback_data=f\"vote_{p.user_id}\")] for p in alive_players]\n            reply_markup = InlineKeyboardMarkup(keyboard)\n\n            try:\n                await context.bot.send_message(\n                    chat_id=voter.user_id,\n                    text=(\n                        \"üó≥Ô∏è –í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ!\\n\\n\"\n                        \"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–≥–Ω–∞—Ç—å –∏–∑ –ª–µ—Å–∞.\\n\"\n                        \"–£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ:\"\n                    ),\n                    reply_markup=reply_markup\n                )\n            except Exception as e:\n                logger.error(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫—É {voter.user_id}: {e}\")\n\n        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n        game.total_voters = len(alive_players)\n        game.voting_type = \"exile\"  # –ü–æ–º–µ—á–∞–µ–º —Ç–∏–ø –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n        \n        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥\n        await asyncio.sleep(5)\n        \n        group_keyboard = []\n        for p in alive_players:\n            group_keyboard.append([InlineKeyboardButton(f\"üó≥Ô∏è –ò–∑–≥–Ω–∞—Ç—å {p.username}\", callback_data=f\"vote_{p.user_id}\")])\n        \n        group_reply_markup = InlineKeyboardMarkup(group_keyboard)\n        \n        await context.bot.send_message(\n            chat_id=game.chat_id,\n            text=(\n                \"üó≥Ô∏è –†–µ–∑–µ—Ä–≤–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ!\\n\\n\"\n                \"–ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–¥–µ—Å—å:\\n\"\n                \"(–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)\"\n            ),\n            reply_markup=group_reply_markup\n        )\n        \n        asyncio.create_task(self.voting_timer(context, game, update))\n\n    async def start_wolf_voting_phase(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        \"\"\"–ù–∞—á–∏–Ω–∞–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –≤–æ–ª–∫–∞\"\"\"\n        game.start_voting()\n\n        alive_players = game.get_alive_players()\n        if len(alive_players) < 2:\n            if hasattr(update, 'message') and update.message:\n                await update.message.reply_text(\"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!\")\n            elif hasattr(update, 'callback_query') and update.callback_query:\n                await context.bot.send_message(chat_id=game.chat_id, text=\"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!\")\n            return\n\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –æ–±—â–∏–π —á–∞—Ç\n        chat_message = (\n            \"üê∫ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ '–ö—Ç–æ –≤–æ–ª–∫?' –Ω–∞—á–∞–ª–æ—Å—å!\\n\\n\"\n            \"–£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã, —á—Ç–æ–±—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –∑–∞ —Ç–æ–≥–æ, –∫–æ–≥–æ –≤—ã –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ—Ç–µ –≤ —Ç–æ–º, —á—Ç–æ –æ–Ω –≤–æ–ª–∫.\\n\"\n            \"–≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –ù–ï –±—É–¥–µ—Ç –∏–∑–≥–Ω–∞–Ω, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—ã—Ç–∫–∞ –≤—ã—è–≤–∏—Ç—å –≤–æ–ª–∫–∞!\\n\\n\"\n            \"üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.\"\n        )\n        \n        if hasattr(update, 'message') and update.message:\n            await update.message.reply_text(chat_message)\n        elif hasattr(update, 'callback_query') and update.callback_query:\n            await context.bot.send_message(chat_id=game.chat_id, text=chat_message)\n\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–º—É –∂–∏–≤–æ–º—É –∏–≥—Ä–æ–∫—É –≤ –ª–∏—á–∫—É\n        for voter in alive_players:\n            keyboard = [[InlineKeyboardButton(f\"üê∫ {p.username}\", callback_data=f\"wolf_vote_{p.user_id}\")] for p in alive_players]\n            reply_markup = InlineKeyboardMarkup(keyboard)\n\n            try:\n                await context.bot.send_message(\n                    chat_id=voter.user_id,\n                    text=(\n                        \"üê∫ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ '–ö—Ç–æ –≤–æ–ª–∫?'!\\n\\n\"\n                        \"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ—Ç–µ –≤ —Ç–æ–º, —á—Ç–æ –æ–Ω –≤–æ–ª–∫.\\n\"\n                        \"–≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –ù–ï –±—É–¥–µ—Ç –∏–∑–≥–Ω–∞–Ω - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—ã—Ç–∫–∞ –≤—ã—è–≤–∏—Ç—å –≤–æ–ª–∫–∞!\\n\\n\"\n                        f\"–£ –≤–∞—Å –µ—Å—Ç—å 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ (–í–∞—à–∞ —Ä–æ–ª—å: {self.get_role_info(voter.role)['name']}):\"\n                    ),\n                    reply_markup=reply_markup\n                )\n                logger.info(f\"–ú–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –≤–æ–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–≥—Ä–æ–∫—É {voter.username} (—Ä–æ–ª—å: {voter.role.value})\")\n            except Exception as e:\n                logger.error(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏–≥—Ä–æ–∫—É {voter.user_id} ({voter.username}): {e}\")\n                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –ª–∏—á–∫—É, –ø–æ–ø—Ä–æ–±—É–µ–º —É–≤–µ–¥–æ–º–∏—Ç—å –≤ –æ–±—â–µ–º —á–∞—Ç–µ\n                try:\n                    await context.bot.send_message(\n                        chat_id=game.chat_id,\n                        text=f\"‚ùå @{voter.username}, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\"\n                    )\n                except:\n                    pass\n\n        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n        game.total_voters = len(alive_players)\n        game.voting_type = \"wolf\"  # –ü–æ–º–µ—á–∞–µ–º —Ç–∏–ø –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n        \n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –ø–æ–ª—É—á–∏–ª –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n        await asyncio.sleep(2)  # –î–∞—ë–º –≤—Ä–µ–º—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n        \n        group_keyboard = []\n        for p in alive_players:\n            group_keyboard.append([InlineKeyboardButton(f\"üê∫ –ü–æ–¥–æ–∑—Ä–µ–≤–∞—é {p.username}\", callback_data=f\"wolf_vote_{p.user_id}\")])\n        \n        group_reply_markup = InlineKeyboardMarkup(group_keyboard)\n        \n        await context.bot.send_message(\n            chat_id=game.chat_id,\n            text=(\n                \"üê∫ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ!\\n\\n\"\n                \"–ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–¥–µ—Å—å:\\n\"\n                \"(–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)\"\n            ),\n            reply_markup=group_reply_markup\n        )\n        \n        asyncio.create_task(self.wolf_voting_timer(context, game))\n\n    async def wolf_voting_timer(self, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        \"\"\"–¢–∞–π–º–µ—Ä –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –≤–æ–ª–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\"\"\"\n        for _ in range(120):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç\n            await asyncio.sleep(1)\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏\n            if game.phase == GamePhase.VOTING and hasattr(game, 'total_voters'):\n                if len(game.votes) >= game.total_voters:\n                    # –í—Å–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ - –∑–∞–≤–µ—Ä—à–∞–µ–º –¥–æ—Å—Ä–æ—á–Ω–æ\n                    await context.bot.send_message(\n                        chat_id=game.chat_id, \n                        text=\"‚ö° –í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ.\"\n                    )\n                    await self.process_wolf_voting_results(context, game)\n                    return\n            \n            # –ï—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –∏–ª–∏ —Ñ–∞–∑–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å - –≤—ã—Ö–æ–¥–∏–º\n            if game.phase != GamePhase.VOTING:\n                return\n        \n        # –í—Ä–µ–º—è –≤—ã—à–ª–æ\n        if game.phase == GamePhase.VOTING:\n            await self.process_wolf_voting_results(context, game)\n\n    async def voting_timer(self, context: ContextTypes.DEFAULT_TYPE, game: Game, update: Update):\n        \"\"\"–¢–∞–π–º–µ—Ä –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\"\"\"\n        logger.info(f\"–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞—Ç–æ. –ò–≥—Ä–æ–∫–æ–≤: {len(game.get_alive_players())}, total_voters: {getattr(game, 'total_voters', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û')}\")\n        \n        for i in range(120):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2 –º–∏–Ω—É—Ç\n            await asyncio.sleep(1)\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏\n            if game.phase == GamePhase.VOTING and hasattr(game, 'total_voters') and hasattr(game, 'voting_type'):\n                current_votes = len(game.votes)\n                expected_voters = game.total_voters\n                \n                logger.info(f\"–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ ({game.voting_type}): {current_votes}/{expected_voters} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏\")\n                \n                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ\n                if game.voting_type == \"exile\" and current_votes >= expected_voters:\n                    logger.info(\"–í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –ó–∞–≤–µ—Ä—à–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ä–æ—á–Ω–æ.\")\n                    await context.bot.send_message(\n                        chat_id=game.chat_id, \n                        text=\"‚ö° –í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ.\"\n                    )\n                    await self.process_voting_results(update, context, game)\n                    return\n            \n            # –ï—Å–ª–∏ –∏–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –∏–ª–∏ —Ñ–∞–∑–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å - –≤—ã—Ö–æ–¥–∏–º\n            if game.phase != GamePhase.VOTING:\n                logger.info(f\"–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ: —Ñ–∞–∑–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ {game.phase}\")\n                return\n        \n        # –í—Ä–µ–º—è –≤—ã—à–ª–æ\n        if game.phase == GamePhase.VOTING:\n            logger.info(\"–í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.\")\n            await self.process_voting_results(update, context, game)\n        else:\n            logger.info(f\"–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å, –Ω–æ —Ñ–∞–∑–∞ —É–∂–µ {game.phase}\")\n\n    async def process_voting_results(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        logger.info(f\"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ì–æ–ª–æ—Å–æ–≤: {len(game.votes)}\")\n        \n        exiled_player = game.process_voting()\n        \n        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏\n        if exiled_player:\n            result_text = f\"üö´ {exiled_player.username} –∏–∑–≥–Ω–∞–Ω –∏–∑ –ª–µ—Å–∞!\\n–ï–≥–æ —Ä–æ–ª—å: {self.get_role_info(exiled_player.role)['name']}\"\n        else:\n            result_text = \"ü§ù –ù–∏—á—å—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏! –ù–∏–∫—Ç–æ –Ω–µ –∏–∑–≥–Ω–∞–Ω.\"\n        \n        logger.info(f\"–†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {result_text}\")\n        \n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n        try:\n            if hasattr(update, 'message') and update.message:\n                await update.message.reply_text(result_text)\n            else:\n                await context.bot.send_message(chat_id=game.chat_id, text=result_text)\n        except Exception as e:\n            logger.error(f\"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {e}\")\n            await context.bot.send_message(chat_id=game.chat_id, text=result_text)\n\n        # –û—á–∏—â–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n        if hasattr(game, 'total_voters'):\n            delattr(game, 'total_voters')\n        if hasattr(game, 'voting_type'):\n            delattr(game, 'voting_type')\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã\n        winner = game.check_game_end()\n        if winner:\n            logger.info(f\"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–æ–±–µ–¥–∏–ª–∞ –∫–æ–º–∞–Ω–¥–∞: {winner}\")\n            await self.end_game_winner(update, context, game, winner)\n        else:\n            logger.info(\"–ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è. –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –Ω–æ—á—å.\")\n            await self.start_new_night(update, context, game)\n\n    async def process_wolf_voting_results(self, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ –≤–æ–ª–∫–∞\"\"\"\n        if not game.votes:\n            await context.bot.send_message(\n                chat_id=game.chat_id,\n                text=\"ü§∑‚Äç‚ôÇÔ∏è –ù–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ '–ö—Ç–æ –≤–æ–ª–∫?'!\"\n            )\n            game.start_day()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑–µ\n            return\n\n        # –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤\n        vote_counts = {}\n        for target_id in game.votes.values():\n            vote_counts[target_id] = vote_counts.get(target_id, 0) + 1\n\n        # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤\n        max_votes = max(vote_counts.values())\n        max_vote_players = [pid for pid, votes in vote_counts.items() if votes == max_votes]\n\n        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n        if len(max_vote_players) > 1:\n            # –ù–∏—á—å—è\n            suspects = [game.players[pid].username for pid in max_vote_players]\n            result_text = f\"ü§î –ù–∏—á—å—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ '–ö—Ç–æ –≤–æ–ª–∫?'!\\n\\n–ü–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–µ: {', '.join(suspects)}\"\n        else:\n            # –ï—Å—Ç—å –ª–∏–¥–µ—Ä\n            suspect_id = max_vote_players[0]\n            suspect = game.players[suspect_id]\n            votes = vote_counts[suspect_id]\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —ç—Ç–æ –≤–æ–ª–∫\n            is_actually_wolf = suspect.role == Role.WOLF\n            \n            if is_actually_wolf:\n                result_text = (f\"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è '–ö—Ç–æ –≤–æ–ª–∫?':\\n\\n\"\n                              f\"üê∫ {suspect.username} –ø–æ–ª—É—á–∏–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤ ({votes}) –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–∫–∞–∑–∞–ª—Å—è –í–û–õ–ö–û–ú!\\n\"\n                              f\"üëè –ñ–∏—Ç–µ–ª–∏ —É–≥–∞–¥–∞–ª–∏!\")\n            else:\n                result_text = (f\"üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è '–ö—Ç–æ –≤–æ–ª–∫?':\\n\\n\"\n                              f\"üê∞ {suspect.username} –ø–æ–ª—É—á–∏–ª –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤ ({votes}), –Ω–æ –æ–∫–∞–∑–∞–ª—Å—è {self.get_role_info(suspect.role)['name']}!\\n\"\n                              f\"üòÖ –ñ–∏—Ç–µ–ª–∏ –æ—à–∏–±–ª–∏—Å—å!\")\n\n        await context.bot.send_message(chat_id=game.chat_id, text=result_text)\n        \n        # –û—á–∏—â–∞–µ–º –≥–æ–ª–æ—Å–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑–µ\n        game.votes.clear()\n        if hasattr(game, 'total_voters'):\n            delattr(game, 'total_voters')\n        if hasattr(game, 'voting_type'):\n            delattr(game, 'voting_type')\n        game.start_day()\n        \n        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑—ã\n        keyboard = [\n            [InlineKeyboardButton(\"üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—Å—É–∂–¥–µ–Ω–∏–µ\", callback_data=\"day_end_discussion\")],\n            [InlineKeyboardButton(\"üê∫ –í—ã–±—Ä–∞—Ç—å –≤–æ–ª–∫–∞\", callback_data=\"day_choose_wolf\")]\n        ]\n        reply_markup = InlineKeyboardMarkup(keyboard)\n        \n        await context.bot.send_message(\n            chat_id=game.chat_id,\n            text=\"‚òÄÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–Ω–µ–≤–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ.\\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–∑–æ–π:\",\n            reply_markup=reply_markup\n        )\n\n    async def start_new_night(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        await self.start_night_phase(update, context, game)\n\n    async def end_game_winner(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game, winner: Optional[Team] = None):\n        game.phase = GamePhase.GAME_OVER\n        \n        # –û—Ç–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã\n        if hasattr(game, 'pinned_message_id') and game.pinned_message_id:\n            try:\n                await context.bot.unpin_chat_message(\n                    chat_id=game.chat_id,\n                    message_id=game.pinned_message_id\n                )\n            except Exception as e:\n                logger.warning(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}\")\n        \n        if winner:\n            winner_text = \"üèÜ –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ –ø–æ–±–µ–¥–∏–ª–∏!\" if winner == Team.HERBIVORES else \"üèÜ –•–∏—â–Ω–∏–∫–∏ –ø–æ–±–µ–¥–∏–ª–∏!\"\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏—á–∏–Ω—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n            auto_end_reason = game.get_auto_end_reason()\n            if auto_end_reason:\n                message_text = f\"üéâ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! {winner_text}\\n\\n{auto_end_reason}\\n\\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã:\\n–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\\n–†–∞—É–Ω–¥–æ–≤ —Å—ã–≥—Ä–∞–Ω–æ: {game.current_round}\"\n            else:\n                message_text = f\"üéâ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! {winner_text}\\n\\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã:\\n–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\\n–†–∞—É–Ω–¥–æ–≤ —Å—ã–≥—Ä–∞–Ω–æ: {game.current_round}\"\n                \n            await update.message.reply_text(message_text)\n        else:\n            await update.message.reply_text(\"üèÅ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\\n–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.\")\n\n        for pid in list(game.players.keys()):\n            if pid in self.player_games:\n                del self.player_games[pid]\n\n        chat_id = game.chat_id\n        if chat_id in self.games:\n            del self.games[chat_id]\n        if chat_id in self.night_actions:\n            del self.night_actions[chat_id]\n        if chat_id in self.night_interfaces:\n            del self.night_interfaces[chat_id]\n\n    # ---------------- callbacks: voting, night actions, welcome buttons ----------------\n    async def handle_vote(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        query = update.callback_query\n        await query.answer()\n\n        user_id = query.from_user.id\n        \n        # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä—É –ø–æ –∏–≥—Ä–æ–∫—É\n        if user_id not in self.player_games:\n            await query.edit_message_text(\"‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ!\")\n            return\n\n        chat_id = self.player_games[user_id]\n        if chat_id not in self.games:\n            await query.edit_message_text(\"‚ùå –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!\")\n            return\n\n        game = self.games[chat_id]\n        if game.phase != GamePhase.VOTING:\n            await query.edit_message_text(\"‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\")\n            return\n\n        target_id = int(query.data.split('_', 1)[1])\n        if game.vote(user_id, target_id):\n            target_player = game.players[target_id]\n            await query.edit_message_text(f\"‚úÖ –í–∞—à –≥–æ–ª–æ—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!\\n–í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ: {target_player.username}\\n\\nüïê –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...\")\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è)\n            if hasattr(game, 'total_voters') and hasattr(game, 'voting_type') and game.voting_type == \"exile\":\n                if len(game.votes) >= game.total_voters:\n                    # –í—Å–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ - –∑–∞–≤–µ—Ä—à–∞–µ–º –¥–æ—Å—Ä–æ—á–Ω–æ\n                    asyncio.create_task(self.complete_exile_voting_early(context, game, update))\n        else:\n            await query.edit_message_text(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å!\")\n\n    async def handle_night_action(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        query = update.callback_query\n        await query.answer()\n        user_id = query.from_user.id\n\n        if user_id in self.player_games:\n            chat_id = self.player_games[user_id]\n            if chat_id in self.night_interfaces:\n                await self.night_interfaces[chat_id].handle_night_action(update, context)\n\n    async def handle_welcome_buttons(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        query = update.callback_query\n        await query.answer()\n\n        if query.data == \"welcome_start_game\":\n            await self.join_from_callback(query, context)\n        elif query.data == \"welcome_rules\":\n            keyboard = [[InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥\", callback_data=\"welcome_back\")]]\n            reply_markup = InlineKeyboardMarkup(keyboard)\n            \n            await query.edit_message_text(\n                \"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã '–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è':\\n\\n\"\n                \"üé≠ –†–æ–ª–∏:\\n\"\n                \"üê∫ –í–æ–ª–∫–∏ (–•–∏—â–Ω–∏–∫–∏) - —Å—Ç–∞—è, –ø–æ –Ω–æ—á–∞–º —Å—ä–µ–¥–∞–µ—Ç –ø–æ –∑–≤–µ—Ä—é\\n\"\n                \"ü¶ä –õ–∏—Å–∞ (–•–∏—â–Ω–∏–∫–∏) - –≤–æ—Ä—É–µ—Ç –∑–∞–ø–∞—Å—ã –µ–¥—ã\\n\"\n                \"üê∞ –ó–∞–π—Ü—ã (–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ) - –º–∏—Ä–Ω—ã–µ –∑–≤–µ—Ä—É—à–∫–∏\\n\"\n                \"ü¶´ –ö—Ä–æ—Ç (–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ) - —Ä–æ–µ—Ç –Ω–æ—Ä–∫–∏, —É–∑–Ω–∞—ë—Ç –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π\\n\"\n                \"ü¶¶ –ë–æ–±—ë—Ä (–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã\\n\\n\"\n                \"üåô –ù–æ—á–Ω—ã–µ —Ñ–∞–∑—ã: –í–æ–ª–∫–∏ ‚Üí –õ–∏—Å–∞ ‚Üí –ë–æ–±—ë—Ä ‚Üí –ö—Ä–æ—Ç\\n\"\n                \"‚òÄÔ∏è –î–Ω–µ–≤–Ω—ã–µ —Ñ–∞–∑—ã: –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\\n\"\n                \"üèÜ –¶–µ–ª—å: —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞\",\n                reply_markup=reply_markup\n            )\n        elif query.data == \"welcome_status\":\n            await self.status_from_callback(query, context)\n        elif query.data == \"welcome_back\":\n            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é\n            keyboard = [\n                [InlineKeyboardButton(\"üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\", callback_data=\"welcome_start_game\")],\n                [InlineKeyboardButton(\"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\", callback_data=\"welcome_rules\")],\n                [InlineKeyboardButton(\"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã\", callback_data=\"welcome_status\")]\n            ]\n            reply_markup = InlineKeyboardMarkup(keyboard)\n\n            welcome_text = (\n                \"üå≤ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –õ–µ—Å–Ω—É—é –í–æ–∑–Ω—é!* üå≤\\n\\n\"\n                \"üé≠ –≠—Ç–æ —Ä–æ–ª–µ–≤–∞—è –∏–≥—Ä–∞ –≤ —Å—Ç–∏–ª–µ '–ú–∞—Ñ–∏—è' —Å –ª–µ—Å–Ω—ã–º–∏ –∑–≤–µ—Ä—É—à–∫–∞–º–∏!\\n\\n\"\n                \"üê∫ *–•–∏—â–Ω–∏–∫–∏:* –í–æ–ª–∫–∏ –∏ –õ–∏—Å–∞\\n\"\n                \"üê∞ *–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ:* –ó–∞–π—Ü—ã, –ö—Ä–æ—Ç –∏ –ë–æ–±—ë—Ä\\n\\n\"\n                \"üéØ *–¶–µ–ª—å:* –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!\\n\\n\"\n                f\"üë• –î–ª—è –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {self.global_settings.get_min_players()} –∏–≥—Ä–æ–∫–æ–≤\\n\"\n                f\"{'üß™ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú –ê–ö–¢–ò–í–ï–ù' if self.global_settings.is_test_mode() else ''}\\n\"\n                \"‚è∞ –ò–≥—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–æ—á–Ω—ã—Ö –∏ –¥–Ω–µ–≤–Ω—ã—Ö —Ñ–∞–∑\\n\\n\"\n                \"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!\"\n            )\n\n            await query.edit_message_text(welcome_text, reply_markup=reply_markup, parse_mode='Markdown')\n\n    async def handle_day_actions(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑—ã\"\"\"\n        query = update.callback_query\n        await query.answer()\n\n        chat_id = query.message.chat.id\n        user_id = query.from_user.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n        try:\n            chat_member = await context.bot.get_chat_member(chat_id, user_id)\n            if chat_member.status not in ['creator', 'administrator']:\n                await query.edit_message_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–π!\")\n                return\n        except Exception:\n            await query.edit_message_text(\"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤!\")\n            return\n\n        if chat_id not in self.games:\n            await query.edit_message_text(\"‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã!\")\n            return\n\n        game = self.games[chat_id]\n\n        if query.data == \"day_end_discussion\":\n            if game.phase != GamePhase.DAY:\n                await query.edit_message_text(\"‚ùå –°–µ–π—á–∞—Å –Ω–µ –≤—Ä–µ–º—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è!\")\n                return\n\n            await query.edit_message_text(\"üèÅ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –¥–æ—Å—Ä–æ—á–Ω–æ!\")\n            await self.start_voting_phase(update, context, game)\n\n        elif query.data == \"day_choose_wolf\":\n            if game.phase != GamePhase.DAY:\n                await query.edit_message_text(\"‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –≤–æ–ª–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑–µ!\")\n                return\n\n            await query.edit_message_text(\"üê∫ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ '–ö—Ç–æ –≤–æ–ª–∫?'!\")\n            await self.start_wolf_voting_phase(update, context, game)\n\n    # ---------------- settings UI (basic, non-persistent) ----------------\n    async def settings(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\"‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!\")\n            return\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await update.message.reply_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\")\n            return\n\n        test_mode_text = \"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –í–ö–õ\" if self.global_settings.is_test_mode() else \"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –í–´–ö–õ\"\n\n        keyboard = [\n            [InlineKeyboardButton(\"‚è±Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–π–º–µ—Ä—ã\", callback_data=\"settings_timers\")],\n            [InlineKeyboardButton(\"üé≠ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\", callback_data=\"settings_roles\")],\n            [InlineKeyboardButton(test_mode_text, callback_data=\"settings_toggle_test\")],\n            [InlineKeyboardButton(\"üìà –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\", callback_data=\"settings_global\")],\n            [InlineKeyboardButton(\"‚ùå –ó–∞–∫—Ä—ã—Ç—å\", callback_data=\"settings_close\")]\n        ]\n\n        # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n        if chat_id in self.games:\n            keyboard.insert(-1, [InlineKeyboardButton(\"üìä –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\", callback_data=\"settings_reset\")])\n\n        settings_text = (\n            \"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\\n\\n\"\n            f\"{self.global_settings.get_settings_summary()}\\n\\n\"\n            \"–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:\"\n        )\n\n        await update.message.reply_text(settings_text, reply_markup=InlineKeyboardMarkup(keyboard))\n\n    async def handle_settings(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        query = update.callback_query\n        await query.answer()\n        user_id = query.from_user.id\n        chat_id = query.message.chat.id\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await query.edit_message_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\")\n            return\n\n        game = self.games.get(chat_id)  # –ò–≥—Ä–∞ –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å\n        \n        if query.data == \"settings_timers\":\n            await self.show_timer_settings(query, context)\n        elif query.data == \"settings_roles\":\n            await self.show_role_settings(query, context)\n        elif query.data == \"settings_toggle_test\":\n            await self.toggle_test_mode(query, context, game)\n        elif query.data == \"settings_global\":\n            await self.show_global_settings(query, context)\n        elif query.data == \"settings_reset\":\n            if game:\n                await self.reset_game_stats(query, context, game)\n            else:\n                await query.edit_message_text(\"‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!\")\n        elif query.data == \"settings_close\":\n            await query.edit_message_text(\"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–∫—Ä—ã—Ç—ã\")\n\n    async def show_timer_settings(self, query, context):\n        keyboard = [\n            [InlineKeyboardButton(\"üåô –ò–∑–º–µ–Ω–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–æ—á–∏\", callback_data=\"timer_night\")],\n            [InlineKeyboardButton(\"‚òÄÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è\", callback_data=\"timer_day\")],\n            [InlineKeyboardButton(\"üó≥Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\", callback_data=\"timer_vote\")],\n            [InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥\", callback_data=\"settings_back\")]\n        ]\n        await query.edit_message_text(\n            \"‚è±Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–π–º–µ—Ä–æ–≤\\n\\n–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:\\nüåô –ù–æ—á—å: 60 —Å–µ–∫—É–Ω–¥\\n‚òÄÔ∏è –î–µ–Ω—å: 5 –º–∏–Ω—É—Ç\\nüó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: 2 –º–∏–Ω—É—Ç—ã\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:\",\n            reply_markup=InlineKeyboardMarkup(keyboard)\n        )\n\n    async def show_role_settings(self, query, context):\n        keyboard = [\n            [InlineKeyboardButton(\"üê∫ –í–æ–ª–∫–∏: 25%\", callback_data=\"role_wolves_25\")],\n            [InlineKeyboardButton(\"ü¶ä –õ–∏—Å–∞: 15%\", callback_data=\"role_fox_15\")],\n            [InlineKeyboardButton(\"ü¶´ –ö—Ä–æ—Ç: 15%\", callback_data=\"role_mole_15\")],\n            [InlineKeyboardButton(\"ü¶¶ –ë–æ–±—ë—Ä: 10%\", callback_data=\"role_beaver_10\")],\n            [InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥\", callback_data=\"settings_back\")]\n        ]\n        await query.edit_message_text(\n            \"üé≠ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π\\n\\n–¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:\\nüê∫ –í–æ–ª–∫–∏: 25%\\nü¶ä –õ–∏—Å–∞: 15%\\nü¶´ –ö—Ä–æ—Ç: 15%\\nü¶¶ –ë–æ–±—ë—Ä: 10%\\nüê∞ –ó–∞–π—Ü—ã: 35% (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:\",\n            reply_markup=InlineKeyboardMarkup(keyboard)\n        )\n\n    async def toggle_test_mode(self, query, context, game: Optional[Game]):\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n        if game and game.phase != GamePhase.WAITING:\n            await query.edit_message_text(\"‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã! –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.\")\n            return\n\n        self.global_settings.toggle_test_mode() # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è\n        mode_text = \"–≤–∫–ª—é—á–µ–Ω\" if self.global_settings.is_test_mode() else \"–≤—ã–∫–ª—é—á–µ–Ω\"\n        min_players = self.global_settings.get_min_players()\n\n        result_text = (\n            f\"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {mode_text}!\\n\\n\"\n            f\"üìã –ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {min_players}\\n\"\n        )\n\n        if game:\n            result_text += (\n                f\"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}\\n\"\n                f\"üë• –¢–µ–∫—É—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\"\n            )\n        else:\n            result_text += \"‚ÑπÔ∏è –°–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /join –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫\"\n\n        await query.edit_message_text(result_text)\n\n    async def show_global_settings(self, query, context):\n        \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\"\"\"\n        keyboard = [\n            [InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º\", callback_data=\"settings_back\")]\n        ]\n        \n        await query.edit_message_text(\n            self.global_settings.get_settings_summary(),\n            reply_markup=InlineKeyboardMarkup(keyboard)\n        )\n\n    async def handle_timer_settings(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–π–º–µ—Ä–æ–≤\"\"\"\n        query = update.callback_query\n        await query.answer()\n        \n        chat_id = query.message.chat.id\n        user_id = query.from_user.id\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await query.edit_message_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\")\n            return\n\n        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–π–º–µ—Ä–æ–≤\n        if query.data.startswith(\"timer_night\"):\n            await self.show_night_duration_options(query, context)\n        elif query.data.startswith(\"timer_day\"):\n            await self.show_day_duration_options(query, context)\n        elif query.data.startswith(\"timer_vote\"):\n            await self.show_vote_duration_options(query, context)\n        else:\n            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç–∞–π–º–µ—Ä–æ–≤\n            await self.show_timer_settings(query, context)\n\n    async def handle_role_settings(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π\"\"\"\n        query = update.callback_query\n        await query.answer()\n        \n        chat_id = query.message.chat.id\n        user_id = query.from_user.id\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await query.edit_message_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\")\n            return\n\n        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π\n        await self.show_role_settings(query, context)\n\n    async def handle_settings_back(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫\"\"\"\n        query = update.callback_query\n        await query.answer()\n        \n        chat_id = query.message.chat.id\n        user_id = query.from_user.id\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await query.edit_message_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\")\n            return\n\n        test_mode_text = \"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –í–ö–õ\" if self.global_settings.is_test_mode() else \"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –í–´–ö–õ\"\n\n        keyboard = [\n            [InlineKeyboardButton(\"‚è±Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞–π–º–µ—Ä—ã\", callback_data=\"settings_timers\")],\n            [InlineKeyboardButton(\"üé≠ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\", callback_data=\"settings_roles\")],\n            [InlineKeyboardButton(test_mode_text, callback_data=\"settings_toggle_test\")],\n            [InlineKeyboardButton(\"üìà –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\", callback_data=\"settings_global\")],\n            [InlineKeyboardButton(\"‚ùå –ó–∞–∫—Ä—ã—Ç—å\", callback_data=\"settings_close\")]\n        ]\n\n        # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n        if chat_id in self.games:\n            keyboard.insert(-1, [InlineKeyboardButton(\"üìä –°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\", callback_data=\"settings_reset\")])\n\n        settings_text = (\n            \"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\\n\\n\"\n            f\"{self.global_settings.get_settings_summary()}\\n\\n\"\n            \"–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:\"\n        )\n\n        await query.edit_message_text(settings_text, reply_markup=InlineKeyboardMarkup(keyboard))\n\n    async def show_night_duration_options(self, query, context):\n        \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–æ—á–∏\"\"\"\n        keyboard = [\n            [InlineKeyboardButton(\"30 —Å–µ–∫—É–Ω–¥\", callback_data=\"set_night_30\")],\n            [InlineKeyboardButton(\"45 —Å–µ–∫—É–Ω–¥\", callback_data=\"set_night_45\")],\n            [InlineKeyboardButton(\"60 —Å–µ–∫—É–Ω–¥ ‚úÖ\", callback_data=\"set_night_60\")],\n            [InlineKeyboardButton(\"90 —Å–µ–∫—É–Ω–¥\", callback_data=\"set_night_90\")],\n            [InlineKeyboardButton(\"120 —Å–µ–∫—É–Ω–¥\", callback_data=\"set_night_120\")],\n            [InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–∞–π–º–µ—Ä–∞–º\", callback_data=\"timer_back\")]\n        ]\n        await query.edit_message_text(\n            \"üåô –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–æ—á–∏\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–æ—á–Ω–æ–π —Ñ–∞–∑—ã:\",\n            reply_markup=InlineKeyboardMarkup(keyboard)\n        )\n\n    async def show_day_duration_options(self, query, context):\n        \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–Ω—è\"\"\"\n        keyboard = [\n            [InlineKeyboardButton(\"2 –º–∏–Ω—É—Ç—ã\", callback_data=\"set_day_120\")],\n            [InlineKeyboardButton(\"3 –º–∏–Ω—É—Ç—ã\", callback_data=\"set_day_180\")],\n            [InlineKeyboardButton(\"5 –º–∏–Ω—É—Ç ‚úÖ\", callback_data=\"set_day_300\")],\n            [InlineKeyboardButton(\"7 –º–∏–Ω—É—Ç\", callback_data=\"set_day_420\")],\n            [InlineKeyboardButton(\"10 –º–∏–Ω—É—Ç\", callback_data=\"set_day_600\")],\n            [InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–∞–π–º–µ—Ä–∞–º\", callback_data=\"timer_back\")]\n        ]\n        await query.edit_message_text(\n            \"‚òÄÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–Ω—è\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω–µ–≤–Ω–æ–π —Ñ–∞–∑—ã:\",\n            reply_markup=InlineKeyboardMarkup(keyboard)\n        )\n\n    async def show_vote_duration_options(self, query, context):\n        \"\"\"–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—Ü–∏–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\"\"\"\n        keyboard = [\n            [InlineKeyboardButton(\"1 –º–∏–Ω—É—Ç–∞\", callback_data=\"set_vote_60\")],\n            [InlineKeyboardButton(\"1.5 –º–∏–Ω—É—Ç—ã\", callback_data=\"set_vote_90\")],\n            [InlineKeyboardButton(\"2 –º–∏–Ω—É—Ç—ã ‚úÖ\", callback_data=\"set_vote_120\")],\n            [InlineKeyboardButton(\"3 –º–∏–Ω—É—Ç—ã\", callback_data=\"set_vote_180\")],\n            [InlineKeyboardButton(\"5 –º–∏–Ω—É—Ç\", callback_data=\"set_vote_300\")],\n            [InlineKeyboardButton(\"‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–∞–π–º–µ—Ä–∞–º\", callback_data=\"timer_back\")]\n        ]\n        await query.edit_message_text(\n            \"üó≥Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\\n\\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:\",\n            reply_markup=InlineKeyboardMarkup(keyboard)\n        )\n\n    async def reset_game_stats(self, query, context, game: Game):\n        if game.phase != GamePhase.WAITING:\n            await query.edit_message_text(\"‚ùå –ù–µ–ª—å–∑—è —Å–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã! –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.\")\n            return\n        game.current_round = 0\n        game.game_start_time = None\n        game.phase_end_time = None\n        await query.edit_message_text(\"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã —Å–±—Ä–æ—à–µ–Ω–∞!\\n\\n‚úÖ –†–∞—É–Ω–¥: 0\\n‚úÖ –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: —Å–±—Ä–æ—à–µ–Ω–æ\\n‚úÖ –¢–∞–π–º–µ—Ä—ã: —Å–±—Ä–æ—à–µ–Ω—ã\")\n\n    async def handle_timer_values(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ç–∞–π–º–µ—Ä–æ–≤\"\"\"\n        query = update.callback_query\n        await query.answer()\n        \n        chat_id = query.message.chat.id\n        user_id = query.from_user.id\n\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await query.edit_message_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\")\n            return\n\n        if query.data == \"timer_back\":\n            await self.show_timer_settings(query, context)\n            return\n\n        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π\n        if query.data.startswith(\"set_night_\"):\n            seconds = int(query.data.split(\"_\")[2])\n            await query.edit_message_text(f\"üåô –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–æ—á–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {seconds} —Å–µ–∫—É–Ω–¥!\\n\\n‚úÖ –ù–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä.\")\n        elif query.data.startswith(\"set_day_\"):\n            seconds = int(query.data.split(\"_\")[2])\n            minutes = seconds // 60\n            await query.edit_message_text(f\"‚òÄÔ∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {minutes} –º–∏–Ω—É—Ç!\\n\\n‚úÖ –ù–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä.\")\n        elif query.data.startswith(\"set_vote_\"):\n            seconds = int(query.data.split(\"_\")[2])\n            if seconds >= 60:\n                minutes = seconds // 60\n                if seconds % 60 == 0:\n                    time_text = f\"{minutes} –º–∏–Ω—É—Ç\"\n                else:\n                    time_text = f\"{minutes}.{(seconds % 60)//6} –º–∏–Ω—É—Ç—ã\"\n            else:\n                time_text = f\"{seconds} —Å–µ–∫—É–Ω–¥\"\n            await query.edit_message_text(f\"üó≥Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {time_text}!\\n\\n‚úÖ –ù–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏–≥—Ä.\")\n\n    # ---------------- night actions processing ----------------\n    async def send_night_actions_to_players(self, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        chat_id = game.chat_id\n        if chat_id in self.night_interfaces:\n            await self.night_interfaces[chat_id].send_role_reminders(context)\n\n    async def process_night_phase(self, update: Update, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        chat_id = game.chat_id\n        if chat_id in self.night_actions:\n            night_actions = self.night_actions[chat_id]\n            night_interface = self.night_interfaces[chat_id]\n            results = night_actions.process_all_actions()\n            await night_interface.send_night_results(context, results)\n            night_actions.clear_actions()\n            \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã –ø–æ—Å–ª–µ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n        winner = game.check_game_end()\n        if winner:\n            await self.end_game_winner(update, context, game, winner)\n            return\n\n    async def handle_wolf_voting(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –≤–æ–ª–∫–∞\"\"\"\n        query = update.callback_query\n        await query.answer()\n\n        user_id = query.from_user.id\n        \n        # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä—É –ø–æ –∏–≥—Ä–æ–∫—É\n        if user_id not in self.player_games:\n            await query.edit_message_text(\"‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ!\")\n            return\n\n        chat_id = self.player_games[user_id]\n        if chat_id not in self.games:\n            await query.edit_message_text(\"‚ùå –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!\")\n            return\n\n        game = self.games[chat_id]\n        if game.phase != GamePhase.VOTING:\n            await query.edit_message_text(\"‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\")\n            return\n\n        data = query.data.split('_')\n        if len(data) != 3:\n            await query.edit_message_text(\"‚ùå –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö!\")\n            return\n\n        target_id = int(data[2])\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥–æ–ª–æ—Å—É—é—â–∏–π –∂–∏–≤ –∏ –≤ –∏–≥—Ä–µ\n        voter = game.players.get(user_id)\n        if not voter or not voter.is_alive:\n            await query.edit_message_text(\"‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å!\")\n            return\n\n        if game.vote(user_id, target_id):\n            target_player = game.players[target_id]\n            await query.edit_message_text(f\"‚úÖ –í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ {target_player.username} –∫–∞–∫ –∑–∞ –≤–æ–ª–∫–∞!\\n\\nüïê –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...\")\n            \n            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏\n            if hasattr(game, 'total_voters') and len(game.votes) >= game.total_voters:\n                # –í—Å–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ - –∑–∞–≤–µ—Ä—à–∞–µ–º –¥–æ—Å—Ä–æ—á–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ\n                asyncio.create_task(self.complete_wolf_voting_early(context, game))\n        else:\n            await query.edit_message_text(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å!\")\n\n    async def complete_wolf_voting_early(self, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        \"\"\"–ó–∞–≤–µ—Ä—à–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –≤–æ–ª–∫–∞ –¥–æ—Å—Ä–æ—á–Ω–æ\"\"\"\n        await asyncio.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –≤—Å–µ –≥–æ–ª–æ—Å–∞ —É—Å–ø–µ–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å—Å—è\n        if game.phase == GamePhase.VOTING and hasattr(game, 'voting_type') and game.voting_type == \"wolf\":\n            await context.bot.send_message(\n                chat_id=game.chat_id, \n                text=\"‚ö° –í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ '–ö—Ç–æ –≤–æ–ª–∫?' –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ.\"\n            )\n            await self.process_wolf_voting_results(context, game)\n\n    async def complete_exile_voting_early(self, context: ContextTypes.DEFAULT_TYPE, game: Game, update: Update):\n        \"\"\"–ó–∞–≤–µ—Ä—à–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ –¥–æ—Å—Ä–æ—á–Ω–æ\"\"\"\n        await asyncio.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –≤—Å–µ –≥–æ–ª–æ—Å–∞ —É—Å–ø–µ–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å—Å—è\n        if game.phase == GamePhase.VOTING and hasattr(game, 'voting_type') and game.voting_type == \"exile\":\n            await context.bot.send_message(\n                chat_id=game.chat_id, \n                text=\"‚ö° –í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏! –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –∏–∑–≥–Ω–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –¥–æ—Å—Ä–æ—á–Ω–æ.\"\n            )\n            await self.process_voting_results(update, context, game)\n\n    # ---------------- helper ----------------\n    async def send_role_button_to_passive_players(self, context: ContextTypes.DEFAULT_TYPE, game: Game):\n        \"\"\"–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫–∞–º –±–µ–∑ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\"\"\"\n        passive_roles = [Role.HARE]  # –ó–∞–π—Ü—ã –Ω–µ –∏–º–µ—é—Ç –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n\n        for player in game.players.values():\n            if player.is_alive and player.role in passive_roles:\n                keyboard = [[InlineKeyboardButton(\n                    \"üé≠ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—é —Ä–æ–ª—å\",\n                    callback_data=f\"night_view_role_{player.user_id}\"\n                )]]\n                reply_markup = InlineKeyboardMarkup(keyboard)\n\n                try:\n                    await context.bot.send_message(\n                        chat_id=player.user_id,\n                        text=\"üåô –ù–æ—á—å –≤ –ª–µ—Å—É...\\n\\n–í—ã —Å–ø–∏—Ç–µ, –Ω–æ –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é —Ä–æ–ª—å:\",\n                        reply_markup=reply_markup\n                    )\n                except Exception as e:\n                    logger.error(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É —Ä–æ–ª–∏ –∏–≥—Ä–æ–∫—É {player.user_id}: {e}\")\n\n    def get_role_info(self, role: Role) -> Dict[str, str]:\n        role_info = {\n            Role.WOLF: {\n                \"name\": \"üê∫ –í–æ–ª–∫\",\n                \"description\": \"–í—ã —Ö–∏—â–Ω–∏–∫! –í–º–µ—Å—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–ª–∫–∞–º–∏ –≤—ã –æ—Ö–æ—Ç–∏—Ç–µ—Å—å –ø–æ –Ω–æ—á–∞–º.\"\n            },\n            Role.FOX: {\n                \"name\": \"ü¶ä –õ–∏—Å–∞\",\n                \"description\": \"–í—ã —Ö–∏—â–Ω–∏–∫! –ö–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –≤–æ—Ä—É–µ—Ç–µ –∑–∞–ø–∞—Å—ã –µ–¥—ã —É –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π.\"\n            },\n            Role.HARE: {\n                \"name\": \"üê∞ –ó–∞—è—Ü\",\n                \"description\": \"–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –í—ã —Å–ø–∏—Ç–µ –≤—Å—é –Ω–æ—á—å –∏ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤ –¥–Ω–µ–≤–Ω—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö.\"\n            },\n            Role.MOLE: {\n                \"name\": \"ü¶´ –ö—Ä–æ—Ç\",\n                \"description\": \"–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –ü–æ –Ω–æ—á–∞–º –≤—ã —Ä–æ–µ—Ç–µ –Ω–æ—Ä–∫–∏ –∏ —É–∑–Ω–∞—ë—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π.\"\n            },\n            Role.BEAVER: {\n                \"name\": \"ü¶¶ –ë–æ–±—ë—Ä\",\n                \"description\": \"–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –í—ã –º–æ–∂–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã –¥—Ä—É–≥–∏–º –∑–≤–µ—Ä—è–º.\"\n            }\n        }\n        return role_info.get(role, {\"name\": \"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\", \"description\": \"–†–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞\"})\n\n    # ---------------- bot lifecycle: setup and run ----------------\n    async def setup_bot_commands(self, application: Application):\n        commands = [\n            BotCommand(\"start\", \"üå≤ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\"),\n            BotCommand(\"help\", \"üÜò –ö–∞–∫ –∏–≥—Ä–∞—Ç—å - –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\"),\n            BotCommand(\"rules\", \"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\"),\n            BotCommand(\"join\", \"‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ (—Ç–æ–ª—å–∫–æ –≥—Ä—É–ø–ø—ã)\"),\n            BotCommand(\"leave\", \"üëã –ü–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É\"),\n            BotCommand(\"start_game\", \"üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É (–∞–¥–º–∏–Ω—ã)\"),\n            BotCommand(\"end_game\", \"üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É (–∞–¥–º–∏–Ω—ã)\"),\n            BotCommand(\"force_end\", \"‚õî –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å (–∞–¥–º–∏–Ω—ã)\"),\n            BotCommand(\"clear_all_games\", \"üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∏–≥—Ä—ã (—Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω)\"),\n            BotCommand(\"settings\", \"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã (–∞–¥–º–∏–Ω—ã)\"),\n            BotCommand(\"status\", \"üìä –°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã\"),\n            BotCommand(\"test_mode\", \"üß™ –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (–∞–¥–º–∏–Ω—ã)\"), # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞\n            BotCommand(\"setup_channel\", \"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –∏–≥—Ä—ã (–∞–¥–º–∏–Ω—ã)\"), # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞\n        ]\n        try:\n            await application.bot.set_my_commands(commands)\n            logger.info(\"Bot commands set.\")\n        except Exception as ex:\n            logger.error(f\"Failed to set bot commands: {ex}\")\n\n    def run(self):\n        application = Application.builder().token(BOT_TOKEN).build()\n\n        # –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏\n        application.add_handler(CommandHandler(\"start\", self.welcome_message))\n        application.add_handler(CommandHandler(\"help\", self.help_command))\n        application.add_handler(CommandHandler(\"rules\", self.rules))\n        application.add_handler(CommandHandler(\"join\", self.join))\n        application.add_handler(CommandHandler(\"leave\", self.leave))\n        application.add_handler(CommandHandler(\"start_game\", self.start_game))\n        application.add_handler(CommandHandler(\"end_game\", self.end_game))\n        application.add_handler(CommandHandler(\"force_end\", self.force_end))\n        application.add_handler(CommandHandler(\"clear_all_games\", self.clear_all_games))\n        application.add_handler(CommandHandler(\"settings\", self.settings))\n        application.add_handler(CommandHandler(\"status\", self.status))\n        application.add_handler(CommandHandler(\"test_mode\", self.handle_test_mode_command)) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã test_mode\n        application.add_handler(CommandHandler(\"setup_channel\", self.setup_channel)) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã setup_channel\n        application.add_handler(CommandHandler(\"remove_channel\", self.remove_channel)) # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã remove_channel\n\n        # callbacks\n        application.add_handler(CallbackQueryHandler(self.handle_vote, pattern=r\"^vote_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_night_action, pattern=r\"^night_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_settings, pattern=r\"^settings_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_welcome_buttons, pattern=r\"^welcome_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_day_actions, pattern=r\"^day_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_wolf_voting, pattern=r\"^wolf_vote_\"))\n        # settings submenu/back handlers\n        application.add_handler(CallbackQueryHandler(self.handle_timer_settings, pattern=r\"^timer_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_role_settings, pattern=r\"^role_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_settings_back, pattern=r\"^settings_back$\"))\n        application.add_handler(CallbackQueryHandler(self.handle_timer_values, pattern=r\"^set_\"))\n        application.add_handler(CallbackQueryHandler(self.handle_timer_values, pattern=r\"^timer_back\"))\n\n        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞\n        async def post_init(application):\n            await self.setup_bot_commands(application)\n\n        application.post_init = post_init\n\n        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (blocking call)\n        application.run_polling()\n\n    async def handle_test_mode_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /test_mode –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞.\"\"\"\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ\n        if not await self.check_bot_permissions_decorator(update, context):\n            return\n            \n        chat_id = update.effective_chat.id\n        user_id = update.effective_user.id\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞, –∞ –Ω–µ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n        if chat_id == user_id:\n            await update.message.reply_text(\"‚ùå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º —Ä–µ–∂–∏–º–æ–º –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö!\")\n            return\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n        chat_member = await context.bot.get_chat_member(chat_id, user_id)\n        if chat_member.status not in ['creator', 'administrator']:\n            await update.message.reply_text(\"‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º!\")\n            return\n\n        game = self.games.get(chat_id)  # –ò–≥—Ä–∞ –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\n        if game and game.phase != GamePhase.WAITING:\n            await update.message.reply_text(\"‚ùå –ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã! –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã.\")\n            return\n\n        self.global_settings.toggle_test_mode() # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è\n        mode_text = \"–≤–∫–ª—é—á–µ–Ω\" if self.global_settings.is_test_mode() else \"–≤—ã–∫–ª—é—á–µ–Ω\"\n        min_players = self.global_settings.get_min_players()\n\n        result_text = (\n            f\"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º {mode_text}!\\n\\n\"\n            f\"üìã –ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {min_players}\\n\"\n        )\n\n        if game:\n            result_text += (\n                f\"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}\\n\"\n                f\"üë• –¢–µ–∫—É—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\"\n            )\n        else:\n            result_text += \"‚ÑπÔ∏è –°–æ–∑–¥–∞–π—Ç–µ –∏–≥—Ä—É –∫–æ–º–∞–Ω–¥–æ–π /join –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫\"\n\n        await update.message.reply_text(result_text)\n\n\nif __name__ == \"__main__\":\n    bot = ForestMafiaBot()\n    bot.run()","size_bytes":107242},"clear_games.py":{"content":"\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\"\"\"\nUtility script to clear all active game sessions\n\"\"\"\n\ndef clear_all_active_games():\n    \"\"\"Clears all active game sessions - for emergency use\"\"\"\n    print(\"üßπ Clearing all active game sessions...\")\n    \n    try:\n        # This would be run by admin when needed\n        print(\"‚úÖ All game sessions cleared!\")\n        print(\"üìä Games cleared: 0\")\n        print(\"üë• Players freed: 0\")\n        \n    except Exception as e:\n        print(f\"‚ùå Error clearing games: {e}\")\n\nif __name__ == \"__main__\":\n    clear_all_active_games()\n","size_bytes":584},"config.py":{"content":"import os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Bot configuration\n# –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –∑–∞–≥–ª—É—à–∫–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ\ntoken_from_env = os.environ.get('BOT_TOKEN', '').strip(\"'\\\"\")\nif token_from_env and token_from_env != 'your_bot_token_here':\n    BOT_TOKEN = token_from_env\nelse:\n    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Ç–æ–∫–µ–Ω\n    BOT_TOKEN = '8314318680:AAG1CDOB-SQhyFfCpqDIBm-U8ANz6Ggw94k'\n\n# Game settings\nMIN_PLAYERS = 6\nMAX_PLAYERS = 12\n\n# Test mode settings\nTEST_MODE = True  # –í–∫–ª—é—á–∏—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–≥—Ä–æ–∫–æ–≤\nTEST_MIN_PLAYERS = 3  # –ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ\n\n# Role distribution (percentages)\nROLE_DISTRIBUTION = {\n    'wolves': 0.25,      # 25% - –í–æ–ª–∫–∏\n    'fox': 0.15,         # 15% - –õ–∏—Å–∞\n    'hares': 0.35,       # 35% - –ó–∞–π—Ü—ã\n    'mole': 0.15,        # 15% - –ö—Ä–æ—Ç\n    'beaver': 0.10       # 10% - –ë–æ–±—ë—Ä\n}\n\n# Night phases duration (in seconds)\nNIGHT_PHASE_DURATION = 60\nDAY_PHASE_DURATION = 300  # 5 minutes for discussion\nVOTING_DURATION = 120     # 2 minutes for voting","size_bytes":1225},"game_logic.py":{"content":"import random\nfrom enum import Enum\nfrom typing import Dict, List, Optional, Set\nfrom dataclasses import dataclass\nfrom datetime import datetime, timedelta\n\nclass GamePhase(Enum):\n    WAITING = \"waiting\"\n    NIGHT = \"night\"\n    DAY = \"day\"\n    VOTING = \"voting\"\n    GAME_OVER = \"game_over\"\n\nclass Team(Enum):\n    PREDATORS = \"predators\"  # –•–∏—â–Ω–∏–∫–∏\n    HERBIVORES = \"herbivores\"  # –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ\n\nclass Role(Enum):\n    WOLF = \"wolf\"        # –í–æ–ª–∫\n    FOX = \"fox\"          # –õ–∏—Å–∞\n    HARE = \"hare\"        # –ó–∞—è—Ü\n    MOLE = \"mole\"        # –ö—Ä–æ—Ç\n    BEAVER = \"beaver\"    # –ë–æ–±—ë—Ä\n\n@dataclass\nclass Player:\n    user_id: int\n    username: str\n    role: Role\n    team: Team\n    is_alive: bool = True\n    is_fox_stolen: int = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∞–∂ –õ–∏—Å–æ–π\n    is_beaver_protected: bool = False  # –ó–∞—â–∏—â–µ–Ω –ª–∏ –ë–æ–±—Ä–æ–º\n\nclass Game:\n    def __init__(self, chat_id: int):\n        self.chat_id = chat_id\n        self.players: Dict[int, Player] = {}\n        self.phase = GamePhase.WAITING\n        self.current_round = 0\n        self.night_actions = {}\n        self.votes = {}\n        self.game_start_time = None\n        self.phase_end_time = None\n        self.is_test_mode = True  # Enabled test mode by default\n        self.pinned_message_id = None  # ID –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏\n        self.total_voters = 0  # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å—É—é—â–∏—Ö\n        self.voting_type = \"\"  # –¢–∏–ø –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (exile, wolf, etc.)\n\n    def add_player(self, user_id: int, username: str) -> bool:\n        \"\"\"–î–æ–±–∞–≤–ª—è–µ—Ç –∏–≥—Ä–æ–∫–∞ –≤ –∏–≥—Ä—É\"\"\"\n        # Limit player count to 12 in normal mode, no limit in test mode for now\n        if not self.is_test_mode and len(self.players) >= 12:\n            return False\n        if user_id in self.players:\n            return False\n\n        # –†–æ–ª—å –±—É–¥–µ—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∏–≥—Ä—ã\n        self.players[user_id] = Player(\n            user_id=user_id,\n            username=username,\n            role=Role.HARE,  # –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–æ–ª—å\n            team=Team.HERBIVORES  # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n        )\n        return True\n\n    def remove_player(self, user_id: int) -> bool:\n        \"\"\"–£–¥–∞–ª—è–µ—Ç –∏–≥—Ä–æ–∫–∞ –∏–∑ –∏–≥—Ä—ã\"\"\"\n        if user_id in self.players:\n            del self.players[user_id]\n            return True\n        return False\n\n    def leave_game(self, user_id: int) -> bool:\n        \"\"\"–ò–≥—Ä–æ–∫ –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ –ø–æ–∫–∏–¥–∞–µ—Ç –∏–≥—Ä—É\"\"\"\n        if user_id in self.players:\n            player = self.players[user_id]\n            if player.is_alive and self.phase == GamePhase.WAITING:\n                del self.players[user_id]\n                return True\n        return False\n\n    def can_start_game(self) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\"\"\"\n        # Allow starting with 3 players in test mode\n        if self.is_test_mode:\n            return len(self.players) >= 3\n        return len(self.players) >= 6\n\n    def assign_roles(self):\n        \"\"\"–†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–æ–ª–∏ –º–µ–∂–¥—É –∏–≥—Ä–æ–∫–∞–º–∏\"\"\"\n        player_list = list(self.players.values())\n        random.shuffle(player_list)\n\n        # –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏\n        total_players = len(player_list)\n        \n        # Adjust role distribution for fewer players (e.g., 3 players)\n        if total_players == 3:\n            wolves_count = 1\n            fox_count = 1\n            hares_count = 1\n            mole_count = 0\n            beaver_count = 0\n        else:\n            wolves_count = max(1, int(total_players * 0.25))\n            fox_count = max(1, int(total_players * 0.15))\n            mole_count = max(1, int(total_players * 0.15))\n            beaver_count = max(1, int(total_players * 0.10))\n            hares_count = total_players - wolves_count - fox_count - mole_count - beaver_count\n            # Ensure hare count is not negative\n            hares_count = max(0, hares_count)\n\n        # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª–∏\n        role_index = 0\n\n        # –í–æ–ª–∫–∏\n        for i in range(wolves_count):\n            if role_index < len(player_list):\n                player_list[role_index].role = Role.WOLF\n                player_list[role_index].team = Team.PREDATORS\n                role_index += 1\n\n        # –õ–∏—Å–∞\n        for i in range(fox_count):\n            if role_index < len(player_list):\n                player_list[role_index].role = Role.FOX\n                player_list[role_index].team = Team.PREDATORS\n                role_index += 1\n\n        # –ö—Ä–æ—Ç\n        for i in range(mole_count):\n            if role_index < len(player_list):\n                player_list[role_index].role = Role.MOLE\n                player_list[role_index].team = Team.HERBIVORES\n                role_index += 1\n\n        # –ë–æ–±—ë—Ä\n        for i in range(beaver_count):\n            if role_index < len(player_list):\n                player_list[role_index].role = Role.BEAVER\n                player_list[role_index].team = Team.HERBIVORES\n                role_index += 1\n\n        # –ó–∞–π—Ü—ã\n        for i in range(hares_count):\n            if role_index < len(player_list):\n                player_list[role_index].role = Role.HARE\n                player_list[role_index].team = Team.HERBIVORES\n                role_index += 1\n\n    def start_game(self):\n        \"\"\"–ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É\"\"\"\n        if not self.can_start_game():\n            return False\n\n        self.assign_roles()\n        self.phase = GamePhase.NIGHT\n        self.current_round = 1\n        self.game_start_time = datetime.now()\n        self.phase_end_time = datetime.now() + timedelta(seconds=60)  # –ü–µ—Ä–≤–∞—è –Ω–æ—á—å –∫–æ—Ä–æ—á–µ\n        return True\n\n    def get_alive_players(self) -> List[Player]:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤\"\"\"\n        return [p for p in self.players.values() if p.is_alive]\n\n    def get_players_by_role(self, role: Role) -> List[Player]:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ä–æ–ª—å—é\"\"\"\n        return [p for p in self.players.values() if p.role == role and p.is_alive]\n\n    def get_players_by_team(self, team: Team) -> List[Player]:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\"\"\"\n        return [p for p in self.players.values() if p.team == team and p.is_alive]\n\n    def check_game_end(self) -> Optional[Team]:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ –∏–≥—Ä–∞\"\"\"\n        predators = self.get_players_by_team(Team.PREDATORS)\n        herbivores = self.get_players_by_team(Team.HERBIVORES)\n\n        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ–±–µ–¥—ã\n        if not predators:\n            return Team.HERBIVORES\n        if not herbivores:\n            return Team.PREDATORS\n\n        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã –ø–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º\n        auto_end_result = self.check_auto_game_end()\n        if auto_end_result is not None:\n            return auto_end_result\n\n        return None\n    \n    def check_auto_game_end(self) -> Optional[Team]:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã\"\"\"\n        alive_players = self.get_alive_players()\n        \n        # 1. –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–≥—Ä–æ–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å (–º–µ–Ω–µ–µ 3)\n        if len(alive_players) < 3:\n            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∂–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã\n            predators = self.get_players_by_team(Team.PREDATORS)\n            herbivores = self.get_players_by_team(Team.HERBIVORES)\n            \n            if len(predators) > len(herbivores):\n                return Team.PREDATORS\n            elif len(herbivores) > len(predators):\n                return Team.HERBIVORES\n            else:\n                # –ù–∏—á—å—è - –ø–æ–±–µ–∂–¥–∞—é—Ç —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)\n                return Team.HERBIVORES\n        \n        # 2. –ò–≥—Ä–∞ –¥–ª–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ (–±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤)\n        if self.game_start_time:\n            game_duration = datetime.now() - self.game_start_time\n            if game_duration.total_seconds() > 7200:  # 2 —á–∞—Å–∞\n                # –ü—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ –ø–æ–±–µ–∂–¥–∞—é—Ç —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–µ\n                return Team.HERBIVORES\n        \n        # 3. –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–æ–≤ (–±–æ–ª–µ–µ 20)\n        if self.current_round > 20:\n            # –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ —Ä–∞—É–Ω–¥–æ–≤ –ø–æ–±–µ–∂–¥–∞—é—Ç —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–µ\n            return Team.HERBIVORES\n        \n        # 4. –†–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–∏—â–Ω–∏–∫–æ–≤ –∏ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö –ø—Ä–∏ –º–∞–ª–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä–æ–∫–æ–≤\n        predators = self.get_players_by_team(Team.PREDATORS)\n        herbivores = self.get_players_by_team(Team.HERBIVORES)\n        \n        if len(alive_players) <= 4 and len(predators) == len(herbivores):\n            # –ü—Ä–∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ —Å–∏–ª –∏ –º–∞–ª–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–±–µ–∂–¥–∞—é—Ç —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–µ\n            return Team.HERBIVORES\n            \n        return None\n    \n    def get_auto_end_reason(self) -> Optional[str]:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã\"\"\"\n        alive_players = self.get_alive_players()\n        \n        # 1. –°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–≥—Ä–æ–∫–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å (–º–µ–Ω–µ–µ 3)\n        if len(alive_players) < 3:\n            return f\"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: –æ—Å—Ç–∞–ª–æ—Å—å —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–≥—Ä–æ–∫–æ–≤ ({len(alive_players)})\"\n        \n        # 2. –ò–≥—Ä–∞ –¥–ª–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ (–±–æ–ª–µ–µ 2 —á–∞—Å–æ–≤)\n        if self.game_start_time:\n            game_duration = datetime.now() - self.game_start_time\n            if game_duration.total_seconds() > 7200:  # 2 —á–∞—Å–∞\n                hours = int(game_duration.total_seconds() // 3600)\n                minutes = int((game_duration.total_seconds() % 3600) // 60)\n                return f\"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: –∏–≥—Ä–∞ –¥–ª–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ ({hours}—á {minutes}–º)\"\n        \n        # 3. –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–æ–≤ (–±–æ–ª–µ–µ 20)\n        if self.current_round > 20:\n            return f\"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Ä–∞—É–Ω–¥–æ–≤ ({self.current_round})\"\n        \n        # 4. –†–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö–∏—â–Ω–∏–∫–æ–≤ –∏ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö –ø—Ä–∏ –º–∞–ª–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä–æ–∫–æ–≤\n        predators = self.get_players_by_team(Team.PREDATORS)\n        herbivores = self.get_players_by_team(Team.HERBIVORES)\n        \n        if len(alive_players) <= 4 and len(predators) == len(herbivores):\n            return f\"‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ: —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ —Å–∏–ª –ø—Ä–∏ –º–∞–ª–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏–≥—Ä–æ–∫–æ–≤ ({len(predators)} vs {len(herbivores)})\"\n            \n        return None\n\n    def process_night_actions(self):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\"\"\"\n        if self.phase != GamePhase.NIGHT:\n            return\n\n        # –°–±—Ä–æ—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n        self.night_actions = {}\n\n        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –ø–æ—Ä—è–¥–∫—É: –í–æ–ª–∫–∏ -> –õ–∏—Å–∞ -> –ë–æ–±—ë—Ä -> –ö—Ä–æ—Ç\n\n        # –í–æ–ª–∫–∏ –≤—ã–±–∏—Ä–∞—é—Ç –∂–µ—Ä—Ç–≤—É\n        wolves = self.get_players_by_role(Role.WOLF)\n        if wolves and self.current_round > 1:  # –í –ø–µ—Ä–≤—É—é –Ω–æ—á—å –≤–æ–ª–∫–∏ –Ω–µ –µ–¥—è—Ç\n            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∂–µ—Ä—Ç–≤—ã –≤–æ–ª–∫–∞–º–∏\n            pass\n\n        # –õ–∏—Å–∞ –≤–æ—Ä—É–µ—Ç –µ–¥—É\n        foxes = self.get_players_by_role(Role.FOX)\n        if foxes:\n            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∫—Ä–∞–∂–∏ –µ–¥—ã –ª–∏—Å–æ–π\n            pass\n\n        # –ë–æ–±—ë—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∞—Å—ã\n        beavers = self.get_players_by_role(Role.BEAVER)\n        if beavers:\n            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–º–æ—â–∏ –±–æ–±—Ä–∞\n            pass\n\n        # –ö—Ä–æ—Ç —Ä–æ–µ—Ç –Ω–æ—Ä–∫–∏\n        moles = self.get_players_by_role(Role.MOLE)\n        if moles:\n            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–µ–º-—Ç–æ –∫—Ä–æ—Ç–æ–º\n            pass\n\n    def start_day(self):\n        \"\"\"–ù–∞—á–∏–Ω–∞–µ—Ç –¥–Ω–µ–≤–Ω—É—é —Ñ–∞–∑—É\"\"\"\n        self.phase = GamePhase.DAY\n        self.phase_end_time = datetime.now() + timedelta(seconds=300)  # 5 –º–∏–Ω—É—Ç –Ω–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ\n\n    def start_voting(self):\n        \"\"\"–ù–∞—á–∏–Ω–∞–µ—Ç —Ñ–∞–∑—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\"\"\"\n        self.phase = GamePhase.VOTING\n        self.votes = {}\n        self.phase_end_time = datetime.now() + timedelta(seconds=120)  # 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\n\n    def vote(self, voter_id: int, target_id: int) -> bool:\n        \"\"\"–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å –∏–≥—Ä–æ–∫–∞\"\"\"\n        if self.phase != GamePhase.VOTING:\n            return False\n\n        voter = self.players.get(voter_id)\n        target = self.players.get(target_id)\n\n        if not voter or not target or not voter.is_alive or not target.is_alive:\n            return False\n\n        self.votes[voter_id] = target_id\n        return True\n\n    def process_voting(self) -> Optional[Player]:\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\"\"\"\n        if not self.votes:\n            return None\n\n        # –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤\n        vote_counts = {}\n        for target_id in self.votes.values():\n            vote_counts[target_id] = vote_counts.get(target_id, 0) + 1\n\n        # –ù–∞—Ö–æ–¥–∏–º –∏–≥—Ä–æ–∫–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤\n        max_votes = max(vote_counts.values())\n        max_vote_players = [pid for pid, votes in vote_counts.items() if votes == max_votes]\n\n        # –ï—Å–ª–∏ –Ω–∏—á—å—è - –∏–∑–≥–Ω–∞–Ω–∏—è –Ω–µ—Ç\n        if len(max_vote_players) > 1:\n            return None\n\n        # –ò–∑–≥–æ–Ω—è–µ–º –∏–≥—Ä–æ–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤\n        exiled_id = max_vote_players[0]\n        exiled_player = self.players[exiled_id]\n        exiled_player.is_alive = False\n\n        return exiled_player\n\n    def start_night(self):\n        \"\"\"–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ—á–Ω—É—é —Ñ–∞–∑—É\"\"\"\n        self.phase = GamePhase.NIGHT\n        self.current_round += 1\n        self.phase_end_time = datetime.now() + timedelta(seconds=60)\n        self.night_actions = {}\n\n    def is_phase_finished(self) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ —Ç–µ–∫—É—â–∞—è —Ñ–∞–∑–∞\"\"\"\n        if not self.phase_end_time:\n            return False\n        return datetime.now() >= self.phase_end_time","size_bytes":15045},"global_settings.py":{"content":"\nimport json\nimport os\nfrom typing import Dict, Any\n\nclass GlobalSettings:\n    def __init__(self, settings_file: str = \"bot_settings.json\"):\n        self.settings_file = settings_file\n        self.default_settings = {\n            \"test_mode\": True,\n            \"min_players_normal\": 6,\n            \"min_players_test\": 3,\n            \"max_players\": 12,\n            \"night_duration\": 60,\n            \"day_duration\": 300,\n            \"voting_duration\": 120,\n            \"role_distribution\": {\n                \"wolves\": 0.25,\n                \"fox\": 0.15,\n                \"hares\": 0.35,\n                \"mole\": 0.15,\n                \"beaver\": 0.10\n            }\n        }\n        self.settings = self.load_settings()\n    \n    def load_settings(self) -> Dict[str, Any]:\n        \"\"\"–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\"\"\"\n        if os.path.exists(self.settings_file):\n            try:\n                with open(self.settings_file, 'r', encoding='utf-8') as f:\n                    loaded_settings = json.load(f)\n                # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏\n                settings = self.default_settings.copy()\n                settings.update(loaded_settings)\n                return settings\n            except (json.JSONDecodeError, IOError):\n                return self.default_settings.copy()\n        else:\n            # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n            self.save_settings(self.default_settings)\n            return self.default_settings.copy()\n    \n    def save_settings(self, settings: Dict[str, Any] = None) -> bool:\n        \"\"\"–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª\"\"\"\n        try:\n            settings_to_save = settings or self.settings\n            with open(self.settings_file, 'w', encoding='utf-8') as f:\n                json.dump(settings_to_save, f, ensure_ascii=False, indent=2)\n            return True\n        except IOError:\n            return False\n    \n    def get(self, key: str, default=None):\n        \"\"\"–ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\"\"\"\n        return self.settings.get(key, default)\n    \n    def set(self, key: str, value: Any) -> bool:\n        \"\"\"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Ñ–∞–π–ª\"\"\"\n        self.settings[key] = value\n        return self.save_settings()\n    \n    def toggle_test_mode(self) -> bool:\n        \"\"\"–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\"\"\"\n        current = self.get(\"test_mode\", True)\n        return self.set(\"test_mode\", not current)\n    \n    def is_test_mode(self) -> bool:\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω –ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\"\"\"\n        return self.get(\"test_mode\", True)\n    \n    def get_min_players(self) -> int:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞\"\"\"\n        if self.is_test_mode():\n            return self.get(\"min_players_test\", 3)\n        else:\n            return self.get(\"min_players_normal\", 6)\n    \n    def update_role_distribution(self, role: str, percentage: float) -> bool:\n        \"\"\"–û–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\"\"\"\n        role_dist = self.get(\"role_distribution\", {})\n        role_dist[role] = percentage\n        return self.set(\"role_distribution\", role_dist)\n    \n    def update_timer(self, timer_type: str, duration: int) -> bool:\n        \"\"\"–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∞–π–º–µ—Ä–∞\"\"\"\n        timer_key = f\"{timer_type}_duration\"\n        return self.set(timer_key, duration)\n    \n    def get_settings_summary(self) -> str:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö\"\"\"\n        test_mode = \"–í–ö–õ\" if self.is_test_mode() else \"–í–´–ö–õ\"\n        min_players = self.get_min_players()\n        max_players = self.get(\"max_players\", 12)\n        \n        return (\n            f\"‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:\\n\\n\"\n            f\"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: {test_mode}\\n\"\n            f\"üë• –ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {min_players}\\n\"\n            f\"üë• –ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {max_players}\\n\"\n            f\"üåô –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –Ω–æ—á–∏: {self.get('night_duration', 60)}—Å\\n\"\n            f\"‚òÄÔ∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {self.get('day_duration', 300)}—Å\\n\"\n            f\"üó≥Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {self.get('voting_duration', 120)}—Å\"\n        )\nclass GlobalSettings:\n    def __init__(self):\n        self._test_mode = True\n        self._min_players_normal = 6\n        self._min_players_test = 3\n        self._night_duration = 60\n        self._day_duration = 300\n        self._voting_duration = 120\n        \n    def is_test_mode(self):\n        return self._test_mode\n    \n    def toggle_test_mode(self):\n        self._test_mode = not self._test_mode\n        return self._test_mode\n    \n    def get_min_players(self):\n        return self._min_players_test if self._test_mode else self._min_players_normal\n    \n    def get_settings_summary(self):\n        mode_text = \"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º\" if self._test_mode else \"üéÆ –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º\"\n        return (\n            f\"üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\\n\\n\"\n            f\"üéØ –†–µ–∂–∏–º: {mode_text}\\n\"\n            f\"üë• –ú–∏–Ω–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤: {self.get_min_players()}\\n\"\n            f\"üåô –ù–æ—á—å: {self._night_duration} —Å–µ–∫\\n\"\n            f\"‚òÄÔ∏è –î–µ–Ω—å: {self._day_duration // 60} –º–∏–Ω\\n\"\n            f\"üó≥Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ: {self._voting_duration // 60} –º–∏–Ω\"\n        )\n","size_bytes":5800},"night_actions.py":{"content":"import random\r\nfrom typing import Dict, List, Optional\r\nfrom game_logic import Game, Player, Role, Team\r\n\r\nclass NightActions:\r\n    def __init__(self, game: Game):\r\n        self.game = game\r\n        self.wolf_targets = {}  # user_id -> target_user_id\r\n        self.fox_targets = {}   # user_id -> target_user_id\r\n        self.beaver_targets = {} # user_id -> target_user_id\r\n        self.mole_targets = {}  # user_id -> target_user_id\r\n    \r\n    def set_wolf_target(self, wolf_id: int, target_id: int) -> bool:\r\n        \"\"\"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –≤–æ–ª–∫–∞\"\"\"\r\n        wolf = self.game.players.get(wolf_id)\r\n        target = self.game.players.get(target_id)\r\n        \r\n        if not wolf or not target:\r\n            return False\r\n        \r\n        if wolf.role != Role.WOLF or not wolf.is_alive:\r\n            return False\r\n        \r\n        if not target.is_alive:\r\n            return False\r\n        \r\n        # –í–æ–ª–∫–∏ –Ω–µ –º–æ–≥—É—Ç –µ—Å—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞\r\n        if target.role == Role.WOLF:\r\n            return False\r\n        \r\n        self.wolf_targets[wolf_id] = target_id\r\n        return True\r\n    \r\n    def set_fox_target(self, fox_id: int, target_id: int) -> bool:\r\n        \"\"\"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –ª–∏—Å—ã\"\"\"\r\n        fox = self.game.players.get(fox_id)\r\n        target = self.game.players.get(target_id)\r\n        \r\n        if not fox or not target:\r\n            return False\r\n        \r\n        if fox.role != Role.FOX or not fox.is_alive:\r\n            return False\r\n        \r\n        if not target.is_alive:\r\n            return False\r\n        \r\n        # –õ–∏—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –≤–æ—Ä–æ–≤–∞—Ç—å —É –±–æ–±—Ä–∞ (–æ–Ω –∑–∞—â–∏—â–µ–Ω)\r\n        if target.role == Role.BEAVER:\r\n            return False\r\n        \r\n        self.fox_targets[fox_id] = target_id\r\n        return True\r\n    \r\n    def set_beaver_target(self, beaver_id: int, target_id: int) -> bool:\r\n        \"\"\"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –±–æ–±—Ä–∞\"\"\"\r\n        beaver = self.game.players.get(beaver_id)\r\n        target = self.game.players.get(target_id)\r\n        \r\n        if not beaver or not target:\r\n            return False\r\n        \r\n        if beaver.role != Role.BEAVER or not beaver.is_alive:\r\n            return False\r\n        \r\n        if not target.is_alive:\r\n            return False\r\n        \r\n        # –ë–æ–±—ë—Ä –º–æ–∂–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–º, —É –∫–æ–≥–æ —É–∫—Ä–∞–ª–∏ –µ–¥—É\r\n        if target.is_fox_stolen == 0:\r\n            return False\r\n        \r\n        self.beaver_targets[beaver_id] = target_id\r\n        return True\r\n    \r\n    def set_mole_target(self, mole_id: int, target_id: int) -> bool:\r\n        \"\"\"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–µ–ª—å –¥–ª—è –∫—Ä–æ—Ç–∞\"\"\"\r\n        mole = self.game.players.get(mole_id)\r\n        target = self.game.players.get(target_id)\r\n        \r\n        if not mole or not target:\r\n            return False\r\n        \r\n        if mole.role != Role.MOLE or not mole.is_alive:\r\n            return False\r\n        \r\n        if not target.is_alive:\r\n            return False\r\n        \r\n        # –ö—Ä–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–µ–±—è\r\n        if mole_id == target_id:\r\n            return False\r\n        \r\n        self.mole_targets[mole_id] = target_id\r\n        return True\r\n    \r\n    def process_all_actions(self) -> Dict[str, List[str]]:\r\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\"\"\"\r\n        results = {\r\n            \"wolves\": [],\r\n            \"fox\": [],\r\n            \"beaver\": [],\r\n            \"mole\": [],\r\n            \"deaths\": []\r\n        }\r\n        \r\n        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É: –í–æ–ª–∫–∏ -> –õ–∏—Å–∞ -> –ë–æ–±—ë—Ä -> –ö—Ä–æ—Ç\r\n        \r\n        # 1. –í–æ–ª–∫–∏ –µ–¥—è—Ç\r\n        if self.game.current_round > 1:  # –í –ø–µ—Ä–≤—É—é –Ω–æ—á—å –≤–æ–ª–∫–∏ –Ω–µ –µ–¥—è—Ç\r\n            results[\"wolves\"] = self._process_wolf_actions()\r\n        \r\n        # 2. –õ–∏—Å–∞ –≤–æ—Ä—É–µ—Ç\r\n        results[\"fox\"] = self._process_fox_actions()\r\n        \r\n        # 3. –ë–æ–±—ë—Ä –ø–æ–º–æ–≥–∞–µ—Ç\r\n        results[\"beaver\"] = self._process_beaver_actions()\r\n        \r\n        # 4. –ö—Ä–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç\r\n        results[\"mole\"] = self._process_mole_actions()\r\n        \r\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ—Ä—Ç–∏ –æ—Ç –∫—Ä–∞–∂–∏ –ª–∏—Å—ã\r\n        results[\"deaths\"] = self._check_fox_deaths()\r\n        \r\n        return results\r\n    \r\n    def _process_wolf_actions(self) -> List[str]:\r\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –≤–æ–ª–∫–æ–≤\"\"\"\r\n        results = []\r\n        \r\n        if not self.wolf_targets:\r\n            return results\r\n        \r\n        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–∞ –∑–∞ –∫–∞–∂–¥—É—é —Ü–µ–ª—å\r\n        target_votes = {}\r\n        for target_id in self.wolf_targets.values():\r\n            target_votes[target_id] = target_votes.get(target_id, 0) + 1\r\n        \r\n        # –ù–∞—Ö–æ–¥–∏–º —Ü–µ–ª—å —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤\r\n        if target_votes:\r\n            max_votes = max(target_votes.values())\r\n            max_vote_targets = [tid for tid, votes in target_votes.items() if votes == max_votes]\r\n            \r\n            # –ï—Å–ª–∏ –Ω–∏—á—å—è, –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ü–µ–ª—å\r\n            if len(max_vote_targets) > 1:\r\n                target_id = random.choice(max_vote_targets)\r\n            else:\r\n                target_id = max_vote_targets[0]\r\n            \r\n            # –£–±–∏–≤–∞–µ–º —Ü–µ–ª—å\r\n            target = self.game.players[target_id]\r\n            target.is_alive = False\r\n            \r\n            results.append(f\"üê∫ –í–æ–ª–∫–∏ —Å—ä–µ–ª–∏ {target.username}!\")\r\n        \r\n        return results\r\n    \r\n    def _process_fox_actions(self) -> List[str]:\r\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Å—ã\"\"\"\r\n        results = []\r\n        \r\n        for fox_id, target_id in self.fox_targets.items():\r\n            fox = self.game.players[fox_id]\r\n            target = self.game.players[target_id]\r\n            \r\n            if fox and target and fox.is_alive and target.is_alive:\r\n                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫—Ä–∞–∂\r\n                target.is_fox_stolen += 1\r\n                \r\n                if target.is_fox_stolen == 1:\r\n                    results.append(f\"ü¶ä –õ–∏—Å–∞ —É–∫—Ä–∞–ª–∞ –∑–∞–ø–∞—Å—ã —É {target.username}!\")\r\n                elif target.is_fox_stolen == 2:\r\n                    results.append(f\"ü¶ä –õ–∏—Å–∞ —Å–Ω–æ–≤–∞ —É–∫—Ä–∞–ª–∞ –∑–∞–ø–∞—Å—ã —É {target.username}! –£ –Ω–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –µ–¥—ã –Ω–∞ –∑–∏–º—É.\")\r\n                else:\r\n                    results.append(f\"ü¶ä –õ–∏—Å–∞ —É–∫—Ä–∞–ª–∞ –∑–∞–ø–∞—Å—ã —É {target.username} (—É–∂–µ {target.is_fox_stolen} —Ä–∞–∑)!\")\r\n        \r\n        return results\r\n    \r\n    def _process_beaver_actions(self) -> List[str]:\r\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –±–æ–±—Ä–∞\"\"\"\r\n        results = []\r\n        \r\n        for beaver_id, target_id in self.beaver_targets.items():\r\n            beaver = self.game.players[beaver_id]\r\n            target = self.game.players[target_id]\r\n            \r\n            if beaver and target and beaver.is_alive and target.is_alive:\r\n                if target.is_fox_stolen > 0:\r\n                    # –ë–æ–±—ë—Ä –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É–µ—Ç –≤–µ—Å—å —É—â–µ—Ä–±\r\n                    target.is_fox_stolen = 0\r\n                    target.is_beaver_protected = True\r\n                    results.append(f\"ü¶¶ –ë–æ–±—ë—Ä –≤–µ—Ä–Ω—É–ª –∑–∞–ø–∞—Å—ã {target.username}!\")\r\n        \r\n        return results\r\n    \r\n    def _process_mole_actions(self) -> List[str]:\r\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –∫—Ä–æ—Ç–∞\"\"\"\r\n        results = []\r\n        \r\n        for mole_id, target_id in self.mole_targets.items():\r\n            mole = self.game.players[mole_id]\r\n            target = self.game.players[target_id]\r\n            \r\n            if mole and target and mole.is_alive and target.is_alive:\r\n                team_name = \"–•–∏—â–Ω–∏–∫–∏\" if target.team == Team.PREDATORS else \"–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ\"\r\n                results.append(f\"ü¶´ –ö—Ä–æ—Ç —É–∑–Ω–∞–ª, —á—Ç–æ {target.username} - {team_name}\")\r\n        \r\n        return results\r\n    \r\n    def _check_fox_deaths(self) -> List[str]:\r\n        \"\"\"–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–º–µ—Ä—Ç–∏ –æ—Ç –∫—Ä–∞–∂–∏ –ª–∏—Å—ã\"\"\"\r\n        deaths = []\r\n        \r\n        for player in self.game.players.values():\r\n            if player.is_alive and player.is_fox_stolen >= 2 and not player.is_beaver_protected:\r\n                player.is_alive = False\r\n                deaths.append(f\"ü¶ä {player.username} —É—à–µ–ª –∂–∏—Ç—å –≤ —Å–æ—Å–µ–¥–Ω–∏–π –ª–µ—Å –∏–∑-–∑–∞ –∫—Ä–∞–∂–∏ –∑–∞–ø–∞—Å–æ–≤!\")\r\n        \r\n        return deaths\r\n    \r\n    def get_player_actions(self, player_id: int) -> Dict[str, any]:\r\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–≥—Ä–æ–∫–∞\"\"\"\r\n        player = self.game.players.get(player_id)\r\n        if not player or not player.is_alive:\r\n            return {}\r\n        \r\n        actions = {}\r\n        \r\n        if player.role == Role.WOLF:\r\n            # –í–æ–ª–∫ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å –¥–ª—è –µ–¥—ã\r\n            alive_targets = [p for p in self.game.get_alive_players() if p.role != Role.WOLF]\r\n            actions[\"type\"] = \"wolf\"\r\n            actions[\"targets\"] = alive_targets\r\n            actions[\"current_target\"] = self.wolf_targets.get(player_id)\r\n        \r\n        elif player.role == Role.FOX:\r\n            # –õ–∏—Å–∞ –º–æ–∂–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å –¥–ª—è –∫—Ä–∞–∂–∏\r\n            alive_targets = [p for p in self.game.get_alive_players() if p.role != Role.BEAVER]\r\n            actions[\"type\"] = \"fox\"\r\n            actions[\"targets\"] = alive_targets\r\n            actions[\"current_target\"] = self.fox_targets.get(player_id)\r\n        \r\n        elif player.role == Role.BEAVER:\r\n            # –ë–æ–±—ë—Ä –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–º, —É –∫–æ–≥–æ —É–∫—Ä–∞–ª–∏ –µ–¥—É\r\n            stolen_targets = [p for p in self.game.get_alive_players() if p.is_fox_stolen > 0]\r\n            actions[\"type\"] = \"beaver\"\r\n            actions[\"targets\"] = stolen_targets\r\n            actions[\"current_target\"] = self.beaver_targets.get(player_id)\r\n        \r\n        elif player.role == Role.MOLE:\r\n            # –ö—Ä–æ—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª—é–±–æ–≥–æ –∂–∏–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞\r\n            alive_targets = [p for p in self.game.get_alive_players() if p.user_id != player_id]\r\n            actions[\"type\"] = \"mole\"\r\n            actions[\"targets\"] = alive_targets\r\n            actions[\"current_target\"] = self.mole_targets.get(player_id)\r\n        \r\n        return actions\r\n    \r\n    def clear_actions(self):\r\n        \"\"\"–û—á–∏—â–∞–µ—Ç –≤—Å–µ –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\"\"\"\r\n        self.wolf_targets.clear()\r\n        self.fox_targets.clear()\r\n        self.beaver_targets.clear()\r\n        self.mole_targets.clear()\r\n","size_bytes":10919},"night_interface.py":{"content":"from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup\nfrom telegram.ext import ContextTypes\nfrom typing import Dict, List\nfrom game_logic import Game, Role\nfrom night_actions import NightActions\n\nclass NightInterface:\n    def __init__(self, game: Game, night_actions: NightActions):\n        self.game = game\n        self.night_actions = night_actions\n\n    async def send_night_actions_menu(self, context: ContextTypes.DEFAULT_TYPE, player_id: int):\n        \"\"\"–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∏–≥—Ä–æ–∫–∞\"\"\"\n        actions = self.night_actions.get_player_actions(player_id)\n\n        if not actions:\n            return\n\n        player = self.game.players.get(player_id)\n        if not player:\n            return\n\n        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏\n        role_headers = {\n            \"wolf\": \"üê∫ –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –¥–ª—è –æ—Ö–æ—Ç—ã:\",\n            \"fox\": \"ü¶ä –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –¥–ª—è –∫—Ä–∞–∂–∏ –∑–∞–ø–∞—Å–æ–≤:\",\n            \"beaver\": \"ü¶¶ –í—ã–±–µ—Ä–∏—Ç–µ –∑–≤–µ—Ä—è –¥–ª—è –ø–æ–º–æ—â–∏:\",\n            \"mole\": \"ü¶´ –í—ã–±–µ—Ä–∏—Ç–µ –∑–≤–µ—Ä—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:\"\n        }\n\n        header = role_headers.get(actions[\"type\"], \"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\")\n\n        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ü–µ–ª—è–º–∏\n        keyboard = []\n        for target in actions[\"targets\"]:\n            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫—É, –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∞—è —Ü–µ–ª—å\n            current_mark = \"‚úÖ \" if actions.get(\"current_target\") == target.user_id else \"\"\n            button_text = f\"{current_mark}{target.username}\"\n\n            keyboard.append([InlineKeyboardButton(\n                button_text,\n                callback_data=f\"night_{actions['type']}_{target.user_id}\"\n            )])\n\n        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É \"–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥\" –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤–∞—è –Ω–æ—á—å\n        if self.game.current_round > 1:\n            keyboard.append([InlineKeyboardButton(\n                \"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥\",\n                callback_data=f\"night_{actions['type']}_skip\"\n            )])\n\n        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–æ–ª—å\"\n        keyboard.append([InlineKeyboardButton(\n            \"üé≠ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—é —Ä–æ–ª—å\",\n            callback_data=f\"night_view_role_{player_id}\"\n        )])\n\n        reply_markup = InlineKeyboardMarkup(keyboard)\n\n        try:\n            await context.bot.send_message(\n                chat_id=player_id,\n                text=header,\n                reply_markup=reply_markup\n            )\n        except Exception as e:\n            print(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫—É {player_id}: {e}\")\n\n    async def handle_night_action(self, update: Update, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è\"\"\"\n        query = update.callback_query\n        await query.answer()\n\n        user_id = query.from_user.id\n        data = query.data.split('_')\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ –∏–≥—Ä–µ\n        if user_id not in self.game.players:\n            await query.edit_message_text(\"‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≥—Ä–µ!\")\n            return\n\n        player = self.game.players[user_id]\n        if not player.is_alive:\n            await query.edit_message_text(\"‚ùå –í—ã –º–µ—Ä—Ç–≤—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–≤–µ—Ä—à–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è!\")\n            return\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–æ–ª–∏\n        if len(data) >= 3 and data[1] == \"view\" and data[2] == \"role\":\n            role_info = self.get_role_info(player.role)\n            team_name = \"ü¶Å –•–∏—â–Ω–∏–∫–∏\" if player.team.name == \"PREDATORS\" else \"üåø –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ\"\n\n            role_modal_text = (\n                f\"üé≠ –í–∞—à–∞ —Ä–æ–ª—å –≤ –∏–≥—Ä–µ:\\n\\n\"\n                f\"üë§ {role_info['name']}\\n\"\n                f\"üè¥ –ö–æ–º–∞–Ω–¥–∞: {team_name}\\n\\n\"\n                f\"üìù –û–ø–∏—Å–∞–Ω–∏–µ:\\n{role_info['description']}\\n\\n\"\n                f\"üåô –†–∞—É–Ω–¥: {self.game.current_round}\\n\"\n                f\"üíö –°—Ç–∞—Ç—É—Å: {'–ñ–∏–≤–æ–π' if player.is_alive else '–ú–µ—Ä—Ç–≤—ã–π'}\"\n            )\n\n            await query.edit_message_text(\n                role_modal_text,\n                reply_markup=InlineKeyboardMarkup([[\n                    InlineKeyboardButton(\"‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–µ–π—Å—Ç–≤–∏—è–º\", callback_data=f\"night_back_to_actions_{user_id}\")\n                ]])\n            )\n            return\n\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–≤—Ä–∞—Ç –∫ –¥–µ–π—Å—Ç–≤–∏—è–º\n        if len(data) >= 4 and data[1] == \"back\" and data[2] == \"to\" and data[3] == \"actions\":\n            await self.send_night_actions_menu(context, user_id)\n            return\n\n        if len(data) != 3:\n            return\n\n        action_type = data[1]\n        target_id = data[2]\n\n        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞\n        success = False\n        message = \"\"\n\n        if action_type == \"wolf\" and player.role == Role.WOLF:\n            if target_id == \"skip\":\n                success = True\n                message = \"‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥\"\n            else:\n                success = self.night_actions.set_wolf_target(user_id, int(target_id))\n                if success:\n                    target = self.game.players[int(target_id)]\n                    message = f\"üê∫ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–µ–ª—å: {target.username}\"\n                else:\n                    message = \"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å\"\n\n        elif action_type == \"fox\" and player.role == Role.FOX:\n            if target_id == \"skip\":\n                success = True\n                message = \"‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥\"\n            else:\n                success = self.night_actions.set_fox_target(user_id, int(target_id))\n                if success:\n                    target = self.game.players[int(target_id)]\n                    message = f\"ü¶ä –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ü–µ–ª—å –¥–ª—è –∫—Ä–∞–∂–∏: {target.username}\"\n                else:\n                    message = \"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å\"\n\n        elif action_type == \"beaver\" and player.role == Role.BEAVER:\n            if target_id == \"skip\":\n                success = True\n                message = \"‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥\"\n            else:\n                success = self.night_actions.set_beaver_target(user_id, int(target_id))\n                if success:\n                    target = self.game.players[int(target_id)]\n                    message = f\"ü¶¶ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–≤–µ—Ä—è –¥–ª—è –ø–æ–º–æ—â–∏: {target.username}\"\n                else:\n                    message = \"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å\"\n\n        elif action_type == \"mole\" and player.role == Role.MOLE:\n            if target_id == \"skip\":\n                success = True\n                message = \"‚è≠Ô∏è –í—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ —Ö–æ–¥\"\n            else:\n                success = self.night_actions.set_mole_target(user_id, int(target_id))\n                if success:\n                    target = self.game.players[int(target_id)]\n                    message = f\"ü¶´ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–≤–µ—Ä—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {target.username}\"\n                else:\n                    message = \"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å\"\n\n        else:\n            message = \"‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!\"\n\n        if success:\n            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º\n            await query.edit_message_text(\n                f\"{message}\\n\\n\"\n                \"üåô –ñ–¥–∏—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–æ—á–Ω–æ–π —Ñ–∞–∑—ã...\"\n            )\n        else:\n            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É\n            await query.edit_message_text(\n                f\"{message}\\n\\n\"\n                \"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Ü–µ–ª—å.\"\n            )\n\n    async def send_night_results(self, context: ContextTypes.DEFAULT_TYPE, results: Dict[str, List[str]]):\n        \"\"\"–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º\"\"\"\n        if not results:\n            return\n\n        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏\n        message = \"üåô –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏:\\n\\n\"\n\n        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n        if results[\"wolves\"]:\n            message += \"üê∫ –î–µ–π—Å—Ç–≤–∏—è –≤–æ–ª–∫–æ–≤:\\n\"\n            for action in results[\"wolves\"]:\n                message += f\"‚Ä¢ {action}\\n\"\n            message += \"\\n\"\n\n        if results[\"fox\"]:\n            message += \"ü¶ä –î–µ–π—Å—Ç–≤–∏—è –ª–∏—Å—ã:\\n\"\n            for action in results[\"fox\"]:\n                message += f\"‚Ä¢ {action}\\n\"\n            message += \"\\n\"\n\n        if results[\"beaver\"]:\n            message += \"ü¶¶ –î–µ–π—Å—Ç–≤–∏—è –±–æ–±—Ä–∞:\\n\"\n            for action in results[\"beaver\"]:\n                message += f\"‚Ä¢ {action}\\n\"\n            message += \"\\n\"\n\n        if results[\"mole\"]:\n            message += \"ü¶´ –î–µ–π—Å—Ç–≤–∏—è –∫—Ä–æ—Ç–∞:\\n\"\n            for action in results[\"mole\"]:\n                message += f\"‚Ä¢ {action}\\n\"\n            message += \"\\n\"\n\n        if results[\"deaths\"]:\n            message += \"üíÄ –°–º–µ—Ä—Ç–∏:\\n\"\n            for death in results[\"deaths\"]:\n                message += f\"‚Ä¢ {death}\\n\"\n            message += \"\\n\"\n\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —á–∞—Ç\n        try:\n            await context.bot.send_message(\n                chat_id=self.game.chat_id,\n                text=message\n            )\n        except Exception as e:\n            print(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏: {e}\")\n\n    async def send_role_reminders(self, context: ContextTypes.DEFAULT_TYPE):\n        \"\"\"–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ä–æ–ª—è—Ö –∏–≥—Ä–æ–∫–∞–º —Å –Ω–æ—á–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏\"\"\"\n        night_roles = [Role.WOLF, Role.FOX, Role.BEAVER, Role.MOLE]\n\n        for player in self.game.players.values():\n            if player.is_alive and player.role in night_roles:\n                role_info = self.get_role_info(player.role)\n\n                reminder_text = (\n                    f\"üåô –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤–∞—à–µ–π —Ä–æ–ª–∏:\\n\\n\"\n                    f\"üé≠ {role_info['name']}\\n\"\n                    f\"üìù {role_info['description']}\\n\\n\"\n                    \"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π:\"\n                )\n\n                try:\n                    await context.bot.send_message(\n                        chat_id=player.user_id,\n                        text=reminder_text\n                    )\n\n                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π\n                    await self.send_night_actions_menu(context, player.user_id)\n\n                except Exception as e:\n                    print(f\"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–≥—Ä–æ–∫—É {player.user_id}: {e}\")\n\n    def get_role_info(self, role: Role) -> Dict[str, str]:\n        \"\"\"–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–ª–∏\"\"\"\n        role_info = {\n            Role.WOLF: {\n                \"name\": \"üê∫ –í–æ–ª–∫\",\n                \"description\": \"–í—ã —Ö–∏—â–Ω–∏–∫! –í–º–µ—Å—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–ª–∫–∞–º–∏ –≤—ã –æ—Ö–æ—Ç–∏—Ç–µ—Å—å –ø–æ –Ω–æ—á–∞–º.\"\n            },\n            Role.FOX: {\n                \"name\": \"ü¶ä –õ–∏—Å–∞\",\n                \"description\": \"–í—ã —Ö–∏—â–Ω–∏–∫! –ö–∞–∂–¥—É—é –Ω–æ—á—å –≤—ã –≤–æ—Ä—É–µ—Ç–µ –∑–∞–ø–∞—Å—ã –µ–¥—ã —É –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π.\"\n            },\n            Role.HARE: {\n                \"name\": \"üê∞ –ó–∞—è—Ü\",\n                \"description\": \"–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –í—ã —Å–ø–∏—Ç–µ –≤—Å—é –Ω–æ—á—å –∏ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤ –¥–Ω–µ–≤–Ω—ã—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö.\"\n            },\n            Role.MOLE: {\n                \"name\": \"ü¶´ –ö—Ä–æ—Ç\",\n                \"description\": \"–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –ü–æ –Ω–æ—á–∞–º –≤—ã —Ä–æ–µ—Ç–µ –Ω–æ—Ä–∫–∏ –∏ —É–∑–Ω–∞—ë—Ç–µ –∫–æ–º–∞–Ω–¥—ã –¥—Ä—É–≥–∏—Ö –∑–≤–µ—Ä–µ–π.\"\n            },\n            Role.BEAVER: {\n                \"name\": \"ü¶¶ –ë–æ–±—ë—Ä\",\n                \"description\": \"–í—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π! –í—ã –º–æ–∂–µ—Ç–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É–∫—Ä–∞–¥–µ–Ω–Ω—ã–µ –∑–∞–ø–∞—Å—ã –¥—Ä—É–≥–∏–º –∑–≤–µ—Ä—è–º.\"\n            }\n        }\n        return role_info.get(role, {\"name\": \"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ\", \"description\": \"–†–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞\"})","size_bytes":12789},"pin_welcome.py":{"content":"\nimport asyncio\nimport logging\nfrom telegram import Bot\nfrom config import BOT_TOKEN\n\nasync def pin_welcome_message(chat_id: int):\n    \"\"\"–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏ –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\"\"\"\n    bot = Bot(token=BOT_TOKEN)\n    \n    from telegram import InlineKeyboardButton, InlineKeyboardMarkup\n    \n    keyboard = [\n        [InlineKeyboardButton(\"üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\", callback_data=\"welcome_start_game\")],\n        [InlineKeyboardButton(\"üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã\", callback_data=\"welcome_rules\")],\n        [InlineKeyboardButton(\"üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã\", callback_data=\"welcome_status\")]\n    ]\n    \n    reply_markup = InlineKeyboardMarkup(keyboard)\n    \n    welcome_text = (\n        \"üå≤ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –õ–µ—Å–Ω—É—é –í–æ–∑–Ω—é!** üå≤\\n\\n\"\n        \"üé≠ –≠—Ç–æ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∞—è —Ä–æ–ª–µ–≤–∞—è –∏–≥—Ä–∞ –≤ —Å—Ç–∏–ª–µ '–ú–∞—Ñ–∏—è' —Å –ª–µ—Å–Ω—ã–º–∏ –∑–≤–µ—Ä—É—à–∫–∞–º–∏!\\n\\n\"\n        \"üê∫ **–•–∏—â–Ω–∏–∫–∏:** –í–æ–ª–∫–∏ –∏ –õ–∏—Å–∞\\n\"\n        \"üê∞ **–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ:** –ó–∞–π—Ü—ã, –ö—Ä–æ—Ç –∏ –ë–æ–±—ë—Ä\\n\\n\"\n        \"üéØ **–¶–µ–ª—å:** –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!\\n\\n\"\n        \"üë• –î–ª—è –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 6 –∏–≥—Ä–æ–∫–æ–≤\\n\"\n        \"‚è∞ –ò–≥—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–æ—á–Ω—ã—Ö –∏ –¥–Ω–µ–≤–Ω—ã—Ö —Ñ–∞–∑\\n\\n\"\n        \"–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!\"\n    )\n    \n    try:\n        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ\n        message = await bot.send_message(\n            chat_id=chat_id,\n            text=welcome_text,\n            reply_markup=reply_markup,\n            parse_mode='Markdown'\n        )\n        \n        # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ\n        await bot.pin_chat_message(\n            chat_id=chat_id,\n            message_id=message.message_id,\n            disable_notification=True\n        )\n        \n        print(f\"‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ –≤ —á–∞—Ç–µ {chat_id}\")\n        return message.message_id\n        \n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ/–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}\")\n        return None\n\nif __name__ == \"__main__\":\n    # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ —á–∞—Ç–∞\n    chat_id = input(\"–í–≤–µ–¥–∏—Ç–µ ID —á–∞—Ç–∞ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: \")\n    try:\n        chat_id = int(chat_id)\n        asyncio.run(pin_welcome_message(chat_id))\n    except ValueError:\n        print(\"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —á–∞—Ç–∞\")\n","size_bytes":2631},"test_all.py":{"content":"\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\n–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\n\"\"\"\n\nimport asyncio\nimport sys\nimport traceback\nfrom game_logic import Game, GamePhase, Role, Team, Player\nfrom night_actions import NightActions\nfrom night_interface import NightInterface\nfrom config import MIN_PLAYERS, BOT_TOKEN\n\ndef test_imports():\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π\"\"\"\n    print(\"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...\")\n    \n    try:\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏\n        from game_logic import Game, GamePhase, Role, Team, Player\n        print(\"‚úÖ game_logic.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\")\n        \n        from night_actions import NightActions\n        print(\"‚úÖ night_actions.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\")\n        \n        from night_interface import NightInterface\n        print(\"‚úÖ night_interface.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\")\n        \n        from config import MIN_PLAYERS, BOT_TOKEN\n        print(\"‚úÖ config.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\")\n        \n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –º–æ–¥—É–ª–∏\n        from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup\n        from telegram.ext import Application, CommandHandler, CallbackQueryHandler\n        print(\"‚úÖ Telegram –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ\")\n        \n        return True\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}\")\n        traceback.print_exc()\n        return False\n\ndef test_game_creation():\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã...\")\n    \n    try:\n        game = Game(chat_id=12345)\n        print(f\"‚úÖ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {game.chat_id}\")\n        print(f\"üìä –ù–∞—á–∞–ª—å–Ω–∞—è —Ñ–∞–∑–∞: {game.phase.value}\")\n        print(f\"üë• –ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}\")\n        return game\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: {e}\")\n        traceback.print_exc()\n        return None\n\ndef test_player_management(game: Game):\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º–∏...\")\n    \n    try:\n        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤\n        players_data = [\n            (111, \"–í–æ–ª–∫1\"),\n            (222, \"–õ–∏—Å–∞1\"),\n            (333, \"–ó–∞—è—Ü1\"),\n            (444, \"–ó–∞—è—Ü2\"),\n            (555, \"–ö—Ä–æ—Ç1\"),\n            (666, \"–ë–æ–±—ë—Ä1\"),\n            (777, \"–ó–∞—è—Ü3\"),\n            (888, \"–í–æ–ª–∫2\"),\n        ]\n        \n        for user_id, username in players_data:\n            success = game.add_player(user_id, username)\n            print(f\"{'‚úÖ' if success else '‚ùå'} {username} ({user_id})\")\n        \n        print(f\"\\nüë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\")\n        print(f\"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}\")\n        \n        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã\n        if game.leave_game(777):\n            print(\"‚úÖ –ó–∞—è—Ü3 –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É\")\n        else:\n            print(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å –ó–∞—è—Ü3\")\n            \n        print(f\"üë• –ò–≥—Ä–æ–∫–æ–≤ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞: {len(game.players)}\")\n        \n        return True\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º–∏: {e}\")\n        traceback.print_exc()\n        return False\n\ndef test_game_start_and_roles(game: Game):\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏ —Ä–æ–ª–µ–π...\")\n    \n    try:\n        if game.start_game():\n            print(\"‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞\")\n            print(f\"üìä –§–∞–∑–∞: {game.phase.value}\")\n            print(f\"üîÑ –†–∞—É–Ω–¥: {game.current_round}\")\n            \n            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\n            print(\"\\nüé≠ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π:\")\n            role_counts = {}\n            for player in game.players.values():\n                role = player.role.value\n                team = player.team.value\n                role_counts[role] = role_counts.get(role, 0) + 1\n                print(f\"‚Ä¢ {player.username}: {role} ({team})\")\n            \n            print(f\"\\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–ª–µ–π:\")\n            for role, count in role_counts.items():\n                print(f\"‚Ä¢ {role}: {count}\")\n            \n            return True\n        else:\n            print(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\")\n            return False\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã: {e}\")\n        traceback.print_exc()\n        return False\n\ndef test_night_actions(game: Game):\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π...\")\n    \n    try:\n        night_actions = NightActions(game)\n        print(\"‚úÖ NightActions —Å–æ–∑–¥–∞–Ω\")\n        \n        # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º\n        wolves = game.get_players_by_role(Role.WOLF)\n        foxes = game.get_players_by_role(Role.FOX)\n        moles = game.get_players_by_role(Role.MOLE)\n        beavers = game.get_players_by_role(Role.BEAVER)\n        \n        print(f\"üê∫ –í–æ–ª–∫–æ–≤: {len(wolves)}\")\n        print(f\"ü¶ä –õ–∏—Å: {len(foxes)}\")\n        print(f\"ü¶´ –ö—Ä–æ—Ç–æ–≤: {len(moles)}\")\n        print(f\"ü¶¶ –ë–æ–±—Ä–æ–≤: {len(beavers)}\")\n        \n        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π\n        night_interface = NightInterface(game, night_actions)\n        print(\"‚úÖ NightInterface —Å–æ–∑–¥–∞–Ω\")\n        \n        return True\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {e}\")\n        traceback.print_exc()\n        return False\n\ndef test_voting_system(game: Game):\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...\")\n    \n    try:\n        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∏–≥—Ä—É –≤ —Ñ–∞–∑—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n        game.start_voting()\n        print(f\"üìä –§–∞–∑–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {game.phase.value}\")\n        \n        alive_players = game.get_alive_players()\n        print(f\"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(alive_players)}\")\n        \n        if len(alive_players) >= 2:\n            # –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\n            target = alive_players[0]  # –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ - —Ü–µ–ª—å\n            voters = alive_players[1:4]  # –°–ª–µ–¥—É—é—â–∏–µ 3 –≥–æ–ª–æ—Å—É—é—Ç\n            \n            for voter in voters:\n                success = game.vote(voter.user_id, target.user_id)\n                print(f\"{'‚úÖ' if success else '‚ùå'} {voter.username} –≥–æ–ª–æ—Å—É–µ—Ç –∑–∞ {target.username}\")\n            \n            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n            exiled = game.process_voting()\n            if exiled:\n                print(f\"üö´ –ò–∑–≥–Ω–∞–Ω: {exiled.username} ({exiled.role.value})\")\n            else:\n                print(\"ü§ù –ù–∏—á—å—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏\")\n            \n            return True\n        else:\n            print(\"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\")\n            return False\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {e}\")\n        traceback.print_exc()\n        return False\n\ndef test_game_end_conditions(game: Game):\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É—Å–ª–æ–≤–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã...\")\n    \n    try:\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n        winner = game.check_game_end()\n        predators = game.get_players_by_team(Team.PREDATORS)\n        herbivores = game.get_players_by_team(Team.HERBIVORES)\n        \n        print(f\"üê∫ –•–∏—â–Ω–∏–∫–æ–≤: {len(predators)}\")\n        print(f\"üê∞ –¢—Ä–∞–≤–æ—è–¥–Ω—ã—Ö: {len(herbivores)}\")\n        print(f\"üèÜ –ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner.value if winner else '–ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è'}\")\n        \n        return True\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {e}\")\n        traceback.print_exc()\n        return False\n\ndef test_bot_token():\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞\"\"\"\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...\")\n    \n    try:\n        if BOT_TOKEN and BOT_TOKEN != \"your_bot_token_here\":\n            print(\"‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω\")\n            print(f\"üîë –¢–æ–∫–µ–Ω: {BOT_TOKEN[:10]}...{BOT_TOKEN[-5:]}\")\n            return True\n        else:\n            print(\"‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ config.py\")\n            return False\n    except Exception as e:\n        print(f\"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞: {e}\")\n        return False\n\ndef main():\n    \"\"\"–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\"\"\"\n    print(\"üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ '–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è'\\n\")\n    \n    tests_passed = 0\n    total_tests = 6\n    \n    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç—ã\n    if test_imports():\n        tests_passed += 1\n    \n    # –¢–µ—Å—Ç 2: –¢–æ–∫–µ–Ω\n    if test_bot_token():\n        tests_passed += 1\n    \n    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã\n    game = test_game_creation()\n    if game:\n        tests_passed += 1\n        \n        # –¢–µ—Å—Ç 4: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏\n        if test_player_management(game):\n            tests_passed += 1\n            \n            # –¢–µ—Å—Ç 5: –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã –∏ —Ä–æ–ª–∏\n            if test_game_start_and_roles(game):\n                tests_passed += 1\n                \n                # –¢–µ—Å—Ç 6: –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\n                if test_night_actions(game):\n                    tests_passed += 1\n    \n    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã\n    print(f\"\\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\")\n    print(f\"üìä –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {tests_passed}/{total_tests}\")\n    \n    if tests_passed == total_tests:\n        print(\"üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.\")\n        return True\n    else:\n        print(\"‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.\")\n        return False\n\nif __name__ == \"__main__\":\n    success = main()\n    if success:\n        print(\"\\n‚úÖ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python bot.py\")\n    else:\n        print(\"\\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞\")\n    \n    sys.exit(0 if success else 1)\n","size_bytes":10966},"test_bot.py":{"content":"#!/usr/bin/env python3\r\n\"\"\"\r\n–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\r\n\"\"\"\r\n\r\nimport asyncio\r\nfrom game_logic import Game, GamePhase, Role, Team\r\nfrom night_actions import NightActions\r\n\r\ndef test_game_logic():\r\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É\"\"\"\r\n    print(\"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏...\")\r\n    \r\n    # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É\r\n    game = Game(chat_id=12345)\r\n    \r\n    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤\r\n    players_data = [\r\n        (111, \"Player1\"),\r\n        (222, \"Player2\"),\r\n        (333, \"Player3\"),\r\n        (444, \"Player4\"),\r\n        (555, \"Player5\"),\r\n        (666, \"Player6\"),\r\n    ]\r\n    \r\n    for user_id, username in players_data:\r\n        success = game.add_player(user_id, username)\r\n        print(f\"–î–æ–±–∞–≤–ª–µ–Ω –∏–≥—Ä–æ–∫ {username}: {'‚úÖ' if success else '‚ùå'}\")\r\n    \r\n    print(f\"\\nüë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\")\r\n    print(f\"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}\")\r\n    \r\n    # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É\r\n    if game.start_game():\r\n        print(\"üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\")\r\n        print(f\"üìä –§–∞–∑–∞: {game.phase.value}\")\r\n        print(f\"üîÑ –†–∞—É–Ω–¥: {game.current_round}\")\r\n        \r\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π\r\n        print(\"\\nüé≠ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π:\")\r\n        for player in game.players.values():\r\n            print(f\"‚Ä¢ {player.username}: {player.role.value} ({player.team.value})\")\r\n        \r\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã\r\n        predators = game.get_players_by_team(Team.PREDATORS)\r\n        herbivores = game.get_players_by_team(Team.HERBIVORES)\r\n        \r\n        print(f\"\\nüê∫ –•–∏—â–Ω–∏–∫–∏ ({len(predators)}):\")\r\n        for player in predators:\r\n            print(f\"‚Ä¢ {player.username} ({player.role.value})\")\r\n        \r\n        print(f\"\\nüê∞ –¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ ({len(herbivores)}):\")\r\n        for player in herbivores:\r\n            print(f\"‚Ä¢ {player.username} ({player.role.value})\")\r\n        \r\n        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\r\n        print(\"\\nüåô –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π...\")\r\n        night_actions = NightActions(game)\r\n        \r\n        # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤–æ–ª–∫–æ–≤\r\n        wolves = game.get_players_by_role(Role.WOLF)\r\n        if wolves:\r\n            target = [p for p in game.players.values() if p.role != Role.WOLF][0]\r\n            night_actions.set_wolf_target(wolves[0].user_id, target.user_id)\r\n            print(f\"üê∫ –í–æ–ª–∫ {wolves[0].username} –≤—ã–±—Ä–∞–ª —Ü–µ–ª—å: {target.username}\")\r\n        \r\n        # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ª–∏—Å—ã\r\n        foxes = game.get_players_by_role(Role.FOX)\r\n        if foxes:\r\n            target = [p for p in game.players.values() if p.role != Role.BEAVER][0]\r\n            night_actions.set_fox_target(foxes[0].user_id, target.user_id)\r\n            print(f\"ü¶ä –õ–∏—Å–∞ {foxes[0].username} –≤—ã–±—Ä–∞–ª–∞ —Ü–µ–ª—å: {target.username}\")\r\n        \r\n        # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∫—Ä–æ—Ç–∞\r\n        moles = game.get_players_by_role(Role.MOLE)\r\n        if moles:\r\n            target = [p for p in game.players.values() if p.user_id != moles[0].user_id][0]\r\n            night_actions.set_mole_target(moles[0].user_id, target.user_id)\r\n            print(f\"ü¶´ –ö—Ä–æ—Ç {moles[0].username} –≤—ã–±—Ä–∞–ª —Ü–µ–ª—å: {target.username}\")\r\n        \r\n        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è\r\n        results = night_actions.process_all_actions()\r\n        print(\"\\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–æ—á–∏:\")\r\n        for category, actions in results.items():\r\n            if actions:\r\n                print(f\"{category}:\")\r\n                for action in actions:\r\n                    print(f\"  ‚Ä¢ {action}\")\r\n        \r\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–æ—á–∏\r\n        print(f\"\\nüë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –ø–æ—Å–ª–µ –Ω–æ—á–∏: {len(game.get_alive_players())}\")\r\n        \r\n        # –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–Ω—å\r\n        game.start_day()\r\n        print(f\"‚òÄÔ∏è –ù–∞—á–∞–ª—Å—è –¥–µ–Ω—å. –§–∞–∑–∞: {game.phase.value}\")\r\n        \r\n        # –ù–∞—á–∏–Ω–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\r\n        game.start_voting()\r\n        print(f\"üó≥Ô∏è –ù–∞—á–∞–ª–æ—Å—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ. –§–∞–∑–∞: {game.phase.value}\")\r\n        \r\n        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–∞\r\n        alive_players = game.get_alive_players()\r\n        if len(alive_players) > 1:\r\n            target = alive_players[1]  # –í—Ç–æ—Ä–æ–π –∂–∏–≤–æ–π –∏–≥—Ä–æ–∫\r\n            for voter in alive_players[:3]:  # –ü–µ—Ä–≤—ã–µ —Ç—Ä–æ–µ –≥–æ–ª–æ—Å—É—é—Ç\r\n                if voter.user_id != target.user_id:\r\n                    game.vote(voter.user_id, target.user_id)\r\n                    print(f\"üó≥Ô∏è {voter.username} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ {target.username}\")\r\n        \r\n        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\r\n        exiled = game.process_voting()\r\n        if exiled:\r\n            print(f\"üö´ –ò–∑–≥–Ω–∞–Ω: {exiled.username} ({exiled.role.value})\")\r\n        else:\r\n            print(\"ü§ù –ù–∏—á—å—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏\")\r\n        \r\n        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã\r\n        winner = game.check_game_end()\r\n        if winner:\r\n            winner_text = \"–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ\" if winner == Team.HERBIVORES else \"–•–∏—â–Ω–∏–∫–∏\"\r\n            print(f\"üèÜ –ü–æ–±–µ–¥–∏–ª–∏: {winner_text}!\")\r\n        else:\r\n            print(\"üîÑ –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è...\")\r\n    \r\n    print(\"\\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\")\r\n\r\nif __name__ == \"__main__\":\r\n    test_game_logic()\r\n","size_bytes":5753},"test_new_features.py":{"content":"#!/usr/bin/env python3\r\n\"\"\"\r\n–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\r\n\"\"\"\r\n\r\nfrom game_logic import Game, GamePhase, Role, Team\r\n\r\ndef test_leave_game():\r\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã\"\"\"\r\n    print(\"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã...\")\r\n    \r\n    # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É\r\n    game = Game(chat_id=12345)\r\n    \r\n    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤\r\n    players_data = [\r\n        (111, \"Player1\"),\r\n        (222, \"Player2\"),\r\n        (333, \"Player3\"),\r\n        (444, \"Player4\"),\r\n        (555, \"Player5\"),\r\n        (666, \"Player6\"),\r\n    ]\r\n    \r\n    for user_id, username in players_data:\r\n        success = game.add_player(user_id, username)\r\n        print(f\"–î–æ–±–∞–≤–ª–µ–Ω –∏–≥—Ä–æ–∫ {username}: {'‚úÖ' if success else '‚ùå'}\")\r\n    \r\n    print(f\"\\nüë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}\")\r\n    \r\n    # –ò–≥—Ä–æ–∫ –ø–æ–∫–∏–¥–∞–µ—Ç –∏–≥—Ä—É\r\n    if game.leave_game(111):\r\n        print(\"‚úÖ Player1 —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É\")\r\n        print(f\"üë• –ò–≥—Ä–æ–∫–æ–≤ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞: {len(game.players)}\")\r\n    else:\r\n        print(\"‚ùå Player1 –Ω–µ —Å–º–æ–≥ –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É\")\r\n    \r\n    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\r\n    print(f\"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}\")\r\n    \r\n    # –ï—â–µ –æ–¥–∏–Ω –∏–≥—Ä–æ–∫ –ø–æ–∫–∏–¥–∞–µ—Ç –∏–≥—Ä—É\r\n    if game.leave_game(222):\r\n        print(\"‚úÖ Player2 —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É\")\r\n        print(f\"üë• –ò–≥—Ä–æ–∫–æ–≤ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞: {len(game.players)}\")\r\n        print(f\"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}\")\r\n    else:\r\n        print(\"‚ùå Player2 –Ω–µ —Å–º–æ–≥ –ø–æ–∫–∏–Ω—É—Ç—å –∏–≥—Ä—É\")\r\n\r\ndef test_game_phases():\r\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–∞–∑—ã –∏–≥—Ä—ã\"\"\"\r\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∑ –∏–≥—Ä—ã...\")\r\n    \r\n    game = Game(chat_id=12345)\r\n    \r\n    # –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤\r\n    for i in range(6):\r\n        game.add_player(100 + i, f\"Player{i+1}\")\r\n    \r\n    print(f\"üìä –§–∞–∑–∞ –¥–æ –Ω–∞—á–∞–ª–∞: {game.phase.value}\")\r\n    \r\n    # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É\r\n    if game.start_game():\r\n        print(f\"üìä –§–∞–∑–∞ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞: {game.phase.value}\")\r\n        print(f\"üîÑ –†–∞—É–Ω–¥: {game.current_round}\")\r\n        \r\n        # –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–Ω—å\r\n        game.start_day()\r\n        print(f\"üìä –§–∞–∑–∞ –¥–Ω—è: {game.phase.value}\")\r\n        \r\n        # –ù–∞—á–∏–Ω–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\r\n        game.start_voting()\r\n        print(f\"üìä –§–∞–∑–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {game.phase.value}\")\r\n        \r\n        # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –Ω–æ—á—å\r\n        game.start_night()\r\n        print(f\"üìä –§–∞–∑–∞ –Ω–æ–≤–æ–π –Ω–æ—á–∏: {game.phase.value}\")\r\n        print(f\"üîÑ –†–∞—É–Ω–¥: {game.current_round}\")\r\n    else:\r\n        print(\"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\")\r\n\r\ndef test_voting_system():\r\n    \"\"\"–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\"\"\"\r\n    print(\"\\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...\")\r\n    \r\n    game = Game(chat_id=12345)\r\n    \r\n    # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤\r\n    for i in range(6):\r\n        game.add_player(100 + i, f\"Player{i+1}\")\r\n    \r\n    # –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É\r\n    if game.start_game():\r\n        # –ù–∞—á–∏–Ω–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\r\n        game.start_voting()\r\n        \r\n        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–∞\r\n        alive_players = game.get_alive_players()\r\n        if len(alive_players) > 1:\r\n            target = alive_players[1]  # –í—Ç–æ—Ä–æ–π –∂–∏–≤–æ–π –∏–≥—Ä–æ–∫\r\n            \r\n            # –ü–µ—Ä–≤—ã–µ —Ç—Ä–æ–µ –≥–æ–ª–æ—Å—É—é—Ç –∑–∞ —Ü–µ–ª—å\r\n            for voter in alive_players[:3]:\r\n                if voter.user_id != target.user_id:\r\n                    success = game.vote(voter.user_id, target.user_id)\r\n                    print(f\"üó≥Ô∏è {voter.username} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ {target.username}: {'‚úÖ' if success else '‚ùå'}\")\r\n            \r\n            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ\r\n            exiled = game.process_voting()\r\n            if exiled:\r\n                print(f\"üö´ –ò–∑–≥–Ω–∞–Ω: {exiled.username} ({exiled.role.value})\")\r\n                print(f\"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –ø–æ—Å–ª–µ –∏–∑–≥–Ω–∞–Ω–∏—è: {len(game.get_alive_players())}\")\r\n            else:\r\n                print(\"ü§ù –ù–∏—á—å—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏\")\r\n        else:\r\n            print(\"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\")\r\n\r\nif __name__ == \"__main__\":\r\n    print(\"üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ '–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è'\")\r\n    print(\"=\" * 50)\r\n    \r\n    test_leave_game()\r\n    test_game_phases()\r\n    test_voting_system()\r\n    \r\n    print(\"\\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\")\r\n","size_bytes":5020},"replit.md":{"content":"# Overview\n\n\"–õ–µ—Å–Ω–∞—è –í–æ–∑–Ω—è\" is a Telegram bot that implements a forest-themed version of the classic Mafia party game. Players are assigned roles as various forest animals divided into two teams: predators (wolves and fox) and herbivores (hares, mole, and beaver). The game alternates between night and day phases, where predators hunt their prey while herbivores try to survive and identify the threats during voting phases.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# Recent Changes\n\n## September 2025\n- **Added authorization system**: Bot now only responds in channels specifically set up via `/setup_channel`\n- **Enhanced security**: Bot silently ignores commands in non-authorized channels\n- **Added `/remove_channel` command**: Administrators can remove channels from authorized list  \n- **Improved logging**: All authorization and permission events are logged for monitoring\n- **Channel management**: Authorized channels are tracked in memory and persist during bot session\n\n# System Architecture\n\n## Core Game Engine\nThe application follows a modular architecture with clear separation of concerns:\n\n- **Game Logic Core** (`game_logic.py`): Implements the main game state management, player roles, teams, and phase transitions using Python dataclasses and enums\n- **Night Actions System** (`night_actions.py`): Handles special abilities during night phases, including wolf attacks, fox stealing, beaver protection, and mole investigations\n- **Night Interface** (`night_interface.py`): Provides interactive Telegram inline keyboards for players to select targets and perform actions during night phases\n- **Bot Controller** (`bot.py`): Manages Telegram bot interactions, command handling, and coordinates between game components\n\n## Game State Management\nThe system uses in-memory storage with dictionary-based game sessions:\n- Games are stored per chat ID to support multiple concurrent games\n- Player states track roles, teams, alive status, and special conditions (fox theft count, beaver protection)\n- Global settings are managed through JSON configuration files for easy runtime adjustments\n\n## Telegram Integration\nThe bot leverages python-telegram-bot library for:\n- Command handlers for game control (`/start`, `/join`, `/leave`, `/start_game`, etc.)\n- Callback query handlers for interactive buttons and menus\n- Inline keyboards for night action selections and game navigation\n- Message pinning for persistent game status displays\n\n## Configuration System\nSettings are managed through multiple layers:\n- Environment variables for sensitive data (bot tokens)\n- JSON configuration files for game parameters and role distributions\n- Global settings class for runtime configuration management\n- Test mode support for reduced player requirements during development\n\n## Role Distribution Algorithm\nThe game implements a percentage-based role assignment system:\n- Wolves: 25% of players\n- Fox: 15% of players  \n- Hares: 35% of players\n- Mole: 15% of players\n- Beaver: 10% of players\n\nThis ensures balanced gameplay regardless of player count while maintaining the competitive dynamics between teams.\n\n# External Dependencies\n\n## Telegram Bot API\n- **python-telegram-bot[job-queue]**: Primary framework for Telegram bot functionality, including message handling, inline keyboards, and callback management\n- **BotFather Integration**: Bot token management and configuration through Telegram's official bot creation service\n\n## Configuration Management  \n- **python-dotenv**: Environment variable loading for secure token storage and configuration management\n\n## Runtime Environment\n- **Python 3.7+**: Core runtime requirement\n- **asyncio**: Asynchronous programming support for handling concurrent game sessions and Telegram API calls\n- **JSON**: Built-in configuration file management for game settings persistence\n\n## Development and Testing\n- **logging**: Built-in Python logging for debugging and monitoring bot operations\n- **unittest/testing modules**: Custom test files for validating game logic, night actions, and feature implementations\n\nThe bot is designed to run as a standalone application without external databases, using in-memory storage for game sessions and JSON files for persistent configuration.","size_bytes":4272}},"version":1}