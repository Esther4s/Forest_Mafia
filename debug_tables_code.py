#!/usr/bin/env python3
"""
–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–î–ê –¢–ê–ë–õ–ò–¶
"""

import os
import sys

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['DATABASE_URL'] = "postgresql://postgres:JOoSxKXEcnXImgvwCWsfcQQDlnWSDNyD@hopper.proxy.rlwy.net:23049/railway"

def debug_tables_code():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–¥–∞ —Ç–∞–±–ª–∏—Ü"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–î–ê –¢–ê–ë–õ–ò–¶")
    print("=" * 50)
    
    try:
        from database_psycopg2 import init_db, close_db, create_tables, fetch_query
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        print("\n1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        db = init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...")
        check_tables_query = """
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name IN ('users', 'games', 'players', 'stats', 'chat_settings')
        ORDER BY table_name
        """
        
        existing_tables = fetch_query(check_tables_query)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü: {len(existing_tables)}")
        for table in existing_tables:
            print(f"  - {table['table_name']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É inventory
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã inventory...")
        inventory_check_query = """
        SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = 'inventory'
        );
        """
        inventory_exists = fetch_query(inventory_check_query)
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ inventory —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {inventory_exists[0][0] if inventory_exists else False}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É shop
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã shop...")
        shop_check_query = """
        SELECT EXISTS (
            SELECT FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name = 'shop'
        );
        """
        shop_exists = fetch_query(shop_check_query)
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ shop —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {shop_exists[0][0] if shop_exists else False}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º create_tables()
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ create_tables()...")
        try:
            result = create_tables()
            print(f"‚úÖ create_tables() –≤–µ—Ä–Ω—É–ª: {result}")
            print(f"‚úÖ –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {type(result)}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ create_tables(): {e}")
            import traceback
            print(f"‚ùå Traceback: {traceback.format_exc()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ create_tables
        print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ø–æ—Å–ª–µ create_tables...")
        all_tables_query = """
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public'
        ORDER BY table_name
        """
        all_tables = fetch_query(all_tables_query)
        print(f"üìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {len(all_tables)}")
        for table in all_tables:
            print(f"  - {table['table_name']}")
        
        close_db()
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        print(f"‚ùå Traceback: {traceback.format_exc()}")
        return False

def test_specific_functions():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–ö–†–ï–¢–ù–´–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 50)
    
    try:
        from database_psycopg2 import get_shop_items, get_user_balance, create_user
        
        # –¢–µ—Å—Ç get_shop_items
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç get_shop_items()...")
        try:
            items = get_shop_items()
            print(f"‚úÖ get_shop_items() –≤–µ—Ä–Ω—É–ª: {len(items)} —Ç–æ–≤–∞—Ä–æ–≤")
            for item in items[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  - {item['item_name']}: {item['price']} –æ—Ä–µ—à–∫–æ–≤")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_shop_items(): {e}")
        
        # –¢–µ—Å—Ç get_user_balance
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç get_user_balance()...")
        try:
            balance = get_user_balance(123456789)
            print(f"‚úÖ get_user_balance() –≤–µ—Ä–Ω—É–ª: {balance}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ get_user_balance(): {e}")
        
        # –¢–µ—Å—Ç create_user
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç create_user()...")
        try:
            user_id = create_user(999999999, "test_user")
            print(f"‚úÖ create_user() –≤–µ—Ä–Ω—É–ª: {user_id}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ create_user(): {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        import traceback
        print(f"‚ùå Traceback: {traceback.format_exc()}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üö® –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–î–ê –¢–ê–ë–õ–ò–¶")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü
    tables_ok = debug_tables_code()
    
    # –¢–µ—Å—Ç 2: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    functions_ok = test_specific_functions()
    
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    print(f"–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if tables_ok else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    print(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π: {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if functions_ok else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}")
    
    if tables_ok and functions_ok:
        print("\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        print("üí° –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–æ–¥–µ –±–æ—Ç–∞ –∏–ª–∏ –ª–æ–≥–∏–∫–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
    else:
        print("\n‚ùå –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –ö–û–î–ï!")
        print("üí° –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ —Ç–∞–±–ª–∏—Ü")
    
    return tables_ok and functions_ok

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
