#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã player_stats –≤ PostgreSQL
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä
"""

import os
import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent))

from database import init_database, get_db_session
from sqlalchemy import text

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def fix_player_stats_table():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É player_stats, –¥–æ–±–∞–≤–ª—è—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã player_stats...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        init_database()
        session = get_db_session()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —É–∂–µ –µ—Å—Ç—å
        check_columns_query = text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'player_stats'
        """)
        
        result = session.execute(check_columns_query)
        existing_columns = result.fetchall()
        column_names = [row[0] for row in existing_columns]
        
        print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {column_names}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ player_id (—Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
        has_player_id = 'player_id' in column_names
        has_id = 'id' in column_names
        
        if has_player_id and not has_id:
            print(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å player_id, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É")
            try:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
                create_new_table_query = text("""
                    CREATE TABLE player_stats_new (
                        id SERIAL PRIMARY KEY,
                        user_id BIGINT NOT NULL,
                        total_games INTEGER DEFAULT 0,
                        games_won INTEGER DEFAULT 0,
                        games_lost INTEGER DEFAULT 0,
                        times_wolf INTEGER DEFAULT 0,
                        times_fox INTEGER DEFAULT 0,
                        times_hare INTEGER DEFAULT 0,
                        times_mole INTEGER DEFAULT 0,
                        times_beaver INTEGER DEFAULT 0,
                        kills_made INTEGER DEFAULT 0,
                        votes_received INTEGER DEFAULT 0,
                        last_played TIMESTAMP,
                        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                    )
                """)
                session.execute(create_new_table_query)
                
                # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
                copy_data_query = text("""
                    INSERT INTO player_stats_new (user_id, total_games, games_won, games_lost, 
                        times_wolf, times_fox, times_hare, times_mole, times_beaver, 
                        kills_made, votes_received, last_played, created_at, updated_at)
                    SELECT user_id, 
                        COALESCE(total_games, 0),
                        COALESCE(games_won, 0),
                        COALESCE(games_lost, 0),
                        COALESCE(times_wolf, 0),
                        COALESCE(times_fox, 0),
                        COALESCE(times_hare, 0),
                        COALESCE(times_mole, 0),
                        COALESCE(times_beaver, 0),
                        COALESCE(kills_made, 0),
                        COALESCE(votes_received, 0),
                        last_played,
                        COALESCE(created_at, CURRENT_TIMESTAMP),
                        COALESCE(updated_at, CURRENT_TIMESTAMP)
                    FROM player_stats
                """)
                session.execute(copy_data_query)
                
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
                session.execute(text("DROP TABLE player_stats"))
                session.execute(text("ALTER TABLE player_stats_new RENAME TO player_stats"))
                
                print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã player_stats –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ (–ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞)")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã: {e}")
        elif has_id:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∫–æ–ª–æ–Ω–∫–∏ id
            check_id_type_query = text("""
                SELECT data_type 
                FROM information_schema.columns 
                WHERE table_name = 'player_stats' AND column_name = 'id'
            """)
            result = session.execute(check_id_type_query)
            id_type = result.fetchone()
            if id_type and id_type[0] != 'integer':
                print(f"‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ id –∏–º–µ–µ—Ç —Ç–∏–ø {id_type[0]}, –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ INTEGER")
                try:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
                    create_new_table_query = text("""
                        CREATE TABLE player_stats_new (
                            id SERIAL PRIMARY KEY,
                            user_id BIGINT NOT NULL,
                            total_games INTEGER DEFAULT 0,
                            games_won INTEGER DEFAULT 0,
                            games_lost INTEGER DEFAULT 0,
                            times_wolf INTEGER DEFAULT 0,
                            times_fox INTEGER DEFAULT 0,
                            times_hare INTEGER DEFAULT 0,
                            times_mole INTEGER DEFAULT 0,
                            times_beaver INTEGER DEFAULT 0,
                            kills_made INTEGER DEFAULT 0,
                            votes_received INTEGER DEFAULT 0,
                            last_played TIMESTAMP,
                            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                        )
                    """)
                    session.execute(create_new_table_query)
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
                    copy_data_query = text("""
                        INSERT INTO player_stats_new (user_id, total_games, games_won, games_lost, 
                            times_wolf, times_fox, times_hare, times_mole, times_beaver, 
                            kills_made, votes_received, last_played, created_at, updated_at)
                        SELECT user_id, total_games, games_won, games_lost, 
                            times_wolf, times_fox, times_hare, times_mole, times_beaver, 
                            kills_made, votes_received, last_played, created_at, updated_at
                        FROM player_stats
                    """)
                    session.execute(copy_data_query)
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é
                    session.execute(text("DROP TABLE player_stats"))
                    session.execute(text("ALTER TABLE player_stats_new RENAME TO player_stats"))
                    
                    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã player_stats –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã: {e}")
        
        # –°–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
        columns_to_add = [
            ("total_games", "INTEGER DEFAULT 0"),
            ("games_won", "INTEGER DEFAULT 0"),
            ("games_lost", "INTEGER DEFAULT 0"),
            ("times_wolf", "INTEGER DEFAULT 0"),
            ("times_fox", "INTEGER DEFAULT 0"),
            ("times_hare", "INTEGER DEFAULT 0"),
            ("times_mole", "INTEGER DEFAULT 0"),
            ("times_beaver", "INTEGER DEFAULT 0"),
            ("kills_made", "INTEGER DEFAULT 0"),
            ("votes_received", "INTEGER DEFAULT 0"),
            ("last_played", "TIMESTAMP"),
            ("created_at", "TIMESTAMP DEFAULT CURRENT_TIMESTAMP"),
            ("updated_at", "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        for column_name, column_def in columns_to_add:
            if column_name not in column_names:
                try:
                    alter_query = text(f"ALTER TABLE player_stats ADD COLUMN {column_name} {column_def}")
                    session.execute(alter_query)
                    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞: {column_name}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–∫–∏ {column_name}: {e}")
            else:
                print(f"‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ {column_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        session.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è player_stats –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ player_stats: {e}")
        session.rollback()
        return False
    finally:
        if 'session' in locals():
            session.close()

if __name__ == "__main__":
    fix_player_stats_table()
