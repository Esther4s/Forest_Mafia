#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –≤ Railway
"""

import os
import subprocess
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def quick_deploy():
    """–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Railway"""
    logger.info("üöÄ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Railway...")
    
    try:
        # 1. –û–±–Ω–æ–≤–ª—è–µ–º database_psycopg2.py
        logger.info("1. –û–±–Ω–æ–≤–ª—è–µ–º database_psycopg2.py...")
        subprocess.run([sys.executable, 'integrate_enhanced_effects.py'], check=True)
        
        # 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
        startup_script = '''#!/bin/bash
echo "üöÄ –ó–∞–ø—É—Å–∫ Forest Mafia Bot —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏..."

# –û–±–Ω–æ–≤–ª—è–µ–º –ë–î –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
python3 -c "
try:
    from improve_active_effects_table import improve_active_effects_table
    improve_active_effects_table()
    print('‚úÖ –ë–î –æ–±–Ω–æ–≤–ª–µ–Ω–∞')
except Exception as e:
    print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ë–î: {e}')
"

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
python3 bot.py
'''
        
        with open('start.sh', 'w', encoding='utf-8') as f:
            f.write(startup_script)
        os.chmod('start.sh', 0o755)
        
        # 3. –°–æ–∑–¥–∞–µ–º Procfile –¥–ª—è Railway
        with open('Procfile', 'w', encoding='utf-8') as f:
            f.write('web: bash start.sh\n')
        
        # 4. –ö–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º
        logger.info("2. –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
        subprocess.run(['git', 'add', '.'], check=True)
        subprocess.run(['git', 'commit', '-m', 'üöÄ Railway: –ë—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —ç—Ñ—Ñ–µ–∫—Ç–æ–≤'], check=True)
        
        logger.info("3. –ü—É—à–∏–º –≤ Railway...")
        subprocess.run(['git', 'push', 'origin', 'master'], check=True)
        
        logger.info("‚úÖ –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ Railway Dashboard")
        
        return True
        
    except subprocess.CalledProcessError as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    import sys
    success = quick_deploy()
    sys.exit(0 if success else 1)
