#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import traceback

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['BOT_TOKEN'] = 'test_token_123456789'
os.environ['DATABASE_URL'] = 'postgresql://postgres:JOoSxKXEcnXImgvwCWsfcQQDlnWSDNyD@hopper.proxy.rlwy.net:23049/railway'
os.environ['POSTGRES_USER'] = 'forest_mafia'
os.environ['POSTGRES_PASSWORD'] = 'forest_mafia_password'
os.environ['ENVIRONMENT'] = 'test'
os.environ['LOG_LEVEL'] = 'DEBUG'

print("üöÄ –£–ü–†–û–©–ï–ù–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ '–õ–ï–° –ò –í–û–õ–ö–ò'")
print("=" * 60)

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        from game_logic import Game, GamePhase, Role, Team, Player
        print("‚úÖ game_logic.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from night_actions import NightActions
        print("‚úÖ night_actions.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from night_interface import NightInterface
        print("‚úÖ night_interface.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from config import config, BOT_TOKEN
        print("‚úÖ config.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
        from telegram.ext import Application, CommandHandler, CallbackQueryHandler
        print("‚úÖ Telegram –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        traceback.print_exc()
        return False

def test_game_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã...")
    
    try:
        from game_logic import Game
        game = Game(chat_id=12345)
        print(f"‚úÖ –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {game.chat_id}")
        print(f"üìä –ù–∞—á–∞–ª—å–Ω–∞—è —Ñ–∞–∑–∞: {game.phase.value}")
        print(f"üë• –ò–≥—Ä–æ–∫–æ–≤: {len(game.players)}")
        return game
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: {e}")
        traceback.print_exc()
        return None

def test_player_management(game):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º–∏...")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤
        players_data = [
            (111, "–í–æ–ª–∫1"),
            (222, "–õ–∏—Å–∞1"),
            (333, "–ó–∞—è—Ü1"),
            (444, "–ó–∞—è—Ü2"),
            (555, "–ö—Ä–æ—Ç1"),
            (666, "–ë–æ–±—ë—Ä1"),
            (777, "–ó–∞—è—Ü3"),
            (888, "–í–æ–ª–∫2"),
        ]
        
        for user_id, username in players_data:
            success = game.add_player(user_id, username)
            print(f"{'‚úÖ' if success else '‚ùå'} {username} ({user_id})")
        
        print(f"\nüë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(game.players)}")
        print(f"üéÆ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É: {'‚úÖ' if game.can_start_game() else '‚ùå'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã
        if game.leave_game(777):
            print("‚úÖ –ó–∞—è—Ü3 –ø–æ–∫–∏–Ω—É–ª –∏–≥—Ä—É")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–±—Ä–∞—Ç—å –ó–∞—è—Ü3")
            
        print(f"üë• –ò–≥—Ä–æ–∫–æ–≤ –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞: {len(game.players)}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º–∏: {e}")
        traceback.print_exc()
        return False

def test_game_start_and_roles(game):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏ —Ä–æ–ª–µ–π...")
    
    try:
        if game.start_game():
            print("‚úÖ –ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–∞")
            print(f"üìä –§–∞–∑–∞: {game.phase.value}")
            print(f"üîÑ –†–∞—É–Ω–¥: {game.current_round}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
            print("\nüé≠ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π:")
            role_counts = {}
            for player in game.players.values():
                role = player.role.value
                team = player.team.value
                role_counts[role] = role_counts.get(role, 0) + 1
                print(f"‚Ä¢ {player.username}: {role} ({team})")
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–ª–µ–π:")
            for role, count in role_counts.items():
                print(f"‚Ä¢ {role}: {count}")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã: {e}")
        traceback.print_exc()
        return False

def test_night_actions(game):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π...")
    
    try:
        from night_actions import NightActions
        from night_interface import NightInterface
        from game_logic import Role
        
        night_actions = NightActions(game)
        print("‚úÖ NightActions —Å–æ–∑–¥–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —Ä–æ–ª—è–º
        wolves = game.get_players_by_role(Role.WOLF)
        foxes = game.get_players_by_role(Role.FOX)
        moles = game.get_players_by_role(Role.MOLE)
        beavers = game.get_players_by_role(Role.BEAVER)
        
        print(f"üê∫ –í–æ–ª–∫–æ–≤: {len(wolves)}")
        print(f"ü¶ä –õ–∏—Å: {len(foxes)}")
        print(f"ü¶´ –ö—Ä–æ—Ç–æ–≤: {len(moles)}")
        print(f"ü¶¶ –ë–æ–±—Ä–æ–≤: {len(beavers)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        night_interface = NightInterface(game, night_actions)
        print("‚úÖ NightInterface —Å–æ–∑–¥–∞–Ω")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {e}")
        traceback.print_exc()
        return False

def test_voting_system(game):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è...")
    
    try:
        from game_logic import Team
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∏–≥—Ä—É –≤ —Ñ–∞–∑—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
        game.start_voting()
        print(f"üìä –§–∞–∑–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {game.phase.value}")
        
        alive_players = game.get_alive_players()
        print(f"üë• –ñ–∏–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(alive_players)}")
        
        if len(alive_players) >= 2:
            # –°–∏–º—É–ª–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
            target = alive_players[0]  # –ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ - —Ü–µ–ª—å
            voters = alive_players[1:4]  # –°–ª–µ–¥—É—é—â–∏–µ 3 –≥–æ–ª–æ—Å—É—é—Ç
            
            for voter in voters:
                success = game.vote(voter.user_id, target.user_id)
                print(f"{'‚úÖ' if success else '‚ùå'} {voter.username} –≥–æ–ª–æ—Å—É–µ—Ç –∑–∞ {target.username}")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            exiled = game.process_voting()
            if exiled:
                print(f"üö´ –ò–∑–≥–Ω–∞–Ω: {exiled.username} ({exiled.role.value})")
            else:
                print("ü§ù –ù–∏—á—å—è –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏")
            
            return True
        else:
            print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {e}")
        traceback.print_exc()
        return False

def test_bot_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞...")
    
    try:
        from bot import ForestWolvesBot
        
        bot = ForestWolvesBot()
        if bot:
            print("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å–æ–∑–¥–∞–Ω")
            print(f"üéÆ –ò–≥—Ä: {len(bot.games)}")
            print(f"üë• –ò–≥—Ä–æ–∫–æ–≤: {len(bot.player_games)}")
            print(f"üåô –ù–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π: {len(bot.night_actions)}")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        traceback.print_exc()
        return False

def test_telegram_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram...")
    
    try:
        from telegram import Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup
        from telegram.ext import Application, CommandHandler, CallbackQueryHandler
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è Application)
        keyboard = [[InlineKeyboardButton("–¢–µ—Å—Ç", callback_data="test")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        if not reply_markup:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
        bot = Bot(token="test_token")
        if not bot:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å Bot")
            return False
        
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram: {e}")
        traceback.print_exc()
        return False

def test_file_structure():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤...")
    
    required_files = [
        'bot.py',
        'config.py',
        'game_logic.py',
        'night_actions.py',
        'night_interface.py',
        'database.py',
        'requirements.txt',
        'Dockerfile',
        'docker-compose.yml'
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
    
    if missing_files:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    return True

def test_dependencies():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        # –ß–∏—Ç–∞–µ–º requirements.txt
        with open('requirements.txt', 'r', encoding='utf-8') as f:
            requirements = f.read().strip().split('\n')
        
        if not requirements or requirements == ['']:
            print("‚ùå requirements.txt –ø—É—Å—Ç")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        required_packages = [
            'python-telegram-bot',
            'sqlalchemy',
            'psycopg2-binary',
            'python-dotenv'
        ]
        
        missing_packages = []
        for package in required_packages:
            if not any(package in req for req in requirements):
                missing_packages.append(package)
        
        if missing_packages:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
            return False
        
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    tests_passed = 0
    total_tests = 10
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç—ã
    if test_imports():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤
    if test_file_structure():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 3: –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if test_dependencies():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã
    game = test_game_creation()
    if game:
        tests_passed += 1
        
        # –¢–µ—Å—Ç 5: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞–º–∏
        if test_player_management(game):
            tests_passed += 1
            
            # –¢–µ—Å—Ç 6: –ù–∞—á–∞–ª–æ –∏–≥—Ä—ã –∏ —Ä–æ–ª–∏
            if test_game_start_and_roles(game):
                tests_passed += 1
                
                # –¢–µ—Å—Ç 7: –ù–æ—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                if test_night_actions(game):
                    tests_passed += 1
                    
                    # –¢–µ—Å—Ç 8: –°–∏—Å—Ç–µ–º–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
                    if test_voting_system(game):
                        tests_passed += 1
    
    # –¢–µ—Å—Ç 9: –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
    if test_bot_creation():
        tests_passed += 1
    
    # –¢–µ—Å—Ç 10: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram
    if test_telegram_integration():
        tests_passed += 1
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print(f"\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {tests_passed}/{total_tests}")
    
    if tests_passed == total_tests:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
        print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ò–≥—Ä–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚ö†Ô∏è –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¢–µ—Å—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        return False

if __name__ == "__main__":
    success = main()
    if success:
        print("\n‚úÖ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python bot.py")
    else:
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞")
    
    sys.exit(0 if success else 1)
